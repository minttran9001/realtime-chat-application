[{"C:\\Website By Mint\\realtime-chat-application\\src\\reportWebVitals.js":"1","C:\\Website By Mint\\realtime-chat-application\\src\\App.js":"2","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\LoginPage\\index.js":"3","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\HomePage\\index.js":"4","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\index.js":"5","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\SignUpPage\\index.js":"6","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Header\\index.js":"7","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Input\\index.js":"8","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Button\\index.js":"9","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Title\\index.js":"10","C:\\Website By Mint\\realtime-chat-application\\src\\index.js":"11","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Card\\index.js":"12","C:\\Website By Mint\\realtime-chat-application\\src\\store\\index.js":"13","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\auth.js":"14","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\index.js":"15","C:\\Website By Mint\\realtime-chat-application\\src\\database\\firebase.js":"16","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\index.js":"17","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\authReducer.js":"18","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Private\\index.js":"19","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\constants.js":"20","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\user.js":"21","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\userReducer.js":"22","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Error\\index.js":"23","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\ProfilePage\\index.js":"24","C:\\Website By Mint\\realtime-chat-application\\src\\components\\ModalPost\\index.js":"25","C:\\Website By Mint\\realtime-chat-application\\src\\components\\PostDetail\\index.js":"26","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\post.js":"27"},{"size":362,"mtime":1606470506103,"results":"28","hashOfConfig":"29"},{"size":1569,"mtime":1609404890696,"results":"30","hashOfConfig":"29"},{"size":1706,"mtime":1609310039203,"results":"31","hashOfConfig":"29"},{"size":10846,"mtime":1609960130308,"results":"32","hashOfConfig":"29"},{"size":247,"mtime":1608998879017,"results":"33","hashOfConfig":"29"},{"size":2147,"mtime":1609310046306,"results":"34","hashOfConfig":"29"},{"size":1987,"mtime":1609404907984,"results":"35","hashOfConfig":"29"},{"size":653,"mtime":1609004586761,"results":"36","hashOfConfig":"29"},{"size":223,"mtime":1609956302749,"results":"37","hashOfConfig":"29"},{"size":201,"mtime":1609005437418,"results":"38","hashOfConfig":"29"},{"size":360,"mtime":1609052155855,"results":"39","hashOfConfig":"29"},{"size":191,"mtime":1609002388353,"results":"40","hashOfConfig":"29"},{"size":320,"mtime":1609184533296,"results":"41","hashOfConfig":"29"},{"size":4583,"mtime":1609219758682,"results":"42","hashOfConfig":"29"},{"size":240,"mtime":1609145255369,"results":"43","hashOfConfig":"29"},{"size":556,"mtime":1609400435128,"results":"44","hashOfConfig":"29"},{"size":46,"mtime":1609144452389,"results":"45","hashOfConfig":"29"},{"size":1729,"mtime":1609225843900,"results":"46","hashOfConfig":"29"},{"size":517,"mtime":1609053109445,"results":"47","hashOfConfig":"29"},{"size":435,"mtime":1609961610787,"results":"48","hashOfConfig":"29"},{"size":5146,"mtime":1609401269833,"results":"49","hashOfConfig":"29"},{"size":1658,"mtime":1609340475211,"results":"50","hashOfConfig":"29"},{"size":308,"mtime":1609169470062,"results":"51","hashOfConfig":"29"},{"size":4674,"mtime":1609959655960,"results":"52","hashOfConfig":"29"},{"size":2496,"mtime":1609961573849,"results":"53","hashOfConfig":"29"},{"size":2497,"mtime":1609956767152,"results":"54","hashOfConfig":"29"},{"size":130,"mtime":1609961714631,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"9th9bh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Website By Mint\\realtime-chat-application\\src\\reportWebVitals.js",[],["124","125"],"C:\\Website By Mint\\realtime-chat-application\\src\\App.js",["126"],"import React from 'react'\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SignUp from \"./containers/SignUpPage/index\";\nimport Login from \"./containers/LoginPage/index\";\nimport Home from \"./containers/HomePage/index\";\nimport Profile from './containers/ProfilePage/index'\nimport PrivateRoute from \"./components/Private/index.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLoggedInUser } from \"./actions\";\nfunction App() {\n  const dispatch = useDispatch()\n  const auth = useSelector(state=>state.auth)\n\n React.useEffect(()=>{\n    if(!auth.authenticated)\n    {\n      dispatch(isLoggedInUser())\n    }\n  },[])\n  const routes = [\n    { path: \"/realtime-chat-application\", name: \"Home\", component: Home },\n    { path: \"/login\", name: \"Login\", component: Login },\n    { path: \"/signup\", name: \"Sign Up\", component: SignUp },\n    { path: \"/profile\", name: \"Profile\", component: Profile },\n  ];\n  return (\n    <div className=\"App\">\n      <Router>\n        {routes.map((route) => {\n          return (\n            <div  key={route.name}>\n              {route.name === \"Home\" ? (\n                <PrivateRoute\n                  path={route.path}\n                  component={route.component}\n                  exact\n                 \n                />\n              ) : (\n                <Route\n                  path={route.path}\n                  component={route.component}\n                />\n              )}\n            </div>\n          );\n        })}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["127","128"],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\LoginPage\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\HomePage\\index.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\SignUpPage\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Header\\index.js",["145","146"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser, logout } from \"../../actions\";\r\nexport default function Header() {\r\n  const auth = useSelector(state=>state.auth)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = ()=>{\r\n      dispatch(logout(auth.uid))\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navBar\">\r\n        <div className=\"navSide\">\r\n          <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/realtime-chat-application\" className=\"navLink\">\r\n                HOME\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/about\" className=\"navLink\">\r\n                ABOUT\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"logoArea\">\r\n          <img src=\"https://www.williamdollace.it/wp-content/themes/williamdollacetheme/images/logo.svg\" />\r\n        </div>\r\n        <div className=\"navSide\">\r\n          {!auth.authenticated ? <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/login\" className=\"navLink\">\r\n                LOGIN\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/signup\" className=\"navLink\">\r\n                SIGN UP\r\n              </NavLink>\r\n            </li>\r\n          </ul>:\r\n          <ul className=\"navWrap\">\r\n          <li className=\"navItem\">\r\n          <NavLink to=\"/profile\" className=\"navLink\">\r\n               {auth.firstName} PROFILE\r\n              </NavLink>\r\n          </li>\r\n          <li className=\"navItem\">\r\n            <Link to=\"#\" onClick={handleLogout} className=\"navLink\">\r\n              LOG OUT\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Input\\index.js",[],["147","148"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Button\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Title\\index.js",[],["149","150"],"C:\\Website By Mint\\realtime-chat-application\\src\\index.js",["151"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n",["152","153"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Card\\index.js",[],["154","155"],"C:\\Website By Mint\\realtime-chat-application\\src\\store\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\auth.js",["156"],"import firebase from \"../database/firebase\";\r\nimport { authConstants } from \"./constants\";\r\nexport const signUp = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(),\r\n                uid: data.user.uid,\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                const loggedUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\r\n                  \"user\",\r\n                  JSON.stringify({\r\n                    loggedUser,\r\n                  })\r\n                );\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: loggedUser },\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: err,\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore()\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline : true\r\n          })\r\n          .then(() => {\r\n            var name = data.user.displayName;\r\n            name = name.split(\" \");\r\n            var stringArray = new Array();\r\n            for (var i = 0; i < name.length; i++) {\r\n              stringArray.push(name[i]);\r\n            }\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n            const loggedUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n            };\r\n            localStorage.setItem(\r\n              \"user\",\r\n              JSON.stringify({\r\n                user: loggedUser,\r\n              })\r\n            );\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n              payload: { user: loggedUser },\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: err.message },\r\n        });\r\n      })\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n        payload: { user: user.user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n",["157","158"],"C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\database\\firebase.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\authReducer.js",["159"],"import { authConstants } from \"../actions/constants\"\r\n\r\nconst initialState = {\r\n    firstName : '',\r\n    lastName : '',\r\n    uid : '',\r\n    email : '',\r\n    authenticating : false,\r\n    authenticated : false,\r\n    error : null\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case `${authConstants.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating:true,\r\n            }\r\n            return state\r\n        case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n            debugger\r\n            state = {\r\n                ...state,\r\n                firstName : action.payload.user.firstName,\r\n                lastName : action.payload.user.lastName,\r\n                uid : action.payload.user.uid,\r\n                email : action.payload.user.email,\r\n                authenticated:true,\r\n                authenticating:false,\r\n                error:null,\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated:false,\r\n                authenticating:false,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n            state={\r\n                ...initialState,\r\n\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n            state={\r\n                ...state,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Private\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\constants.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\user.js",["160","161","162","163","164","165"],"import { userConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const getRealTimeUser = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const unsubscribe = db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"!=\", uid)\r\n      .onSnapshot(function (snap) {\r\n        const users = [];\r\n        snap.forEach((doc) => {\r\n          if (doc.data().length != users.length) {\r\n            users.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n          payload: { users },\r\n        });\r\n      });\r\n    return unsubscribe;\r\n  };\r\n};\r\nexport const updateMessage = ({ msgObj, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    if (type != \"file\") {\r\n      db.collection(\"conversations\")\r\n        .add({\r\n          ...msgObj,\r\n          type: \"text\",\r\n          isView: false,\r\n          createdAt: new Date(),\r\n        })\r\n        .then((data) => {\r\n          dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n            payload: { error: error.message },\r\n          });\r\n        });\r\n    } else {\r\n      const ref = firebase.storage().ref();\r\n      const name = new Date() + \"-\" + msgObj.file.name;\r\n      const metaData = {\r\n        contentType: msgObj.file.type,\r\n      };\r\n      const task = ref.child(name).put(msgObj.file, metaData);\r\n      task.then((snapshot) => {\r\n        snapshot.ref.getDownloadURL().then((url) => {\r\n          db.collection(\"conversations\")\r\n            .add({\r\n              user_uid_1: msgObj.user_uid_1,\r\n              user_uid_2: msgObj.user_uid_2,\r\n              file: url,\r\n              type: \"file\",\r\n              isView: false,\r\n              createdAt: new Date(),\r\n            })\r\n            .then((data) => {\r\n              dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n                payload: { error: error.message },\r\n              });\r\n            });\r\n        });\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const setSeenMessage = ({ uid_1, uid_2 }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.SET_SEEN_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"==\", uid_2)\r\n      .where(\"user_uid_2\", \"==\", uid_1)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          doc.ref.update({\r\n            isView: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getLoadMoreConversations = ({ uid_1, uid_2, lastestDoc }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n      .startAfter(lastestDoc || 0)\r\n      .limit(10);\r\n    const data = await ref.get();\r\n    lastestDoc = data.docs[data.docs.length - 1];\r\n    const conversations = [];\r\n    data.docs.forEach((doc) => {\r\n      conversations.push(doc.data());\r\n    });\r\n    if (conversations !== []) {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`,\r\n        payload: { conversations: conversations.reverse(), lastestDoc },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`,\r\n        payload: { error: \"END\" },\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const getRealTimeConversations = ({ uid_1, uid_2, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1]);\r\n    const data = await ref.get();\r\n    const lastestDoc = data.docs[data.docs.length - 1];\r\n    db.collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_1, uid_2])\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 == uid_1 &&\r\n              doc.data().user_uid_2 == uid_2) ||\r\n            (doc.data().user_uid_1 == uid_2 && doc.data().user_uid_2 == uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`,\r\n          payload: { conversations: conversations.reverse(), lastestDoc },\r\n        });\r\n      });\r\n  };\r\n};\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\userReducer.js",["166"],"import { userConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  conversations: [],\r\n  loadingUser: true,\r\n  loadingChat: true,\r\n  lastestDoc: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: false,\r\n        users: action.payload.users,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: action.payload.conversations,\r\n        lastestDoc : action.payload.lastDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: [\r\n          ...action.payload.conversations,\r\n          ...state.conversations,\r\n        ],\r\n        lastestDoc: action.payload.lastestDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Error\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\ProfilePage\\index.js",["167","168","169","170","171","172","173","174"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\ModalPost\\index.js",["175","176","177","178","179"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\PostDetail\\index.js",["180","181","182"],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\post.js",["183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":20,"column":5,"nodeType":"190","endLine":20,"endColumn":7,"suggestions":"191"},{"ruleId":"184","replacedBy":"192"},{"ruleId":"186","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":15,"column":3,"nodeType":"196","messageId":"197","endLine":15,"endColumn":20},{"ruleId":"194","severity":1,"message":"198","line":23,"column":3,"nodeType":"196","messageId":"197","endLine":23,"endColumn":27},{"ruleId":"194","severity":1,"message":"199","line":42,"column":5,"nodeType":"196","messageId":"197","endLine":42,"endColumn":15},{"ruleId":"188","severity":1,"message":"200","line":51,"column":6,"nodeType":"190","endLine":51,"endColumn":8,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":71,"column":22,"nodeType":"204","messageId":"205","endLine":71,"endColumn":24},{"ruleId":"188","severity":1,"message":"206","line":80,"column":6,"nodeType":"190","endLine":80,"endColumn":20,"suggestions":"207"},{"ruleId":"202","severity":1,"message":"203","line":82,"column":22,"nodeType":"204","messageId":"205","endLine":82,"endColumn":24},{"ruleId":"188","severity":1,"message":"208","line":86,"column":6,"nodeType":"190","endLine":86,"endColumn":21,"suggestions":"209"},{"ruleId":"202","severity":1,"message":"203","line":88,"column":20,"nodeType":"204","messageId":"205","endLine":88,"endColumn":22},{"ruleId":"188","severity":1,"message":"210","line":91,"column":6,"nodeType":"190","endLine":91,"endColumn":18,"suggestions":"211"},{"ruleId":"202","severity":1,"message":"212","line":153,"column":28,"nodeType":"204","messageId":"205","endLine":153,"endColumn":30},{"ruleId":"202","severity":1,"message":"212","line":228,"column":34,"nodeType":"204","messageId":"205","endLine":228,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":234,"column":25,"nodeType":"215","endLine":234,"endColumn":62},{"ruleId":"213","severity":1,"message":"214","line":244,"column":25,"nodeType":"215","endLine":248,"endColumn":27},{"ruleId":"202","severity":1,"message":"212","line":252,"column":36,"nodeType":"204","messageId":"205","endLine":252,"endColumn":38},{"ruleId":"213","severity":1,"message":"214","line":269,"column":19,"nodeType":"215","endLine":269,"endColumn":42},{"ruleId":"194","severity":1,"message":"216","line":5,"column":10,"nodeType":"196","messageId":"197","endLine":5,"endColumn":24},{"ruleId":"213","severity":1,"message":"214","line":31,"column":11,"nodeType":"215","endLine":31,"endColumn":108},{"ruleId":"184","replacedBy":"217"},{"ruleId":"186","replacedBy":"218"},{"ruleId":"184","replacedBy":"219"},{"ruleId":"186","replacedBy":"220"},{"ruleId":"194","severity":1,"message":"221","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":23},{"ruleId":"184","replacedBy":"222"},{"ruleId":"186","replacedBy":"223"},{"ruleId":"184","replacedBy":"224"},{"ruleId":"186","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":82,"column":31,"nodeType":"228","messageId":"229","endLine":82,"endColumn":42},{"ruleId":"184","replacedBy":"230"},{"ruleId":"186","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":13,"column":1,"nodeType":"234","endLine":65,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":14,"column":33,"nodeType":"204","messageId":"205","endLine":14,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":30,"column":14,"nodeType":"204","messageId":"205","endLine":30,"endColumn":16},{"ruleId":"202","severity":1,"message":"212","line":143,"column":36,"nodeType":"204","messageId":"205","endLine":143,"endColumn":38},{"ruleId":"202","severity":1,"message":"212","line":144,"column":37,"nodeType":"204","messageId":"205","endLine":144,"endColumn":39},{"ruleId":"202","severity":1,"message":"212","line":145,"column":36,"nodeType":"204","messageId":"205","endLine":145,"endColumn":38},{"ruleId":"202","severity":1,"message":"212","line":145,"column":70,"nodeType":"204","messageId":"205","endLine":145,"endColumn":72},{"ruleId":"232","severity":1,"message":"233","line":10,"column":1,"nodeType":"234","endLine":64,"endColumn":3},{"ruleId":"213","severity":1,"message":"214","line":29,"column":13,"nodeType":"215","endLine":29,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":57,"column":15,"nodeType":"215","endLine":57,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":70,"column":15,"nodeType":"215","endLine":70,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":83,"column":15,"nodeType":"215","endLine":83,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":96,"column":15,"nodeType":"215","endLine":96,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":109,"column":15,"nodeType":"215","endLine":109,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":122,"column":15,"nodeType":"215","endLine":122,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":135,"column":15,"nodeType":"215","endLine":135,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":25,"column":22,"nodeType":"204","messageId":"205","endLine":25,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":33,"column":19,"nodeType":"204","messageId":"205","endLine":33,"endColumn":21},{"ruleId":"188","severity":1,"message":"235","line":36,"column":6,"nodeType":"190","endLine":36,"endColumn":17,"suggestions":"236"},{"ruleId":"213","severity":1,"message":"214","line":51,"column":13,"nodeType":"215","endLine":51,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":64,"column":13,"nodeType":"215","endLine":64,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":22,"column":11,"nodeType":"215","endLine":22,"endColumn":29},{"ruleId":"213","severity":1,"message":"214","line":27,"column":15,"nodeType":"215","endLine":27,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":38,"column":15,"nodeType":"215","endLine":38,"endColumn":33},{"ruleId":"194","severity":1,"message":"237","line":1,"column":9,"nodeType":"196","messageId":"197","endLine":1,"endColumn":22},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'auth.authenticated' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["240"],["238"],["239"],"no-unused-vars","'AiFillCheckCircle' is defined but never used.","Identifier","unusedVar","'getLoadMoreConversations' is defined but never used.","'lastestDoc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'viewUser'. Either include it or remove the dependency array.",["241"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'auth.uid' and 'dispatch'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has missing dependencies: 'loadingChat' and 'userSelected'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has missing dependencies: 'img' and 'viewFile'. Either include them or remove the dependency array.",["244"],"Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoggedInUser' is defined but never used.",["238"],["239"],["238"],["239"],"'reportWebVitals' is defined but never used.",["238"],["239"],["238"],["239"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",["238"],["239"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has missing dependencies: 'fileInput' and 'viewFile'. Either include them or remove the dependency array.",["245"],"'postConstants' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [auth.authenticated, dispatch]",{"range":"258","text":"259"},"Update the dependencies array to be: [viewUser]",{"range":"260","text":"261"},"Update the dependencies array to be: [auth.uid, dispatch, userSelected]",{"range":"262","text":"263"},"Update the dependencies array to be: [conversations, loadingChat, userSelected]",{"range":"264","text":"265"},"Update the dependencies array to be: [img, messageImg, viewFile]",{"range":"266","text":"267"},"Update the dependencies array to be: [fileInput, postImage, viewFile]",{"range":"268","text":"269"},[671,673],"[auth.authenticated, dispatch]",[1510,1512],"[viewUser]",[2416,2430],"[auth.uid, dispatch, userSelected]",[2624,2639],"[conversations, loadingChat, userSelected]",[2754,2766],"[img, messageImg, viewFile]",[1165,1176],"[fileInput, postImage, viewFile]"]