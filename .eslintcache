[{"C:\\Website By Mint\\realtime-chat-application\\src\\reportWebVitals.js":"1","C:\\Website By Mint\\realtime-chat-application\\src\\App.js":"2","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\LoginPage\\index.js":"3","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\HomePage\\index.js":"4","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\index.js":"5","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\SignUpPage\\index.js":"6","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Header\\index.js":"7","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Input\\index.js":"8","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Button\\index.js":"9","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Title\\index.js":"10","C:\\Website By Mint\\realtime-chat-application\\src\\index.js":"11","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Card\\index.js":"12","C:\\Website By Mint\\realtime-chat-application\\src\\store\\index.js":"13","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\auth.js":"14","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\index.js":"15","C:\\Website By Mint\\realtime-chat-application\\src\\database\\firebase.js":"16","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\index.js":"17","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\authReducer.js":"18","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Private\\index.js":"19","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\constants.js":"20","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\user.js":"21","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\userReducer.js":"22","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Error\\index.js":"23","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\ProfilePage\\index.js":"24","C:\\Website By Mint\\realtime-chat-application\\src\\components\\ModalPost\\index.js":"25","C:\\Website By Mint\\realtime-chat-application\\src\\components\\PostDetail\\index.js":"26","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\post.js":"27","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\postReducer.js":"28","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Loading\\index.js":"29"},{"size":362,"mtime":1606470506103,"results":"30","hashOfConfig":"31"},{"size":1479,"mtime":1610007026040,"results":"32","hashOfConfig":"31"},{"size":1706,"mtime":1609310039203,"results":"33","hashOfConfig":"31"},{"size":10846,"mtime":1609960130308,"results":"34","hashOfConfig":"31"},{"size":247,"mtime":1608998879017,"results":"35","hashOfConfig":"31"},{"size":2147,"mtime":1609310046306,"results":"36","hashOfConfig":"31"},{"size":1987,"mtime":1609404907984,"results":"37","hashOfConfig":"31"},{"size":653,"mtime":1609004586761,"results":"38","hashOfConfig":"31"},{"size":223,"mtime":1609956302749,"results":"39","hashOfConfig":"31"},{"size":201,"mtime":1609005437418,"results":"40","hashOfConfig":"31"},{"size":360,"mtime":1609052155855,"results":"41","hashOfConfig":"31"},{"size":191,"mtime":1609002388353,"results":"42","hashOfConfig":"31"},{"size":320,"mtime":1609184533296,"results":"43","hashOfConfig":"31"},{"size":4583,"mtime":1609219758682,"results":"44","hashOfConfig":"31"},{"size":306,"mtime":1610004520268,"results":"45","hashOfConfig":"31"},{"size":556,"mtime":1609400435128,"results":"46","hashOfConfig":"31"},{"size":46,"mtime":1609144452389,"results":"47","hashOfConfig":"31"},{"size":1729,"mtime":1609225843900,"results":"48","hashOfConfig":"31"},{"size":517,"mtime":1609053109445,"results":"49","hashOfConfig":"31"},{"size":600,"mtime":1610013363689,"results":"50","hashOfConfig":"31"},{"size":5146,"mtime":1609401269833,"results":"51","hashOfConfig":"31"},{"size":1658,"mtime":1609340475211,"results":"52","hashOfConfig":"31"},{"size":308,"mtime":1609169470062,"results":"53","hashOfConfig":"31"},{"size":3333,"mtime":1610008728558,"results":"54","hashOfConfig":"31"},{"size":3106,"mtime":1610006478893,"results":"55","hashOfConfig":"31"},{"size":3829,"mtime":1610014541154,"results":"56","hashOfConfig":"31"},{"size":3334,"mtime":1610014561199,"results":"57","hashOfConfig":"31"},{"size":2057,"mtime":1610014465612,"results":"58","hashOfConfig":"31"},{"size":213,"mtime":1610005932451,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"9th9bh",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Website By Mint\\realtime-chat-application\\src\\reportWebVitals.js",[],["130","131"],"C:\\Website By Mint\\realtime-chat-application\\src\\App.js",["132","133"],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\LoginPage\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\HomePage\\index.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\index.js",[],["150","151"],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\SignUpPage\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Header\\index.js",["152","153"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser, logout } from \"../../actions\";\r\nexport default function Header() {\r\n  const auth = useSelector(state=>state.auth)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = ()=>{\r\n      dispatch(logout(auth.uid))\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navBar\">\r\n        <div className=\"navSide\">\r\n          <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/realtime-chat-application\" className=\"navLink\">\r\n                HOME\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/about\" className=\"navLink\">\r\n                ABOUT\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"logoArea\">\r\n          <img src=\"https://www.williamdollace.it/wp-content/themes/williamdollacetheme/images/logo.svg\" />\r\n        </div>\r\n        <div className=\"navSide\">\r\n          {!auth.authenticated ? <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/login\" className=\"navLink\">\r\n                LOGIN\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/signup\" className=\"navLink\">\r\n                SIGN UP\r\n              </NavLink>\r\n            </li>\r\n          </ul>:\r\n          <ul className=\"navWrap\">\r\n          <li className=\"navItem\">\r\n          <NavLink to=\"/profile\" className=\"navLink\">\r\n               {auth.firstName} PROFILE\r\n              </NavLink>\r\n          </li>\r\n          <li className=\"navItem\">\r\n            <Link to=\"#\" onClick={handleLogout} className=\"navLink\">\r\n              LOG OUT\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Input\\index.js",[],["154","155"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Button\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Title\\index.js",[],["156","157"],"C:\\Website By Mint\\realtime-chat-application\\src\\index.js",["158"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n",["159","160"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Card\\index.js",[],["161","162"],"C:\\Website By Mint\\realtime-chat-application\\src\\store\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\auth.js",["163"],"import firebase from \"../database/firebase\";\r\nimport { authConstants } from \"./constants\";\r\nexport const signUp = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(),\r\n                uid: data.user.uid,\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                const loggedUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\r\n                  \"user\",\r\n                  JSON.stringify({\r\n                    loggedUser,\r\n                  })\r\n                );\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: loggedUser },\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: err,\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore()\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline : true\r\n          })\r\n          .then(() => {\r\n            var name = data.user.displayName;\r\n            name = name.split(\" \");\r\n            var stringArray = new Array();\r\n            for (var i = 0; i < name.length; i++) {\r\n              stringArray.push(name[i]);\r\n            }\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n            const loggedUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n            };\r\n            localStorage.setItem(\r\n              \"user\",\r\n              JSON.stringify({\r\n                user: loggedUser,\r\n              })\r\n            );\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n              payload: { user: loggedUser },\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: err.message },\r\n        });\r\n      })\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n        payload: { user: user.user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\database\\firebase.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\authReducer.js",["164"],"import { authConstants } from \"../actions/constants\"\r\n\r\nconst initialState = {\r\n    firstName : '',\r\n    lastName : '',\r\n    uid : '',\r\n    email : '',\r\n    authenticating : false,\r\n    authenticated : false,\r\n    error : null\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case `${authConstants.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating:true,\r\n            }\r\n            return state\r\n        case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n            debugger\r\n            state = {\r\n                ...state,\r\n                firstName : action.payload.user.firstName,\r\n                lastName : action.payload.user.lastName,\r\n                uid : action.payload.user.uid,\r\n                email : action.payload.user.email,\r\n                authenticated:true,\r\n                authenticating:false,\r\n                error:null,\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated:false,\r\n                authenticating:false,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n            state={\r\n                ...initialState,\r\n\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n            state={\r\n                ...state,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Private\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\constants.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\user.js",["165","166","167","168","169","170"],"import { userConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const getRealTimeUser = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const unsubscribe = db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"!=\", uid)\r\n      .onSnapshot(function (snap) {\r\n        const users = [];\r\n        snap.forEach((doc) => {\r\n          if (doc.data().length != users.length) {\r\n            users.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n          payload: { users },\r\n        });\r\n      });\r\n    return unsubscribe;\r\n  };\r\n};\r\nexport const updateMessage = ({ msgObj, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    if (type != \"file\") {\r\n      db.collection(\"conversations\")\r\n        .add({\r\n          ...msgObj,\r\n          type: \"text\",\r\n          isView: false,\r\n          createdAt: new Date(),\r\n        })\r\n        .then((data) => {\r\n          dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n            payload: { error: error.message },\r\n          });\r\n        });\r\n    } else {\r\n      const ref = firebase.storage().ref();\r\n      const name = new Date() + \"-\" + msgObj.file.name;\r\n      const metaData = {\r\n        contentType: msgObj.file.type,\r\n      };\r\n      const task = ref.child(name).put(msgObj.file, metaData);\r\n      task.then((snapshot) => {\r\n        snapshot.ref.getDownloadURL().then((url) => {\r\n          db.collection(\"conversations\")\r\n            .add({\r\n              user_uid_1: msgObj.user_uid_1,\r\n              user_uid_2: msgObj.user_uid_2,\r\n              file: url,\r\n              type: \"file\",\r\n              isView: false,\r\n              createdAt: new Date(),\r\n            })\r\n            .then((data) => {\r\n              dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n                payload: { error: error.message },\r\n              });\r\n            });\r\n        });\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const setSeenMessage = ({ uid_1, uid_2 }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.SET_SEEN_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"==\", uid_2)\r\n      .where(\"user_uid_2\", \"==\", uid_1)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          doc.ref.update({\r\n            isView: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getLoadMoreConversations = ({ uid_1, uid_2, lastestDoc }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n      .startAfter(lastestDoc || 0)\r\n      .limit(10);\r\n    const data = await ref.get();\r\n    lastestDoc = data.docs[data.docs.length - 1];\r\n    const conversations = [];\r\n    data.docs.forEach((doc) => {\r\n      conversations.push(doc.data());\r\n    });\r\n    if (conversations !== []) {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`,\r\n        payload: { conversations: conversations.reverse(), lastestDoc },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`,\r\n        payload: { error: \"END\" },\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const getRealTimeConversations = ({ uid_1, uid_2, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1]);\r\n    const data = await ref.get();\r\n    const lastestDoc = data.docs[data.docs.length - 1];\r\n    db.collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_1, uid_2])\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 == uid_1 &&\r\n              doc.data().user_uid_2 == uid_2) ||\r\n            (doc.data().user_uid_1 == uid_2 && doc.data().user_uid_2 == uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`,\r\n          payload: { conversations: conversations.reverse(), lastestDoc },\r\n        });\r\n      });\r\n  };\r\n};\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\userReducer.js",["171"],"import { userConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  conversations: [],\r\n  loadingUser: true,\r\n  loadingChat: true,\r\n  lastestDoc: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: false,\r\n        users: action.payload.users,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: action.payload.conversations,\r\n        lastestDoc : action.payload.lastDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: [\r\n          ...action.payload.conversations,\r\n          ...state.conversations,\r\n        ],\r\n        lastestDoc: action.payload.lastestDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Error\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\ProfilePage\\index.js",["172"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\ModalPost\\index.js",["173","174","175","176"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\PostDetail\\index.js",["177","178","179","180"],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\post.js",["181","182"],"C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\postReducer.js",["183","184"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Loading\\index.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":3,"column":35,"nodeType":"191","messageId":"192","endLine":3,"endColumn":43},{"ruleId":"193","severity":1,"message":"194","line":19,"column":6,"nodeType":"195","endLine":19,"endColumn":8,"suggestions":"196"},{"ruleId":"189","severity":1,"message":"197","line":15,"column":3,"nodeType":"191","messageId":"192","endLine":15,"endColumn":20},{"ruleId":"189","severity":1,"message":"198","line":23,"column":3,"nodeType":"191","messageId":"192","endLine":23,"endColumn":27},{"ruleId":"189","severity":1,"message":"199","line":42,"column":5,"nodeType":"191","messageId":"192","endLine":42,"endColumn":15},{"ruleId":"193","severity":1,"message":"200","line":51,"column":6,"nodeType":"195","endLine":51,"endColumn":8,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":71,"column":22,"nodeType":"204","messageId":"205","endLine":71,"endColumn":24},{"ruleId":"193","severity":1,"message":"206","line":80,"column":6,"nodeType":"195","endLine":80,"endColumn":20,"suggestions":"207"},{"ruleId":"202","severity":1,"message":"203","line":82,"column":22,"nodeType":"204","messageId":"205","endLine":82,"endColumn":24},{"ruleId":"193","severity":1,"message":"208","line":86,"column":6,"nodeType":"195","endLine":86,"endColumn":21,"suggestions":"209"},{"ruleId":"202","severity":1,"message":"203","line":88,"column":20,"nodeType":"204","messageId":"205","endLine":88,"endColumn":22},{"ruleId":"193","severity":1,"message":"210","line":91,"column":6,"nodeType":"195","endLine":91,"endColumn":18,"suggestions":"211"},{"ruleId":"202","severity":1,"message":"212","line":153,"column":28,"nodeType":"204","messageId":"205","endLine":153,"endColumn":30},{"ruleId":"202","severity":1,"message":"212","line":228,"column":34,"nodeType":"204","messageId":"205","endLine":228,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":234,"column":25,"nodeType":"215","endLine":234,"endColumn":62},{"ruleId":"213","severity":1,"message":"214","line":244,"column":25,"nodeType":"215","endLine":248,"endColumn":27},{"ruleId":"202","severity":1,"message":"212","line":252,"column":36,"nodeType":"204","messageId":"205","endLine":252,"endColumn":38},{"ruleId":"213","severity":1,"message":"214","line":269,"column":19,"nodeType":"215","endLine":269,"endColumn":42},{"ruleId":"185","replacedBy":"216"},{"ruleId":"187","replacedBy":"217"},{"ruleId":"189","severity":1,"message":"218","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":24},{"ruleId":"213","severity":1,"message":"214","line":31,"column":11,"nodeType":"215","endLine":31,"endColumn":108},{"ruleId":"185","replacedBy":"219"},{"ruleId":"187","replacedBy":"220"},{"ruleId":"185","replacedBy":"221"},{"ruleId":"187","replacedBy":"222"},{"ruleId":"189","severity":1,"message":"223","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":23},{"ruleId":"185","replacedBy":"224"},{"ruleId":"187","replacedBy":"225"},{"ruleId":"185","replacedBy":"226"},{"ruleId":"187","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":82,"column":31,"nodeType":"230","messageId":"231","endLine":82,"endColumn":42},{"ruleId":"232","severity":1,"message":"233","line":13,"column":1,"nodeType":"234","endLine":65,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":14,"column":33,"nodeType":"204","messageId":"205","endLine":14,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":30,"column":14,"nodeType":"204","messageId":"205","endLine":30,"endColumn":16},{"ruleId":"202","severity":1,"message":"212","line":143,"column":36,"nodeType":"204","messageId":"205","endLine":143,"endColumn":38},{"ruleId":"202","severity":1,"message":"212","line":144,"column":37,"nodeType":"204","messageId":"205","endLine":144,"endColumn":39},{"ruleId":"202","severity":1,"message":"212","line":145,"column":36,"nodeType":"204","messageId":"205","endLine":145,"endColumn":38},{"ruleId":"202","severity":1,"message":"212","line":145,"column":70,"nodeType":"204","messageId":"205","endLine":145,"endColumn":72},{"ruleId":"232","severity":1,"message":"233","line":10,"column":1,"nodeType":"234","endLine":64,"endColumn":3},{"ruleId":"193","severity":1,"message":"235","line":23,"column":6,"nodeType":"195","endLine":23,"endColumn":8,"suggestions":"236"},{"ruleId":"202","severity":1,"message":"203","line":38,"column":19,"nodeType":"204","messageId":"205","endLine":38,"endColumn":21},{"ruleId":"193","severity":1,"message":"237","line":41,"column":6,"nodeType":"195","endLine":41,"endColumn":17,"suggestions":"238"},{"ruleId":"213","severity":1,"message":"214","line":67,"column":13,"nodeType":"215","endLine":67,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":83,"column":13,"nodeType":"215","endLine":83,"endColumn":42},{"ruleId":"189","severity":1,"message":"239","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":39,"column":13,"nodeType":"215","endLine":39,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":44,"column":17,"nodeType":"215","endLine":44,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":55,"column":17,"nodeType":"215","endLine":55,"endColumn":35},{"ruleId":"202","severity":1,"message":"212","line":52,"column":22,"nodeType":"204","messageId":"205","endLine":52,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":57,"column":22,"nodeType":"204","messageId":"205","endLine":57,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":16,"column":1,"nodeType":"234","endLine":86,"endColumn":3},{"ruleId":"240","severity":1,"message":"241","line":37,"column":5,"nodeType":"242","messageId":"243","endLine":41,"endColumn":20},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'auth.authenticated' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["246"],"'AiFillCheckCircle' is defined but never used.","'getLoadMoreConversations' is defined but never used.","'lastestDoc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'viewUser'. Either include it or remove the dependency array.",["247"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'auth.uid' and 'dispatch'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'loadingChat' and 'userSelected'. Either include them or remove the dependency array.",["249"],"React Hook useEffect has missing dependencies: 'img' and 'viewFile'. Either include them or remove the dependency array.",["250"],"Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["244"],["245"],"'isLoggedInUser' is defined but never used.",["244"],["245"],["244"],["245"],"'reportWebVitals' is defined but never used.",["244"],["245"],["244"],["245"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has missing dependencies: 'auth.uid' and 'dispatch'. Either include them or remove the dependency array.",["251"],"React Hook React.useEffect has missing dependencies: 'filePost' and 'viewFile'. Either include them or remove the dependency array.",["252"],"'pushPost' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [auth.authenticated, dispatch]",{"range":"267","text":"268"},"Update the dependencies array to be: [viewUser]",{"range":"269","text":"270"},"Update the dependencies array to be: [auth.uid, dispatch, userSelected]",{"range":"271","text":"272"},"Update the dependencies array to be: [conversations, loadingChat, userSelected]",{"range":"273","text":"274"},"Update the dependencies array to be: [img, messageImg, viewFile]",{"range":"275","text":"276"},"Update the dependencies array to be: [auth.uid, dispatch]",{"range":"277","text":"278"},"Update the dependencies array to be: [filePost, postImage, viewFile]",{"range":"279","text":"280"},[691,693],"[auth.authenticated, dispatch]",[1510,1512],"[viewUser]",[2416,2430],"[auth.uid, dispatch, userSelected]",[2624,2639],"[conversations, loadingChat, userSelected]",[2754,2766],"[img, messageImg, viewFile]",[897,899],"[auth.uid, dispatch]",[1369,1380],"[filePost, postImage, viewFile]"]