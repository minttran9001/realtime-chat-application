[{"C:\\Website By Mint\\realtime-chat-application\\src\\reportWebVitals.js":"1","C:\\Website By Mint\\realtime-chat-application\\src\\App.js":"2","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\LoginPage\\index.js":"3","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\HomePage\\index.js":"4","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\index.js":"5","C:\\Website By Mint\\realtime-chat-application\\src\\containers\\SignUpPage\\index.js":"6","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Header\\index.js":"7","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Input\\index.js":"8","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Button\\index.js":"9","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Title\\index.js":"10","C:\\Website By Mint\\realtime-chat-application\\src\\index.js":"11","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Card\\index.js":"12","C:\\Website By Mint\\realtime-chat-application\\src\\store\\index.js":"13","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\auth.js":"14","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\index.js":"15","C:\\Website By Mint\\realtime-chat-application\\src\\database\\firebase.js":"16","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\index.js":"17","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\authReducer.js":"18","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Private\\index.js":"19","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\constants.js":"20","C:\\Website By Mint\\realtime-chat-application\\src\\actions\\user.js":"21","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\userReducer.js":"22","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Error\\index.js":"23"},{"size":362,"mtime":1606470506103,"results":"24","hashOfConfig":"25"},{"size":1428,"mtime":1609056961594,"results":"26","hashOfConfig":"25"},{"size":1681,"mtime":1609219689005,"results":"27","hashOfConfig":"25"},{"size":7443,"mtime":1609308604043,"results":"28","hashOfConfig":"25"},{"size":247,"mtime":1608998879017,"results":"29","hashOfConfig":"25"},{"size":2122,"mtime":1609170461095,"results":"30","hashOfConfig":"25"},{"size":1962,"mtime":1609168345873,"results":"31","hashOfConfig":"25"},{"size":653,"mtime":1609004586761,"results":"32","hashOfConfig":"25"},{"size":199,"mtime":1609052758397,"results":"33","hashOfConfig":"25"},{"size":201,"mtime":1609005437418,"results":"34","hashOfConfig":"25"},{"size":360,"mtime":1609052155855,"results":"35","hashOfConfig":"25"},{"size":191,"mtime":1609002388353,"results":"36","hashOfConfig":"25"},{"size":320,"mtime":1609184533296,"results":"37","hashOfConfig":"25"},{"size":4583,"mtime":1609219758682,"results":"38","hashOfConfig":"25"},{"size":240,"mtime":1609145255369,"results":"39","hashOfConfig":"25"},{"size":528,"mtime":1609181701820,"results":"40","hashOfConfig":"25"},{"size":46,"mtime":1609144452389,"results":"41","hashOfConfig":"25"},{"size":1729,"mtime":1609225843900,"results":"42","hashOfConfig":"25"},{"size":517,"mtime":1609053109445,"results":"43","hashOfConfig":"25"},{"size":373,"mtime":1609256188091,"results":"44","hashOfConfig":"25"},{"size":4101,"mtime":1609309271298,"results":"45","hashOfConfig":"25"},{"size":1704,"mtime":1609309128352,"results":"46","hashOfConfig":"25"},{"size":308,"mtime":1609169470062,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"9th9bh",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"C:\\Website By Mint\\realtime-chat-application\\src\\reportWebVitals.js",[],["104","105"],"C:\\Website By Mint\\realtime-chat-application\\src\\App.js",["106"],"import React from 'react'\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SignUp from \"./containers/SignUpPage/index\";\nimport Login from \"./containers/LoginPage/index\";\nimport Home from \"./containers/HomePage/index\";\nimport PrivateRoute from \"./components/Private/index.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLoggedInUser } from \"./actions\";\nfunction App() {\n  const dispatch = useDispatch()\n  const auth = useSelector(state=>state.auth)\n\n React.useEffect(()=>{\n    if(!auth.authenticated)\n    {\n      dispatch(isLoggedInUser())\n    }\n  },[])\n  const routes = [\n    { path: \"/\", name: \"Home\", component: Home },\n    { path: \"/login\", name: \"Login\", component: Login },\n    { path: \"/signup\", name: \"Sign Up\", component: SignUp },\n  ];\n  return (\n    <div className=\"App\">\n      <Router>\n        {routes.map((route) => {\n          return (\n            <div  key={route.name}>\n              {route.name === \"Home\" ? (\n                <PrivateRoute\n                  path={route.path}\n                  component={route.component}\n                  exact\n                 \n                />\n              ) : (\n                <Route\n                  path={route.path}\n                  component={route.component}\n                />\n              )}\n            </div>\n          );\n        })}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["107","108"],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\LoginPage\\index.js",[],["109","110"],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\HomePage\\index.js",["111","112","113","114","115","116"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\containers\\SignUpPage\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Header\\index.js",["117","118"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser, logout } from \"../../actions\";\r\nexport default function Header() {\r\n  const auth = useSelector(state=>state.auth)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = ()=>{\r\n      dispatch(logout(auth.uid))\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navBar\">\r\n        <div className=\"navSide\">\r\n          <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/\" className=\"navLink\">\r\n                HOME\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/about\" className=\"navLink\">\r\n                ABOUT\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"logoArea\">\r\n          <img src=\"https://www.williamdollace.it/wp-content/themes/williamdollacetheme/images/logo.svg\" />\r\n        </div>\r\n        <div className=\"navSide\">\r\n          {!auth.authenticated ? <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/login\" className=\"navLink\">\r\n                LOGIN\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/signup\" className=\"navLink\">\r\n                SIGN UP\r\n              </NavLink>\r\n            </li>\r\n          </ul>:\r\n          <ul className=\"navWrap\">\r\n          <li className=\"navItem\">\r\n          <NavLink to=\"/profile\" className=\"navLink\">\r\n               {auth.firstName} PROFILE\r\n              </NavLink>\r\n          </li>\r\n          <li className=\"navItem\">\r\n            <Link to=\"#\" onClick={handleLogout} className=\"navLink\">\r\n              LOG OUT\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Input\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Button\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Title\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\index.js",["119"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n",["120","121"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Card\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\store\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\auth.js",["122"],"import firebase from \"../database/firebase\";\r\nimport { authConstants } from \"./constants\";\r\nexport const signUp = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(),\r\n                uid: data.user.uid,\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                const loggedUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\r\n                  \"user\",\r\n                  JSON.stringify({\r\n                    loggedUser,\r\n                  })\r\n                );\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: loggedUser },\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: err,\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore()\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline : true\r\n          })\r\n          .then(() => {\r\n            var name = data.user.displayName;\r\n            name = name.split(\" \");\r\n            var stringArray = new Array();\r\n            for (var i = 0; i < name.length; i++) {\r\n              stringArray.push(name[i]);\r\n            }\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n            const loggedUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n            };\r\n            localStorage.setItem(\r\n              \"user\",\r\n              JSON.stringify({\r\n                user: loggedUser,\r\n              })\r\n            );\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n              payload: { user: loggedUser },\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: err.message },\r\n        });\r\n      })\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n        payload: { user: user.user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n","C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\database\\firebase.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\authReducer.js",["123"],"import { authConstants } from \"../actions/constants\"\r\n\r\nconst initialState = {\r\n    firstName : '',\r\n    lastName : '',\r\n    uid : '',\r\n    email : '',\r\n    authenticating : false,\r\n    authenticated : false,\r\n    error : null\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case `${authConstants.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating:true,\r\n            }\r\n            return state\r\n        case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n            debugger\r\n            state = {\r\n                ...state,\r\n                firstName : action.payload.user.firstName,\r\n                lastName : action.payload.user.lastName,\r\n                uid : action.payload.user.uid,\r\n                email : action.payload.user.email,\r\n                authenticated:true,\r\n                authenticating:false,\r\n                error:null,\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated:false,\r\n                authenticating:false,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n            state={\r\n                ...initialState,\r\n\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n            state={\r\n                ...state,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Website By Mint\\realtime-chat-application\\src\\components\\Private\\index.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\constants.js",[],"C:\\Website By Mint\\realtime-chat-application\\src\\actions\\user.js",["124","125","126","127","128"],"C:\\Website By Mint\\realtime-chat-application\\src\\reducers\\userReducer.js",["129"],"C:\\Website By Mint\\realtime-chat-application\\src\\components\\Layout\\UI\\Error\\index.js",[],["130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":19,"column":5,"nodeType":"138","endLine":19,"endColumn":7,"suggestions":"139"},{"ruleId":"132","replacedBy":"140"},{"ruleId":"134","replacedBy":"141"},{"ruleId":"132","replacedBy":"142"},{"ruleId":"134","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":15,"column":3,"nodeType":"146","messageId":"147","endLine":15,"endColumn":20},{"ruleId":"136","severity":1,"message":"148","line":46,"column":6,"nodeType":"138","endLine":46,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":82,"column":28,"nodeType":"152","messageId":"153","endLine":82,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":153,"column":32,"nodeType":"152","messageId":"153","endLine":153,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":158,"column":53,"nodeType":"156","endLine":158,"endColumn":71},{"ruleId":"150","severity":1,"message":"151","line":162,"column":34,"nodeType":"152","messageId":"153","endLine":162,"endColumn":36},{"ruleId":"144","severity":1,"message":"157","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":31,"column":11,"nodeType":"156","endLine":31,"endColumn":108},{"ruleId":"144","severity":1,"message":"158","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":23},{"ruleId":"132","replacedBy":"159"},{"ruleId":"134","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":82,"column":31,"nodeType":"163","messageId":"164","endLine":82,"endColumn":42},{"ruleId":"165","severity":1,"message":"166","line":13,"column":1,"nodeType":"167","endLine":65,"endColumn":2},{"ruleId":"150","severity":1,"message":"168","line":14,"column":33,"nodeType":"152","messageId":"153","endLine":14,"endColumn":35},{"ruleId":"150","severity":1,"message":"151","line":115,"column":36,"nodeType":"152","messageId":"153","endLine":115,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":116,"column":37,"nodeType":"152","messageId":"153","endLine":116,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":117,"column":36,"nodeType":"152","messageId":"153","endLine":117,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":117,"column":70,"nodeType":"152","messageId":"153","endLine":117,"endColumn":72},{"ruleId":"165","severity":1,"message":"166","line":10,"column":1,"nodeType":"167","endLine":66,"endColumn":3},{"ruleId":"132","replacedBy":"169"},{"ruleId":"134","replacedBy":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'auth.authenticated' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["173"],["171"],["172"],["171"],["172"],"no-unused-vars","'AiFillCheckCircle' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'viewUser'. Either include it or remove the dependency array.",["174"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoggedInUser' is defined but never used.","'reportWebVitals' is defined but never used.",["171"],["172"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Expected '!==' and instead saw '!='.",["171"],["172"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [auth.authenticated, dispatch]",{"range":"179","text":"180"},"Update the dependencies array to be: [viewUser]",{"range":"181","text":"182"},[618,620],"[auth.authenticated, dispatch]",[1437,1439],"[viewUser]"]