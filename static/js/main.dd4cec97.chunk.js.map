{"version":3,"sources":["database/firebase.js","actions/constants.js","actions/auth.js","components/Header/index.js","components/Layout/index.js","components/Layout/UI/Input/index.js","components/Layout/UI/Card/index.js","components/Layout/UI/Button/index.js","components/Layout/UI/Title/index.js","components/Layout/UI/Error/index.js","containers/SignUpPage/index.js","containers/LoginPage/index.js","images/mint.jpg","containers/HomePage/index.js","actions/user.js","components/Private/index.js","App.js","reducers/authReducer.js","reducers/userReducer.js","reducers/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authConstants","userConstants","signUp","user","dispatch","a","db","firestore","type","auth","createUserWithEmailAndPassword","email","password","then","data","currentUser","name","firstName","lastName","updateProfile","displayName","collection","doc","uid","set","createdAt","Date","isOnline","loggedUser","localStorage","setItem","JSON","stringify","payload","catch","err","error","message","Header","useSelector","state","useDispatch","className","to","src","authenticated","onClick","update","signOut","clear","Layout","props","children","Input","value","label","onChange","placeholder","useState","inputGroup","setInputGroup","onFocus","e","target","Card","Button","Title","Error","SignUp","form","setForm","handleSignUp","preventDefault","onSubmit","Login","signInWithEmailAndPassword","split","stringArray","Array","i","length","push","Home","isSelected","setIsSelected","userSelected","setUserSelected","setMessage","users","conversations","loadingUser","loadingChat","viewUser","unsubscribe","where","onSnapshot","snap","forEach","useEffect","initChat","uid_1","uid_2","orderBy","querySnapshot","user_uid_1","user_uid_2","getRealTimeConversations","submitMessage","msgObj","add","isView","updateMessage","handleSeen","ref","setSeenMessage","map","item","index","document","querySelectorAll","classList","remove","selectItem","Mint","alt","PrivateRoute","Component","component","rest","getItem","parse","App","React","routes","path","route","exact","initialState","authenticating","lastestDoc","myReducers","combineReducers","action","store","createStore","rootReducers","applyMiddleware","thunk","window","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd4cec97.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDhWHYUo31EhafDtO8OdAlDZthmVN85TPI\",\r\n  authDomain: \"realtime-chat-ap.firebaseapp.com\",\r\n  projectId: \"realtime-chat-ap\",\r\n  storageBucket: \"realtime-chat-ap.appspot.com\",\r\n  messagingSenderId: \"930254441751\",\r\n  appId: \"1:930254441751:web:c256a9a83d26e7af4d7b52\",\r\n  measurementId: \"G-8Q95J2GC5R\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","export const authConstants = {\r\n    USER_LOGIN : 'USER_LOGIN',\r\n    USER_LOGOUT : 'USER_LOGOUT'\r\n}\r\n\r\nexport const userConstants = {\r\n    GET_REALTIME_USERS : 'GET_REALTIME_USERS',\r\n    UPDATE_MESSAGE : 'UPDATE_MESSAGE',\r\n    GET_REALTIME_MESSAGE : 'GET_REALTIME_MESSAGE',\r\n    SET_SEEN_MESSAGE : 'SET_SEEN_MESSAGE',\r\n    GET_LOADMORE_MESSAGE : 'GET_LOADMORE_MESSAGE',\r\n}\r\n","import firebase from \"../database/firebase\";\r\nimport { authConstants } from \"./constants\";\r\nexport const signUp = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(),\r\n                uid: data.user.uid,\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                const loggedUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\r\n                  \"user\",\r\n                  JSON.stringify({\r\n                    loggedUser,\r\n                  })\r\n                );\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: loggedUser },\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: err,\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore()\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline : true\r\n          })\r\n          .then(() => {\r\n            var name = data.user.displayName;\r\n            name = name.split(\" \");\r\n            var stringArray = new Array();\r\n            for (var i = 0; i < name.length; i++) {\r\n              stringArray.push(name[i]);\r\n            }\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n            const loggedUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n            };\r\n            localStorage.setItem(\r\n              \"user\",\r\n              JSON.stringify({\r\n                user: loggedUser,\r\n              })\r\n            );\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n              payload: { user: loggedUser },\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: err.message },\r\n        });\r\n      })\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n        payload: { user: user.user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser, logout } from \"../../actions\";\r\nexport default function Header() {\r\n  const auth = useSelector(state=>state.auth)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = ()=>{\r\n      dispatch(logout(auth.uid))\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navBar\">\r\n        <div className=\"navSide\">\r\n          <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/\" className=\"navLink\">\r\n                HOME\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/about\" className=\"navLink\">\r\n                ABOUT\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"logoArea\">\r\n          <img src=\"https://www.williamdollace.it/wp-content/themes/williamdollacetheme/images/logo.svg\" />\r\n        </div>\r\n        <div className=\"navSide\">\r\n          {!auth.authenticated ? <ul className=\"navWrap\">\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/login\" className=\"navLink\">\r\n                LOGIN\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/signup\" className=\"navLink\">\r\n                SIGN UP\r\n              </NavLink>\r\n            </li>\r\n          </ul>:\r\n          <ul className=\"navWrap\">\r\n          <li className=\"navItem\">\r\n          <NavLink to=\"/profile\" className=\"navLink\">\r\n               {auth.firstName} PROFILE\r\n              </NavLink>\r\n          </li>\r\n          <li className=\"navItem\">\r\n            <Link to=\"#\" onClick={handleLogout} className=\"navLink\">\r\n              LOG OUT\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Header from '../../components/Header/index'\r\nexport default function Layout(props) {\r\n    return (\r\n        <div className='layout'>\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './style.scss'\r\nexport default function Input({value,type,label,onChange,placeholder}) {\r\n    const [inputGroup,setInputGroup] = useState('inputGroup')\r\n    const handleChange = (e)=>{\r\n        const {value}=e.target;\r\n        onChange(value);\r\n    }\r\n    const onFocus = (e)=>{\r\n        setInputGroup('inputGroup onFocus')\r\n    }\r\n    return (\r\n        <div className={inputGroup}>\r\n            <label>{label}</label>\r\n            <input type={type} onFocus={onFocus} onChange={handleChange} placeholder={placeholder} value={value} />\r\n            <div className='line'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Button(props) {\r\n    return (\r\n        <button type={props.type} className='buttonGold'>{props.children}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Title(props) {\r\n    return (\r\n        <div className='title'>\r\n            <p >{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nimport {RiErrorWarningFill} from 'react-icons/ri'\r\nconst Error = (props)=>{\r\n    return(\r\n        <div className='error'>\r\n            <p>{props.children}</p>\r\n            <RiErrorWarningFill className='icon'/>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/Layout/UI/Input/index\";\r\nimport Card from \"../../components/Layout/UI/Card/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Error from '../../components/Layout/UI/Error/index'\r\nimport { signUp } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default function SignUp() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(signUp(form));\r\n  };\r\n  if (auth.authenticated === true) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <form onSubmit={handleSignUp} className=\"authForm\">\r\n            <Title>SIGN UP</Title>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"First name\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, firstName: value })}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Last name\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, lastName: value })}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, email: value })}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, password: value })}\r\n            />\r\n            {\r\n              auth.error ? <Error>{auth.error}</Error>: <></>\r\n            }\r\n            <Button type=\"submit\">SIGN UP</Button>\r\n          </form>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/Layout/UI/Input/index\";\r\nimport Card from \"../../components/Layout/UI/Card/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Error from \"../../components/Layout/UI/Error/index\";\r\nimport \"./style.scss\";\r\nimport { signIn } from \"../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signIn(form));\r\n  };\r\n  if (auth.authenticated === true) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <form onSubmit={handleLogin} className=\"authForm\">\r\n            <Title>Login</Title>\r\n            <Input\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, email: value })}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, password: value })}\r\n            />\r\n            {auth.error ? <Error>{auth.error}</Error> : <></>}\r\n            <Button type=\"submit\">LOG IN</Button>\r\n          </form>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/mint.98ef681e.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport \"./style.scss\";\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineFileGif,\r\n  AiOutlinePicture,\r\n  AiOutlineHeart,\r\n  AiOutlinePhone,\r\n  AiOutlineInfoCircle,\r\n  AiOutlineSend,\r\n  AiOutlineCheckCircle,\r\n  AiFillCheckCircle,\r\n} from \"react-icons/ai\";\r\nimport { BiLoaderCircle } from \"react-icons/bi\";\r\nimport { RiSendPlaneFill } from \"react-icons/ri\";\r\nimport { BsCameraVideo } from \"react-icons/bs\";\r\nimport { MdTagFaces } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRealTimeConversations,\r\n  getRealTimeUser,\r\n  setSeenMessage,\r\n  updateMessage,\r\n} from \"../../actions\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nconst Home = () => {\r\n  const [isSelected, setIsSelected] = useState(\"\");\r\n  const [userSelected, setUserSelected] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const { users, conversations, loadingUser, loadingChat } = useSelector(\r\n    (state) => state.user\r\n  );\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const viewUser = () => {\r\n    dispatch(getRealTimeUser(auth.uid));\r\n  };\r\n  useEffect(() => {\r\n    viewUser();\r\n  }, []);\r\n  const selectItem = (index) => {\r\n    if (isSelected !== \"\") {\r\n      const prevItem = document.querySelectorAll(\".friend\")[isSelected];\r\n      prevItem.classList.remove(\"isSelected\");\r\n      const curItem = document.querySelectorAll(\".friend\")[index];\r\n      curItem.classList.add(\"isSelected\");\r\n      setIsSelected(index);\r\n    } else {\r\n      const curItem = document.querySelectorAll(\".friend\")[index];\r\n      curItem.classList.add(\"isSelected\");\r\n      setIsSelected(index);\r\n    }\r\n  };\r\n  const initChat = (user) => {\r\n    const users = { uid_1: auth.uid, uid_2: user.uid };\r\n    dispatch(getRealTimeConversations(users));\r\n    setUserSelected(user);\r\n  };\r\n  const submitMessage = (e) => {\r\n    e.preventDefault();\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userSelected.uid,\r\n      message,\r\n    };\r\n    if (message !== \"\") {\r\n      dispatch(updateMessage(msgObj));\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  const handleScroll = ()=>{\r\n    var body = document.body; //IE 'quirks'\r\n    var document = document.documentElement; //IE with doctype\r\n    document = (document.clientHeight) ? document : body;\r\n\r\n    if (document.scrollTop == 0) {\r\n        alert(\"top\");\r\n    }        \r\n  }\r\n  const handleSeen = (e) => {\r\n    dispatch(setSeenMessage({ uid_1: auth.uid, uid_2: userSelected.uid }));\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"homePage\">\r\n        {!loadingUser ? (\r\n          <div className=\"friendList\">\r\n            {users.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={() => {\r\n                  initChat(item);\r\n                  selectItem(index);\r\n                }}\r\n                className=\"friend\"\r\n              >\r\n                <div className=\"avatar\">\r\n                  <img src={Mint} alt=\"avatar\" />\r\n                  <span\r\n                    className={item.isOnline ? \"isOnline\" : \"isOffline\"}\r\n                  ></span>\r\n                </div>\r\n                <div className=\"friendState\">\r\n                  <p className=\"friendName\">{item.firstName + item.lastName}</p>\r\n                  <div className=\"friendLastText\">\r\n                    <p className=\"lastText\">See you again </p>\r\n                    <span></span>\r\n                    <p>4 hours ago</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"friendButton\">\r\n                  <button>\r\n                    <div className=\"circle\"></div>\r\n                    <div className=\"circle\"></div>\r\n                    <div className=\"circle\"></div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"friendList loading\">\r\n            <BiLoaderCircle className=\"icon\" />\r\n          </div>\r\n        )}\r\n        {userSelected !== \"\" ? (\r\n          <div className=\"chatBox\">\r\n            <div className=\"headBox\">\r\n              <div className=\"headUser\">\r\n                <img alt=\"avatar\" src={Mint} />\r\n                <p>{userSelected.firstName}</p>\r\n              </div>\r\n              <div className=\"headCall\">\r\n                <AiOutlinePhone className=\"icon\" />\r\n                <BsCameraVideo className=\"icon\" />\r\n\r\n                <AiOutlineInfoCircle className=\"icon\" />\r\n              </div>\r\n            </div>\r\n            {!loadingChat ? (\r\n              <div className=\"chatArea\">\r\n                <div className='chatAreaWrap'>\r\n              {conversations.map((item, index) => (\r\n                  <div\r\n                    className={\r\n                      auth.uid == item.user_uid_1\r\n                        ? \"chatWrapper right\"\r\n                        : \"chatWrapper left\"\r\n                    }\r\n                  >\r\n                    {auth.uid !== item.user_uid_1 ? <img src={Mint} /> : <></>}\r\n                    <p key={index}>{item.message}</p>\r\n                    <AiOutlineCheckCircle\r\n                      className={\r\n                        auth.uid == item.user_uid_1 && !item.isView\r\n                          ? \"icon\"\r\n                          : \"icon gone\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"chatArea loading\">\r\n                <BiLoaderCircle className=\"icon\" />\r\n              </div>\r\n            )}\r\n            <div className=\"typeArea\">\r\n              <div className=\"action\">\r\n                <AiOutlinePlusCircle className=\"icon\" />\r\n                <AiOutlinePicture className=\"icon\" />\r\n                <MdTagFaces className=\"icon\" />\r\n                <AiOutlineFileGif className=\"icon\" />\r\n              </div>\r\n              <div className=\"input\">\r\n                <form onSubmit={submitMessage}>\r\n                  <input\r\n                    value={message}\r\n                    onClick={() => handleSeen()}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Aa\"\r\n                  />\r\n                </form>\r\n                <MdTagFaces className=\"icon\" />\r\n              </div>\r\n              <div className=\"likeButton\">\r\n                {message === \"\" ? (\r\n                  <AiOutlineHeart className=\"icon\" />\r\n                ) : (\r\n                  <AiOutlineSend onClick={submitMessage} className=\"icon\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"chatBox unSelected\">\r\n            <RiSendPlaneFill className=\"bigIcon\" />\r\n            <Title>Your Message</Title>\r\n            <p>Send private photos and messages to a friend or group.</p>\r\n            <Button>Send a message</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Home;\r\n","import { userConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const getRealTimeUser = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const unsubscribe = db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"!=\", uid)\r\n      .onSnapshot(function (snap) {\r\n        const users = [];\r\n        snap.forEach((doc) => {\r\n          if (doc.data().length != users.length) {\r\n            users.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n          payload: { users },\r\n        });\r\n      });\r\n    return unsubscribe;\r\n  };\r\n};\r\nexport const updateMessage = (msgObj) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .add({\r\n        ...msgObj,\r\n        isView: false,\r\n        createdAt: new Date(),\r\n      })\r\n      .then((data) => {\r\n        dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const setSeenMessage = ({ uid_1, uid_2 }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.SET_SEEN_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"==\", uid_2)\r\n      .where(\"user_uid_2\", \"==\", uid_1)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          doc.ref.update({\r\n            isView: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getLoadMoreConversations = ({ uid_1, uid_2, lastestDoc }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n      .startAfter(lastestDoc || 0)\r\n      .limit(10);\r\n    const data = await ref.get();\r\n    lastestDoc = data.docs[data.docs.length - 1];\r\n    const conversations = [];\r\n    data.forEach((doc) => {\r\n      conversations.push(doc.data());\r\n    });\r\n    dispatch({\r\n      type: `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`,\r\n      payload: { conversations, lastestDoc },\r\n    });\r\n    console.log(conversations);\r\n  };\r\n};\r\nexport const getRealTimeConversations = ({ uid_1, uid_2 }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    // const ref = db\r\n    //   .collection(\"conversations\")\r\n    //   .orderBy(\"createdAt\", \"asc\")\r\n    //   .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n    // const data = await ref.get();\r\n    // const lastestDoc = data.docs[data.docs.length - 1];\r\n    db.collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 == uid_1 &&\r\n              doc.data().user_uid_2 == uid_2) ||\r\n            (doc.data().user_uid_1 == uid_2 && doc.data().user_uid_2 == uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`,\r\n          payload: { conversations },\r\n        });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        const user = localStorage.getItem(\"user\")\r\n          ? JSON.parse(localStorage.getItem(\"user\"))\r\n          : null;\r\n        if (user) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SignUp from \"./containers/SignUpPage/index\";\nimport Login from \"./containers/LoginPage/index\";\nimport Home from \"./containers/HomePage/index\";\nimport PrivateRoute from \"./components/Private/index.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLoggedInUser } from \"./actions\";\nfunction App() {\n  const dispatch = useDispatch()\n  const auth = useSelector(state=>state.auth)\n\n React.useEffect(()=>{\n    if(!auth.authenticated)\n    {\n      dispatch(isLoggedInUser())\n    }\n  },[])\n  const routes = [\n    { path: \"/\", name: \"Home\", component: Home },\n    { path: \"/login\", name: \"Login\", component: Login },\n    { path: \"/signup\", name: \"Sign Up\", component: SignUp },\n  ];\n  return (\n    <div className=\"App\">\n      <Router>\n        {routes.map((route) => {\n          return (\n            <div  key={route.name}>\n              {route.name === \"Home\" ? (\n                <PrivateRoute\n                  path={route.path}\n                  component={route.component}\n                  exact\n                 \n                />\n              ) : (\n                <Route\n                  path={route.path}\n                  component={route.component}\n                />\n              )}\n            </div>\n          );\n        })}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { authConstants } from \"../actions/constants\"\r\n\r\nconst initialState = {\r\n    firstName : '',\r\n    lastName : '',\r\n    uid : '',\r\n    email : '',\r\n    authenticating : false,\r\n    authenticated : false,\r\n    error : null\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case `${authConstants.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating:true,\r\n            }\r\n            return state\r\n        case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n            debugger\r\n            state = {\r\n                ...state,\r\n                firstName : action.payload.user.firstName,\r\n                lastName : action.payload.user.lastName,\r\n                uid : action.payload.user.uid,\r\n                email : action.payload.user.email,\r\n                authenticated:true,\r\n                authenticating:false,\r\n                error:null,\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated:false,\r\n                authenticating:false,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n            state={\r\n                ...initialState,\r\n\r\n            }\r\n            return state\r\n\r\n        case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n            state={\r\n                ...state,\r\n                error:action.payload.error\r\n            }\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { userConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  conversations: [],\r\n  loadingUser: true,\r\n  loadingChat: true,\r\n  lastestDoc: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: false,\r\n        users: action.payload.users,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: action.payload.conversations,\r\n        lastestDoc: action.payload.lastestDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: [action.payload.conversations,...state.conversations],\r\n        lastestDoc: action.payload.lastestDoc,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer'\r\nimport userReducer from './userReducer'\r\nconst myReducers = combineReducers({\r\n    auth : authReducer,\r\n    user : userReducer,\r\n})\r\n\r\nexport default myReducers","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducers from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(\r\n  rootReducers,\r\n  applyMiddleware(thunk),\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}