{"version":3,"sources":["database/firebase.js","actions/constants.js","actions/auth.js","actions/user.js","actions/post.js","actions/interaction.js","images/100ppi/Asset 2.png","components/Header/index.js","components/Layout/index.js","components/Layout/UI/Input/index.js","components/Layout/UI/Card/index.js","components/Layout/UI/Button/index.js","components/Layout/UI/Title/index.js","components/Layout/UI/Error/index.js","containers/SignUpPage/index.js","containers/LoginPage/index.js","images/noavtar.png","containers/HomePage/index.js","images/mint.jpg","components/Layout/UI/Loading/index.js","components/PostDetail/index.js","components/ModalPost/index.js","components/ModalUpdateAvatar/index.js","containers/ProfilePage/index.js","components/Layout/UI/FormChat/index.js","containers/NewFeedPage/index.js","components/Private/index.js","App.js","reducers/authReducer.js","reducers/userReducer.js","reducers/postReducer.js","reducers/interactionReducer.js","reducers/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authConstants","userConstants","postConstants","interactionConstants","jwt","require","bcrypt","config","API_KEY","signUp","user","dispatch","a","type","db","firestore","auth","salt","genSaltSync","hash","hashSync","password","createUserWithEmailAndPassword","email","then","data","currentUser","name","firstName","lastName","updateProfile","displayName","collection","doc","uid","set","createdAt","Date","isOnline","loggedUser","token","sign","avatarUrl","expiresIn","localStorage","setItem","JSON","stringify","isLoggedInUser","catch","err","payload","error","message","getItem","parse","verify","decode","clear","update","updateMessage","msgObj","add","isView","ref","storage","file","metaData","contentType","child","put","snapshot","getDownloadURL","url","user_uid_1","user_uid_2","getRealTimeConversations","uid_1","uid_2","orderBy","where","get","lastestDoc","docs","length","onSnapshot","querySnapshot","conversations","forEach","push","reverse","pushPostComment","comment","commentRef","postRef","liked","pid","commentCount","FieldValue","increment","isEmpty","obj","prop","hasOwnProperty","updateLike","interaction","limit","newObj","key","id","likeCount","delete","Header","useSelector","state","useDispatch","className","to","src","Logo","alt","onClick","document","querySelector","classList","remove","authenticated","pathname","signOut","Layout","props","children","Input","value","label","onChange","placeholder","useState","inputGroup","setInputGroup","onFocus","e","target","Card","Button","Title","Error","SignUp","form","setForm","handleSignUp","preventDefault","onSubmit","Login","snap","result","exists","compare","res","signInWithEmailAndPassword","split","photoURL","stringArray","i","Home","isSelected","setIsSelected","userSelected","setUserSelected","setMessage","messageImg","setMessageImg","menuSelected","setMenuSelected","users","loadingUser","loadingChat","viewUser","undefined","useEffect","container","getElementById","window","addEventListener","innerWidth","style","transform","chatArea","scrollTop","scrollHeight","img","viewFile","messImgElement","URL","createObjectURL","files","submitMessage","handleSeen","setSeenMessage","map","item","index","initChat","querySelectorAll","selectItem","noavt","stopPropagation","handleOpenFriendBox","myTarget","handleCloseFriendBox","onScroll","body","clientHeight","click","Loading","PostDetail","React","replySelected","setReplySelected","commentValue","setCommentValue","post","auth_uid","useMemo","interactionArr","interactions","postByKey","loading","comments","handleLikePost","replies","owner","status","sender","content","newArr","closeReplyComment","openReplyComment","Mint","arr","console","log","isInArray","toDate","toDateString","ModalPost","postImage","setPostImage","filePost","postImageElement","imageBox","postText","pushPost","ModalUpdateAvatar","temp","setTemp","closeModalPost","modal","fileInput","useRef","imgSrc","viewPhoto","el","task","userLocal","notify","ProfilePage","userByKey","uidParam","match","params","userRef","posts","getUserById","openPostDetail","ownerId","postItem","commentSnapShot","commentItem","getPostByKey","loadingUserByKey","FormChat","handleFunction","onChangeValue","NewFeedPage","setComment","interactionRef","count","cmt","uSnap","inter","handleUpdateLike","testImg","slice","commentIndex","moment","fromNow","paddingLeft","paddingRight","handlePushComment","PrivateRoute","Component","component","rest","App","routes","path","NewFeed","Profile","route","exact","initialState","authenticating","updating","posting","loadingPosts","posted","isLoading","myReducers","combineReducers","action","lastDoc","store","createStore","rootReducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"o2BAcAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIFR,QAAf,ECfaS,EACI,aADJA,EAEK,cAGLC,EACY,qBADZA,EAEY,qBAFZA,EAGQ,iBAHRA,EAIc,uBAJdA,EAKU,mBALVA,EAMc,uBANdA,EAOgB,yBAGhBC,EACG,YADHA,EAEY,qBAFZA,EAGO,kBAHPA,EAKM,eALNA,EAMqB,8BAGrBC,EACmB,4BADnBA,EAEK,eCxBZC,EAAMC,EAAQ,KACdC,EAASD,EAAQ,KAEvBA,EAAQ,KAAUE,SAClB,IAAMC,EAAU,gCAEHC,EAAS,SAACC,GACrB,8CAAO,WAAOC,GAAP,qBAAAC,EAAA,sDACLD,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,cAEAc,EAAKvB,EAASwB,YACdC,EAAOzB,EAASyB,OAChBC,EAAOX,EAAOY,YAAY,IAC1BC,EAAOb,EAAOc,SAASV,EAAKW,SAAUJ,GAC5CD,EACGM,+BAA+BZ,EAAKa,MAAOb,EAAKW,UAChDG,MAAK,SAACC,GACL,IAAMC,EAAcnC,EAASyB,OAAOU,YAC9BC,EAAI,UAAMjB,EAAKkB,UAAX,YAAwBlB,EAAKmB,UACvCH,EACGI,cAAc,CACbC,YAAaJ,IAEdH,MAAK,WACJV,EAAGkB,WAAW,SACXC,IAAIR,EAAKf,KAAKwB,KACdC,IAAI,CACHP,UAAWlB,EAAKkB,UAChBC,SAAUnB,EAAKmB,SACfO,UAAW,IAAIC,KACfH,IAAKT,EAAKf,KAAKwB,IACfI,UAAU,EACVf,MAAOb,EAAKa,MACZF,SAAUF,IAEXK,MAAK,WACJ,IAcMe,EAAa,CACjBvB,MAAM,EACNwB,MAhBYpC,EAAIqC,KAChB,CACEb,UAAWlB,EAAKkB,UAChBC,SAAUnB,EAAKmB,SACfK,IAAKT,EAAKf,KAAKwB,IACfX,MAAOb,EAAKa,MACZmB,UAAWhC,EAAKgC,WAElBlC,EACA,CACEmC,UAAW,OAQfC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,IAC5CS,OAEDC,OAAM,SAACC,GACNvC,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAASD,aAKpBD,OAAM,SAACG,GACNzC,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEC,MAAOA,EAAMC,cA9DzB,2CAAP,uDA8JWL,EAAiB,WAC5B,8CAAO,WAAOrC,GAAP,iBAAAC,EAAA,uDAECF,EAAOkC,aAAaU,QAAQ,QAC9BR,KAAKS,MAAMX,aAAaU,QAAQ,SAChC,OAEId,EAAQ9B,EAAK8B,OAQjBpC,EAAIoD,OAAOhB,EAAOhC,GAAS,SAAC0C,EAAKO,GAC3BP,GACEN,aAAac,QACb/C,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CACPC,MAAO,kDAIf7D,EACGwB,YACAiB,WAAW,SACXC,IAAIwB,EAAOvB,KACXyB,OAAO,CACNrB,UAAU,IAEXd,MAAK,WACJb,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEzC,KAAM+C,YA1B3Bb,aAAac,QACb/C,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEC,MAAO,gBA8BtBR,aAAac,QAEb/C,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEC,MAAO,kBA7CjB,2CAAP,uDChJWQ,EAAgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQhD,EAAW,EAAXA,KACtC,8CAAO,WAAOF,GAAP,qBAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,cACTa,EAAKvB,EAASwB,YACP,SAATF,EACFC,EAAGkB,WAAW,iBACX8B,IADH,2BAEOD,GAFP,IAGIhD,KAAM,OACNkD,QAAQ,EACR3B,UAAW,IAAIC,QAEhBb,MAAK,SAACC,GACLd,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,iBAEhBgD,OAAM,SAACG,GACNzC,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,YACJkD,QAAS,CAAEC,MAAOA,EAAMC,eAIxBW,EAAMzE,EAAS0E,UAAUD,MACzBrC,EAAO,IAAIU,KAAS,IAAMwB,EAAOK,KAAKvC,KACtCwC,EAAW,CACfC,YAAaP,EAAOK,KAAKrD,MAEdmD,EAAIK,MAAM1C,GAAM2C,IAAIT,EAAOK,KAAMC,GACzC3C,MAAK,SAAC+C,GACTA,EAASP,IAAIQ,iBAAiBhD,MAAK,SAACiD,GAClC3D,EAAGkB,WAAW,iBACX8B,IAAI,CACHY,WAAYb,EAAOa,WACnBC,WAAYd,EAAOc,WACnBT,KAAMO,EACN5D,KAAM,OACNkD,QAAQ,EACR3B,UAAW,IAAIC,OAEhBb,MAAK,SAACC,GACLd,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,iBAEhBgD,OAAM,SAACG,GACNzC,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,YACJkD,QAAS,CAAEC,MAAOA,EAAMC,qBA5C/B,2CAAP,uDAuKWuB,EAA2B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAkB,EAAXjE,KACvD,8CAAO,WAAOF,GAAP,qBAAAC,EAAA,6DACLD,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,cACTa,EAAKvB,EAASwB,YACdiD,EAAMlD,EACTkB,WAAW,iBACX+C,QAAQ,YAAa,QACrBC,MAAM,aAAc,KAAM,CAACF,EAAOD,IANhC,SAOcb,EAAIiB,MAPlB,OAOCxD,EAPD,OAQCyD,EAAazD,EAAK0D,KAAK1D,EAAK0D,KAAKC,OAAS,GAChDtE,EAAGkB,WAAW,iBACX+C,QAAQ,YAAa,QACrBC,MAAM,aAAc,KAAM,CAACH,EAAOC,IAClCO,YAAW,SAACC,GACX,IAAMC,EAAgB,GACtBD,EAAcE,SAAQ,SAACvD,IAElBA,EAAIR,OAAOiD,aAAeG,GACzB5C,EAAIR,OAAOkD,aAAeG,GAC3B7C,EAAIR,OAAOiD,aAAeI,GAAS7C,EAAIR,OAAOkD,aAAeE,IAE9DU,EAAcE,KAAKxD,EAAIR,WAG3Bd,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,YACJkD,QAAS,CAAEoC,cAAeA,EAAcG,UAAWR,mBAzBpD,2CAAP,uDC/BWS,EAAkB,SAACC,GAC9B,8CAAO,WAAOjF,GAAP,mBAAAC,EAAA,sDAELD,EAAS,CAAEE,KAAK,GAAD,OAAKX,EAAL,cACTY,EAAKvB,EAASwB,YACd8E,EAAa/E,EAAGkB,WAAW,YAC3B8D,EAAUhF,EAAGkB,WAAW,SAC9B6D,EACG/B,IADH,2BAEO8B,GAFP,IAGIxD,UAAW,IAAIC,KACf0D,MAAO,KAERvE,MAAK,WACJsE,EAAQ7D,IAAI2D,EAAQI,KAAKrC,OAAO,CAC9BsC,aAAc1G,EAASwB,UAAUmF,WAAWC,UAAU,KAExDxF,EAAS,CAAEE,KAAK,GAAD,OAAKX,EAAL,iBAEhB+C,MAAM,CAAEpC,KAAK,GAAD,OAAKX,EAAL,cAlBV,2CAAP,uDCjKF,SAASkG,EAAQC,GACf,IAAK,IAAIC,KAAQD,EACf,GAAIA,EAAIE,eAAeD,GACrB,OAAO,EAIX,OAAO,EAEF,IAAME,EAAa,SAACC,GACzB,8CAAO,WAAO9F,GAAP,iBAAAC,EAAA,sDACCE,EAAKvB,EAASwB,YACd+E,EAAUhF,EAAGkB,WAAW,SAC9BlB,EAAGkB,WAAW,gBACXgD,MAAM,MAAO,KAAMyB,EAAYvE,KAC/B8C,MAAM,MAAO,KAAMyB,EAAYT,KAC/BU,MAAM,GACNzB,MACAzD,MAAK,SAAC+C,GACL,IAAIoC,EAAS,GACbpC,EAASiB,SAAQ,SAACvD,GAChB0E,EAAM,aACJC,IAAK3E,EAAI4E,IACN5E,EAAIR,WAIG2E,EAAQO,IAEpBhG,EAAS,CAAEE,KAAK,GAAD,OAAKV,EAAL,cACfW,EAAGkB,WAAW,gBACX8B,IADH,2BAEO2C,GAFP,IAGIrE,UAAW,IAAIC,QAEhBb,MAAK,WACJsE,EAAQ7D,IAAIwE,EAAYT,KAAKrC,OAAO,CAClCmD,UAAWvH,EAASwB,UAAUmF,WAAWC,UAAU,KAErDxF,EAAS,CACPE,KAAK,GAAD,OAAKV,EAAL,iBAGP8C,OAAM,SAACG,GACNzC,EAAS,CACPE,KAAK,GAAD,OAAKV,EAAL,YACJgD,QAAS,CAAEC,gBAIjBzC,EAAS,CAAEE,KAAK,GAAD,OAAKV,EAAL,cACfW,EAAGkB,WAAW,gBACXC,IAAI0E,EAAOC,KACXG,SACAvF,MAAK,WACJsE,EAAQ7D,IAAIwE,EAAYT,KAAKrC,OAAO,CAClCmD,UAAWvH,EAASwB,UAAUmF,WAAWC,WAAW,KAEtDxF,EAAS,CACPE,KAAK,GAAD,OAAKV,EAAL,iBAGP8C,OAAM,SAACG,GACNzC,EAAS,CACPE,KAAK,GAAD,OAAKV,EAAL,YACJgD,QAAS,CAAEC,kBAvDlB,2CAAP,uDCZa,MAA0B,oC,OCO1B,SAAS4D,IACtB,IAAMhG,EAAOiG,aAAY,SAACC,GAAD,OAAWA,EAAMlG,QACpCL,EAAWwG,cAYjB,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAASC,GAAG,6BAA6BD,UAAU,WAAnD,SACE,qBAAKE,IAAKC,EAAMC,IAAI,WAEtB,cAAC,IAAD,CAAeC,QAVJ,WACfC,SAASC,cAAc,YAAYC,UAAU9D,IAAI,cASXsD,UAAU,mBAC5C,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAgBK,QAfN,WAChBC,SAASC,cAAc,YAAYC,UAAUC,OAAO,cAcVT,UAAU,8BAC5CpG,EAAK8G,cAwBL,qBAAIV,UAAU,UAAd,UACE,oBAAIA,UAAU,UAAd,SACA,cAAC,IAAD,CAASC,GAAG,6BAA6BD,UAAU,UAAnD,uBAIF,oBAAIA,UAAU,UAAd,SACE,cAAC,IAAD,CAASC,GAAG,WAAWD,UAAU,UAAjC,wBAIA,oBAAIA,UAAU,UAAd,SACE,eAAC,IAAD,CACEC,GAAI,CACFU,SAAS,YAAD,OAAc/G,EAAKkB,KAC3BgF,MAAO,CAAEhF,IAAKlB,EAAKkB,MAErBkF,UAAU,UALZ,UAOGpG,EAAKY,UAPR,gBAUF,oBAAIwF,UAAU,UAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAII,QAlEN,WLgND,IAACvF,EK/MnBvB,GL+MmBuB,EK/MHlB,EAAKkB,ILgNvB,uCAAO,WAAOvB,GAAP,SAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKb,EAAL,cACJT,EAASwB,YACjBiB,WAAW,SACXC,IAAIC,GACJyB,OAAO,CACNrB,UAAU,IAEXd,MAAK,WACJjC,EACGyB,OACAgH,UACAxG,MAAK,WACJoB,aAAac,QACb/C,EAAS,CAAEE,KAAK,GAAD,OAAKb,EAAL,iBAEhBiD,OAAM,SAACC,GACNvC,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEC,MAAOF,WAnBvB,2CAAP,yDK/IkDkE,UAAU,UAA9C,0BA9CJ,qBAAIA,UAAU,UAAd,UACE,oBAAIA,UAAU,UAAd,SACA,cAAC,IAAD,CAASC,GAAG,6BAA6BD,UAAU,UAAnD,uBAIF,oBAAIA,UAAU,UAAd,SACE,cAAC,IAAD,CAASC,GAAG,WAAWD,UAAU,UAAjC,wBAIA,oBAAIA,UAAU,UAAd,SACE,cAAC,IAAD,CAASC,GAAG,SAASD,UAAU,UAA/B,qBAIF,oBAAIA,UAAU,UAAd,SACE,cAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,UAAhC,kCC9CD,SAASa,EAAOC,GAC3B,OACI,sBAAKd,UAAU,SAAf,UACI,cAACJ,EAAD,IACCkB,EAAMC,Y,OCJJ,SAASC,EAAT,GAAyD,IAAzCC,EAAwC,EAAxCA,MAAMxH,EAAkC,EAAlCA,KAAKyH,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,YAAc,EAChCC,mBAAS,cADuB,mBAC5DC,EAD4D,KACjDC,EADiD,KASnE,OACI,sBAAKvB,UAAWsB,EAAhB,UACI,gCAAQJ,IACR,uBAAOzH,KAAMA,EAAM+H,QANX,SAACC,GACbF,EAAc,uBAK2BJ,SAVxB,SAACM,GAAK,IAChBR,EAAOQ,EAAEC,OAATT,MACPE,EAASF,IAQwDG,YAAaA,EAAaH,MAAOA,IAC9F,qBAAKjB,UAAU,Y,OCbZ,SAAS2B,EAAKb,GACzB,OACI,qBAAKd,UAAU,OAAf,SACKc,EAAMC,W,OCHJ,SAASa,EAAOd,GAC3B,OACI,wBAAQrH,KAAMqH,EAAMrH,KAAM4G,QAASS,EAAMT,QAASL,UAAU,aAA5D,SAA0Ec,EAAMC,W,OCFzE,SAASc,EAAMf,GAC1B,OACI,qBAAKd,UAAU,QAAf,SACI,4BAAKc,EAAMC,a,mBCMRe,EARD,SAAChB,GACX,OACI,sBAAKd,UAAU,QAAf,UACI,4BAAIc,EAAMC,WACV,cAAC,IAAD,CAAoBf,UAAU,aCG3B,SAAS+B,KACtB,IAAMxI,EAAWwG,cACXnG,EAAOiG,aAAY,SAACC,GAAD,OAAWA,EAAMlG,QAFX,EAGPyH,mBAAS,CAC/BlH,MAAO,GACPF,SAAU,GACVO,UAAW,GACXC,SAAU,KAPmB,mBAGxBuH,EAHwB,KAGlBC,EAHkB,KASzBC,EAAY,uCAAG,WAAOT,GAAP,SAAAjI,EAAA,sDACnBiI,EAAEU,iBACF5I,EAASF,EAAO2I,IAFG,2CAAH,sDAIlB,OAA2B,IAAvBpI,EAAK8G,cACA,cAAC,IAAD,CAAUT,GAAG,+BAGlB,cAACY,EAAD,UACE,cAACc,EAAD,UACE,uBAAMS,SAAUF,EAAclC,UAAU,WAAxC,UACE,cAAC6B,EAAD,sBACA,cAACb,EAAD,CACEvH,KAAK,OACLyH,MAAM,aACNE,YAAY,GACZD,SAAU,SAACF,GAAD,OAAWgB,EAAQ,2BAAKD,GAAN,IAAYxH,UAAWyG,QAErD,cAACD,EAAD,CACEvH,KAAK,OACLyH,MAAM,YACNE,YAAY,GACZD,SAAU,SAACF,GAAD,OAAWgB,EAAQ,2BAAKD,GAAN,IAAYvH,SAAUwG,QAEpD,cAACD,EAAD,CACEvH,KAAK,OACLyH,MAAM,QACNE,YAAY,GACZD,SAAU,SAACF,GAAD,OAAWgB,EAAQ,2BAAKD,GAAN,IAAY7H,MAAO8G,QAEjD,cAACD,EAAD,CACEvH,KAAK,WACLyH,MAAM,WACNE,YAAY,GACZD,SAAU,SAACF,GAAD,OAAWgB,EAAQ,2BAAKD,GAAN,IAAY/H,SAAUgH,QAGlDrH,EAAKoC,MAAQ,cAAC,EAAD,UAAQpC,EAAKoC,QAAgB,6BAE5C,cAAC4F,EAAD,CAAQnI,KAAK,SAAb,4B,kBCPG4I,GAvCD,WACZ,IAAM9I,EAAWwG,cACXnG,EAAOiG,aAAY,SAACC,GAAD,OAAWA,EAAMlG,QAFxB,EAGMyH,mBAAS,CAC/BlH,MAAO,GACPF,SAAU,KALM,mBAGX+H,EAHW,KAGLC,EAHK,KAWlB,OAA2B,IAAvBrI,EAAK8G,cACA,cAAC,IAAD,CAAUT,GAAG,+BAGlB,cAACY,EAAD,UACE,cAACc,EAAD,UACE,uBAAMS,SAVM,SAACX,Gb0DD,IAACnI,EazDnBmI,EAAEU,iBACF5I,GbwDmBD,EaxDH0I,EbyDlB,uCAAO,WAAOzI,GAAP,iBAAAC,EAAA,sDACLD,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,cAEAc,EAAKvB,EAASwB,YACdC,EAAOzB,EAASyB,OACNF,EAAGkB,WAAW,SAE3BgD,MAAM,QAAS,KAAMtE,EAAKa,OAC1B0D,MACAzD,MAAK,SAACkI,GACLA,EAAKlE,SAAQ,SAACmE,GACRA,EAAOC,OACTtJ,EAAOuJ,QACLnJ,EAAKW,SACLsI,EAAOlI,OAAOJ,UACd,SAAC6B,EAAK4G,GACAA,EACF9I,EACG+I,2BAA2BrJ,EAAKa,MAAOb,EAAKW,UAC5CG,MAAK,SAACC,GACLX,EAAGkB,WAAW,SACXC,IAAIR,EAAKf,KAAKwB,KACdyB,OAAO,CACNrB,UAAU,IAEXd,MAAK,WAIJ,IAHA,IAAMG,EAAOF,EAAKf,KAAKqB,YAAYiI,MAAM,KACnCtH,EAAYjB,EAAKf,KAAKuJ,SACtBC,EAAc,GACXC,EAAI,EAAGA,EAAIxI,EAAKyD,OAAQ+E,IAC/BD,EAAYzE,KAAK9D,EAAKwI,IAExB,IAAMvI,EAAYD,EAAK,GACjBE,EAAWF,EAAK,GAchBY,EAAa,CACjBvB,MAAM,EACNwB,MAfYpC,EAAIqC,KAChB,CACEC,YACAd,UAAWA,EACXC,SAAUA,EACVK,IAAKT,EAAKf,KAAKwB,IACfX,MAAOb,EAAKa,OAEdf,EACA,CACEmC,UAAW,OAOfC,aAAaC,QACX,OACAC,KAAKC,UAAUR,IAEjB5B,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CACPzC,KAAM,CACJgC,YACAd,UAAWA,EACXC,SAAUA,EACVK,IAAKT,EAAKf,KAAKwB,IACfX,MAAOb,EAAKa,gBAO1BZ,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEC,MAAO,mCAM1BzC,EAAS,CACPE,KAAK,GAAD,OAAKb,EAAL,YACJmD,QAAS,CAAEC,MAAO,+BAjFvB,2CAAP,yDajDqCgE,UAAU,WAAvC,UACE,cAAC6B,EAAD,oBACA,cAACb,EAAD,CACEvH,KAAK,QACLyH,MAAM,QACNE,YAAY,GACZD,SAAU,SAACF,GAAD,OAAWgB,EAAQ,2BAAKD,GAAN,IAAY7H,MAAO8G,QAEjD,cAACD,EAAD,CACEvH,KAAK,WACLyH,MAAM,WACNE,YAAY,GACZD,SAAU,SAACF,GAAD,OAAWgB,EAAQ,2BAAKD,GAAN,IAAY/H,SAAUgH,QAEnDrH,EAAKoC,MAAQ,cAAC,EAAD,UAAQpC,EAAKoC,QAAiB,6BAC5C,cAAC4F,EAAD,CAAQnI,KAAK,SAAb,4B,qCC5CG,OAA0B,oCCsa1BuJ,GArYF,WAAO,IAAD,EACmB3B,mBAAS,IAD5B,mBACV4B,EADU,KACEC,EADF,OAEuB7B,mBAAS,IAFhC,mBAEV8B,EAFU,KAEIC,EAFJ,OAGa/B,mBAAS,IAHtB,mBAGVpF,EAHU,KAGDoH,EAHC,OAImBhC,mBAAS,IAJ5B,mBAIViC,EAJU,KAIEC,EAJF,KAKXhK,EAAWwG,cALA,EAMuBsB,oBAAU,GANjC,mBAMVmC,EANU,KAMIC,EANJ,OAab5D,aAAY,SAACC,GAAD,OAAWA,EAAMxG,QAL/BoK,EARe,EAQfA,MACAvF,EATe,EASfA,cACAwF,EAVe,EAUfA,YACAC,EAXe,EAWfA,YAGIhK,GAdW,EAYfkE,WAEW+B,aAAY,SAACC,GAAD,OAAWA,EAAMlG,SAEpCiK,EAAW,Wd/CY,IAAC/I,EcgD5BvB,GdhD4BuB,EcgDHlB,EAAKkB,Id/ChC,uCAAO,WAAOvB,GAAP,eAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,cACTa,EAAKvB,EAASwB,iBACRmK,IAARhJ,GACFpB,EAAGkB,WAAW,SACXgD,MAAM,MAAO,KAAM9C,GACnBmD,YAAW,SAAUqE,GACpB,IAAMoB,EAAQ,GACdpB,EAAKlE,SAAQ,SAACvD,GACRA,EAAIR,OAAO2D,SAAW0F,EAAM1F,QAC9B0F,EAAMrF,KAAN,aAAYmB,IAAM3E,EAAI4E,IAAM5E,EAAIR,YAGpCd,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,YACJkD,QAAS,CAAE2H,cAfd,2CAAP,yDciDAK,qBAAU,WACRF,IACA,IAAMG,EAAY1D,SAAS2D,eAAe,YAC1CC,OAAOC,iBAAiB,UAAU,WAChB,OAAbH,GAEGE,OAAOE,WAAa,OACtBJ,EAAUK,MAAMC,UAAY,uBAIjC,IAsBHP,qBAAU,WACY,IAAhBZ,GACF5J,EACEiE,EAAyB,CACvBC,MAAO7D,EAAKkB,IACZ4C,MAAOyF,EAAarI,IACpBrB,KAAM,iBAIX,CAAC0J,IACJY,qBAAU,WACR,GAAqB,KAAjBZ,IAAwBS,EAAa,CACvC,IAAIW,EAAWjE,SAAS2D,eAAe,YACvCM,EAASC,UAAYD,EAASE,gBAE/B,CAACtG,IACJ4F,qBAAU,WACU,IAAdT,GACFoB,EAAIP,iBAAiB,SAAUQ,KAEhC,CAACrB,IAEJ,IAAMoB,EAAMpE,SAAS2D,eAAe,aAC9BW,EAAiBtE,SAAS2D,eAAe,cAKzCU,EAAW,SAAClD,GACCnB,SAASC,cAAc,aAC/BC,UAAU9D,IAAI,WACvBkI,EAAe1E,IAAM2E,IAAIC,gBAAgBJ,EAAIK,MAAM,KAuB/CC,EAAgB,SAACvD,GACrBA,EAAEU,iBACF,IAAM1F,EAAS,CACba,WAAY1D,EAAKkB,IACjByC,WAAY4F,EAAarI,IACzBmB,WAEc,KAAZA,IACF1C,EAASiD,EAAc,CAAEC,OAAQA,KACjClD,EACEiE,EAAyB,CACvBC,MAAO7D,EAAKkB,IACZ4C,MAAOyF,EAAarI,IACpBrB,KAAM,eAOV4J,EAAW,MAcT4B,EAAa,SAACxD,GAClBlI,EdlG0B,SAAC,GAAsB,IAApBkE,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACtC,8CAAO,WAAOnE,GAAP,SAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,cACJV,EAASwB,YACjBiB,WAAW,iBACXgD,MAAM,aAAc,KAAMF,GAC1BE,MAAM,aAAc,KAAMH,GAC1BE,QAAQ,YAAa,QACrBM,YAAW,SAACC,GACXA,EAAcE,SAAQ,SAACvD,GACrBA,EAAI+B,IAAIL,OAAO,CACbI,QAAQ,UAVX,2CAAP,sDciGWuI,CAAe,CAAEzH,MAAO7D,EAAKkB,IAAK4C,MAAOyF,EAAarI,QA0BjE,OACE,cAAC+F,EAAD,UACC,qBAAKb,UAAU,gBAAf,SACA,sBAAKP,GAAG,WAAWO,UAAU,WAA7B,UACG,qBAAKA,UAAU,2BAAf,SACI2D,EAwEA,qBAAK3D,UAAU,WAAf,SACE,cAAC,KAAD,CAAgBA,UAAU,WAxE5B,qBAAKA,UAAU,aAAf,SACG0D,EAAMyB,KAAI,SAACC,EAAMC,GAAP,OACT,sBAEEhF,QAAS,YAtIR,SAAC/G,GAChB,IAAMoK,EAAQ,CAAEjG,MAAO7D,EAAKkB,IAAK4C,MAAOpE,EAAKwB,KAC7CsI,EAAgB9J,GAChBC,EAASiE,EAAyBkG,IAC9BQ,OAAOE,YAAc,OACvB9D,SAAS2D,eAAe,YAAYI,MAAMC,UAAY,qBAkIxCgB,CAASF,GApJR,SAACC,GACC,KAAfpC,GACe3C,SAASiF,iBAAiB,WAAWtC,GAC7CzC,UAAUC,OAAO,cACVH,SAASiF,iBAAiB,WAAWF,GAC7C7E,UAAU9D,IAAI,cACtBwG,EAAcmC,KAEE/E,SAASiF,iBAAiB,WAAWF,GAC7C7E,UAAU9D,IAAI,cACtBwG,EAAcmC,IA2IAG,CAAWH,IAEbrF,UAAU,SANZ,UAQE,sBAAKA,UAAU,SAAf,UACE,qBACEE,IAAuB,MAAlBkF,EAAK9J,UAAoB8J,EAAK9J,UAAYmK,GAC/CrF,IAAI,WAEN,sBACEJ,UAAWoF,EAAKlK,SAAW,WAAa,iBAG5C,sBAAK8E,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACGoF,EAAK5K,UAAY,IAAM4K,EAAK3K,WAE/B,sBAAKuF,UAAU,iBAAf,UACE,mBAAGA,UAAU,WAAb,4BACA,yBACA,kDAGJ,qBACEA,UAAU,eACVK,QAAS,SAACoB,GACR4D,IAAU7B,EAnDF,SAAC/B,EAAG4D,GAC9B5D,EAAEiE,kBACFpF,SAASiF,iBAAiB,aAAaF,GAAO7E,UAAU9D,IAAI,QAC5D+G,EAAgB4B,GACZ7B,GAAgB,GAClBlD,SACGiF,iBAAiB,aACjB/B,GAAchD,UAAUC,OAAO,QA6CdkF,CAAoBlE,EAAG4D,GA/DlB,SAAC5D,GAE5B,GADAA,EAAEiE,kBACElC,GAAgB,EAAG,CACrB,IAAMoC,EAAWtF,SAASiF,iBAAiB,aAAa/B,GACxC/B,EAAEC,OAAO1B,YACT4F,IACdA,EAASpF,UAAUC,OAAO,QAC1BgD,GAAiB,KAyDCoC,CAAqBpE,IAL7B,SAQE,mCACE,qBAAKzB,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,gBAGnB,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAeA,UAAU,SACzB,cAAC,IAAD,CAASC,GAAE,mBAAcmF,EAAK5F,KAA9B,mCAIF,sBAAKQ,UAAU,WAAf,UACE,cAAC,IAAD,CAAeA,UAAU,SACzB,+DAGJ,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,SAC3B,0DAEF,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAeA,UAAU,SACzB,oDA5DDqF,UAyEG,KAAjBlC,EACC,sBAAKnD,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CACEK,QAzFW,WACvBC,SAAS2D,eAAe,YAAYI,MAAMC,UAAY,iBAyF1CtE,UAAU,sBAEZ,sBAAKA,UAAU,WAAf,UACE,qBACEI,IAAI,SACJF,IAC4B,MAA1BiD,EAAa7H,UACT6H,EAAa7H,UACbmK,KAGR,cAAC,IAAD,CAASxF,GAAE,mBAAckD,EAAa3D,KAAtC,SACE,4BAAI2D,EAAa3I,iBAGrB,sBAAKwF,UAAU,WAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,SAC1B,cAAC,KAAD,CAAeA,UAAU,SAEzB,cAAC,IAAD,CAAqBA,UAAU,eAGjC4D,EAiDA,qBAAK5D,UAAU,mBAAf,SACE,cAAC,KAAD,CAAgBA,UAAU,WAjD5B,qBAAK8F,SApJI,WACnB,IAAIC,EAAOzF,SAASyF,KAChBxB,EAAWjE,SAASC,cAAc,cACtCgE,EAAWA,EAASyB,aAAezB,EAAWwB,GAEjCvB,WA+I0B/E,GAAG,WAAWO,UAAU,WAArD,SACE,qBAAKA,UAAU,eAAf,SACG7B,EAAcgH,KAAI,SAACC,EAAMC,GAAP,OACjB,sBAEErF,UACEpG,EAAKkB,MAAQsK,EAAK9H,WACd,oBACA,mBALR,UAQG1D,EAAKkB,MAAQsK,EAAK9H,WACjB,qBACE8C,IAAK+C,EAAa7H,UAClB0E,UAAU,SACVE,IAC4B,MAA1BiD,EAAa7H,UACT6H,EAAa7H,UACbmK,KAIR,6BAEa,SAAdL,EAAK3L,KACJ,qBAAKuG,UAAU,cAAf,SACE,4BAAgBoF,EAAKnJ,SAAboJ,KAGV,qBACErF,UAAU,cACVI,IAAKiF,EACLnF,IAAKkF,EAAKtI,MACLuI,GAGT,cAAC,IAAD,CACErF,UACEpG,EAAKkB,MAAQsK,EAAK9H,YAAe8H,EAAKzI,OAElC,YADA,WAnCH0I,UAgDf,sBAAKrF,UAAU,WAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKI,IAAI,aAAaX,GAAG,eAEzB,qBAAKO,UAAU,WACf,cAAC,IAAD,CAAeK,QAzPL,SAACoB,GACzBA,EAAEU,iBACF,IAAM1F,EAAS,CACba,WAAY1D,EAAKkB,IACjByC,WAAY4F,EAAarI,IACzBgC,KAAM4H,EAAIK,MAAM,IAGlBxL,EAASiD,EAAc,CAAEC,OAAQA,EAAQhD,KAAM,UAC9B6G,SAASC,cAAc,aAC/BC,UAAUC,OAAO,WAC1BmE,EAAe1E,IAAM,GACrB3G,EACEiE,EAAyB,CACvBC,MAAO7D,EAAKkB,IACZ4C,MAAOyF,EAAarI,IACpBrB,KAAM,gBAyO+CuG,UAAU,YAEvD,sBAAKA,UAAU,aAAf,UACE,uBAAOvG,KAAK,OAAOuG,UAAU,cAC7B,cAAC,IAAD,CAAqBA,UAAU,YAEjC,sBAAKA,UAAU,aAAf,UACE,uBAAOvG,KAAK,OAAOgG,GAAG,YAAYO,UAAU,cAC5C,cAAC,IAAD,CAAkBK,QA3QjB,SAACoB,GAChBiD,EAAIuB,QACJ1C,EAAc,aAyQqCvD,UAAU,YAEjD,sBAAKA,UAAU,aAAf,UACE,uBAAOvG,KAAK,OAAOuG,UAAU,cAC7B,cAAC,KAAD,CAAYA,UAAU,YAExB,sBAAKA,UAAU,aAAf,UACE,uBAAOvG,KAAK,OAAOuG,UAAU,cAC7B,cAAC,IAAD,CAAkBA,UAAU,eAGhC,sBAAKA,UAAU,QAAf,UACE,sBAAMoC,SAAU4C,EAAhB,SACE,uBACE/D,MAAOhF,EACPoE,QAAS,kBAAM4E,KACf9D,SAAU,SAACM,GAAD,OAAO4B,EAAW5B,EAAEC,OAAOT,QACrCxH,KAAK,OACL2H,YAAY,SAGhB,cAAC,KAAD,CAAYpB,UAAU,YAExB,qBAAKA,UAAU,aAAf,SACe,KAAZ/D,EACC,cAAC,IAAD,CAAgB+D,UAAU,SAE1B,cAAC,IAAD,CAAeK,QAAS2E,EAAehF,UAAU,iBAMzD,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,YAC3B,cAAC6B,EAAD,2BACA,uFACA,cAACD,EAAD,wC,kBC9ZG,I,OAAA,IAA0B,kC,gBCG1B,SAASsE,KACpB,OACI,cAAC,KAAD,CAAgBlG,UAAU,gBCYlC,IAqOemG,GArOI,SAAC,GAAY,IAAXvM,EAAU,EAAVA,KACbL,EAAWwG,cADY,EAEaqG,IAAM/E,SAAS,IAF5B,mBAEtBgF,EAFsB,KAEPC,EAFO,OAGWF,IAAM/E,SAAS,IAH1B,mBAGtBkF,EAHsB,KAGRC,EAHQ,OAIC3G,aAAY,SAACC,GAAD,OAAWA,KAA7C2G,EAJqB,EAIrBA,KAAMpH,EAJe,EAIfA,YACRqH,EAAWN,IAAMO,SAAQ,WAC7B,OAAO/M,IACP,CAACA,IACGgN,EAAiBR,IAAMO,SAAQ,WACnC,OAAOtH,EAAYwH,eAClB,CAACxH,EAAYwH,eAVa,EAWOT,IAAMO,SAAQ,WAChD,MAAO,CACLvB,KAAMqB,EAAKK,UAAU1B,KACrB2B,QAASN,EAAKK,UAAUC,QACxBC,SAAUP,EAAKK,UAAUE,YAE1B,CAACP,EAAKK,UAAU1B,KAAMqB,EAAKK,UAAUE,WANhC5B,EAXqB,EAWrBA,KAAM2B,EAXe,EAWfA,QAASC,EAXM,EAWNA,SAOvBZ,IAAMrC,WAAU,WfuCqB,IAACnF,EetCpCrF,GfsCoCqF,EetCHwG,EAAK5F,IfuCxC,uCAAO,WAAOjG,GAAP,eAAAC,EAAA,2DACMsK,GAAPlF,IACIlF,EAAKvB,EAASwB,YACpBJ,EAAS,CACPE,KAAK,GAAD,OAAKV,EAAL,cAENW,EAAGkB,WAAW,gBACXgD,MAAM,MAAO,KAAMgB,GACnBX,YAAW,SAACd,GACX,IAAMyJ,EAAiB,GACvBzJ,EAASiB,SAAQ,SAACvD,GAChB+L,EAAevI,KAAKxD,EAAIR,WAE1Bd,EAAS,CACPE,KAAK,GAAD,OAAKV,EAAL,YACJgD,QAAS,CAAE8K,aAAcD,SAf5B,2CAAP,0DetCG,CAACxB,EAAK5F,IAAIjG,IACb,IAkCM0N,EAAiB,WACrB,IAAMhI,EAAM,CACVL,IAAKwG,EAAK5F,IACV1E,IAAK4L,GAEPnN,EAAS6F,EAAWH,KAoBtB,OACE,sBAAKe,UAAU,aAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,OAAOK,QA7Db,WACHC,SAASC,cAAc,eAC/BC,UAAUC,OAAO,QAC5B,IAAMyG,EAAU5G,SAASC,cAAc,YACvC,GAAe,MAAX2G,EAAiB,CACnBA,EAAQ1G,UAAUC,OAAO,QAEzB6F,EADe,QAwDdS,EACC,cAACb,GAAD,IAEA,sBAAKlG,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKE,IAAKkF,EAAKtI,KAAMsD,IAAKgF,EAAK5F,QAEjC,sBAAKQ,UAAU,aAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8BACE,qBAAKE,IAA6B,MAAxBkF,EAAK+B,MAAM7L,UAAoB8J,EAAK+B,MAAM7L,UAAYmK,GAAOrF,IAAKgF,EAAK5F,QAEnF,4BAAI4F,EAAK+B,MAAM3M,UAAY,IAAM4K,EAAK+B,MAAM1M,cAE9C,sBAAKuF,UAAU,OAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,iBAGnB,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8BACE,qBAAKE,IAA6B,MAAxBkF,EAAK+B,MAAM7L,UAAoB8J,EAAK+B,MAAM7L,UAAYmK,GAAOrF,IAAKgF,EAAK5F,QAEnF,mBAAGQ,UAAU,OAAb,SACGoF,EAAK+B,MAAM3M,UAAY,IAAM4K,EAAK+B,MAAM1M,WAE3C,mBAAGuF,UAAU,SAAb,SAAuBoF,EAAKgC,YAE9B,qBAAKpH,UAAU,aAAf,SACE,qCAEF,qBAAKA,UAAU,aAAf,SACGgH,EAAS7B,KAAI,SAACC,EAAMC,GAAP,OACZ,sBAAiBrF,UAAU,UAA3B,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,OAAf,SACA,qBACEE,IAA8B,MAAzBkF,EAAKiC,OAAO/L,UAAoB8J,EAAKiC,OAAO/L,UAAYmK,GAC7DrF,IAAKgF,EAAKiC,OAAO7M,gBAIrB,sBAAKwF,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACG,IACD,4BAAIoF,EAAKiC,OAAO7M,YAChB,4BAAI4K,EAAKkC,eAGb,sBAAKtH,UAAU,QAAf,UACE,sCACA,sCACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAgBA,UAAU,cAG9B,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,SACdqG,EAAchB,GACb,mBAAGhF,QAAS,kBAjGV,SAACgF,GACzB,IAAMkC,EAAM,aAAOlB,GACnB/F,SAASiF,iBAAiB,YAAYF,GAAO7E,UAAUC,OAAO,QAC9D8G,EAAOlC,IAAS,EAChBiB,EAAiBiB,GA6FuBC,CAAkBnC,IAApC,6BAIA,mBAAGhF,QAAS,kBA7GX,SAACgF,GACxB,IAAMkC,EAAM,aAAOlB,GAEnB/F,SAASiF,iBAAiB,YAAYF,GAAO7E,UAAU9D,IAAI,QAC3D6K,EAAOlC,IAAS,EAChBiB,EAAiBiB,GAwGuBE,CAAiBpC,IAAnC,gCAKJ,qBAAKrF,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKE,IAAKwH,GAAMtH,IAAKsH,OAEvB,sBAAK1H,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACG,IACD,gDACA,4BAAIoF,EAAKkC,eAIb,sBAAKtH,UAAU,QAAf,UACE,sCACA,sCACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAgBA,UAAU,2BAtD9BqF,QAgEd,sBAAKrF,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,WAAf,UA3HE,SAAC2H,GAEf,GADFC,QAAQC,IAAIjB,GACPe,EAAI3J,OAAO,EACd,CACE,IAAK,IAAI+E,EAAG,EAAEA,EAAE4E,EAAI3J,OAAO+E,IAEzB,GADA6E,QAAQC,IAAIF,EAAI5E,GAAGjI,KAChB6M,EAAI5E,GAAGjI,MAAM4L,EAEd,OAAO,EAGX,OAAO,EAGP,OAAO,EA8GMoB,CAAUlB,GACT,cAAC,IAAD,CAAavG,QAAS4G,EAAgBjH,UAAU,SAEhD,cAAC,IAAD,CACEK,QAAS4G,EACTjH,UAAU,SAId,cAAC,KAAD,CAAQA,UAAU,SAClB,cAAC,IAAD,CAAeA,UAAU,YAE3B,qBAAKA,UAAU,WAAf,SACE,cAAC,KAAD,CAAaA,UAAU,cAG3B,sBAAKA,UAAU,UAAf,UACE,0CAAa4G,EAAe5I,OAA5B,cACA,4BAAIoH,EAAKpK,UAAU+M,SAASC,uBAGhC,uBAAMhI,UAAU,eAAhB,UACE,qBAAKA,UAAU,QAAf,SACE,uBACEmB,SAAU,SAACM,GAAD,OAAO+E,EAAgB/E,EAAEC,OAAOT,QAC1CA,MAAOsF,EACP9G,GAAG,cACH2B,YAAY,uBAGhB,qBAAKpB,UAAU,SAAf,SACE,cAAC4B,EAAD,CAAQnI,KAAK,SAAS4G,QA1LZ,SAACoB,GACzBA,EAAEU,iBACF,IAAM3D,EAAU,CACd8I,QAASf,EACT3H,IAAKwG,EAAK5F,IACV1E,IAAK4L,GAEPnN,EAASgF,EAAgBC,IACzBgI,EAAgB,KAkLF,oCCzIHyB,I,OAvFG,WAChB,IAAM1O,EAAWwG,cACXnG,EAAOiG,aAAY,SAACC,GAAD,OAAWA,EAAMlG,QAFpB,EAIYwM,IAAM/E,SAAS,IAJ3B,mBAIf6G,EAJe,KAIJC,EAJI,KAShBC,EAAW9H,SAAS2D,eAAe,YACnCoE,EAAmB/H,SAAS2D,eAAe,oBAK3CqE,EAAWhI,SAASC,cAAc,aAClCoE,EAAW,SAAClD,GAEhB6G,EAAS9H,UAAU9D,IAAI,WAGnB0L,EAASrD,MAAM/G,OAAS,IAC1BqK,EAAiBnI,IAAM2E,IAAIC,gBAAgBsD,EAASrD,MAAM,KAE5DoD,EAAa,KAEf/B,IAAMrC,WAAU,WACG,IAAbmE,GACFE,EAASjE,iBAAiB,SAAUQ,KAErC,CAACuD,IAeJ,OACE,qBAAKlI,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC6B,EAAD,4BAEF,cAAC,IAAD,CAAgBxB,QA9CD,WACrBC,SAASC,cAAc,cAAcC,UAAUC,OAAO,SA6CPT,UAAU,YAErD,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKE,IAAKwH,OAEZ,sBAAK1H,UAAU,aAAf,UACE,qCACA,sBAAKA,UAAU,eAAf,UACE,cAAC,KAAD,CAAQA,UAAU,SAClB,oDAIN,sBAAKA,UAAU,YAAf,UACE,0BACEP,GAAG,WACH2B,YAAY,4BAEd,qBAAKpB,UAAU,WAAf,SACE,qBAAKP,GAAG,0BAGZ,sBAAKO,UAAU,aAAf,UACE,cAAC4B,EAAD,CAAQvB,QA7CG,WACjB,IAAIkI,EAAWjI,SAAS2D,eAAe,YAAYhD,MACnD,GAAImH,EAASrD,MAAM/G,OAAS,EAAG,CAC7B,IAAMyI,EAAO,CACX3J,KAAMsL,EAASrD,MAAM,GACrBqC,OAAQmB,EACRzN,IAAIlB,EAAKkB,KAEXvB,EjB/CkB,SAACkN,GACvB,8CAAO,WAAOlN,GAAP,qBAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKX,EAAL,cACTY,EAAKvB,EAASwB,YACdiD,EAAMzE,EAAS0E,UAAUD,MACzBrC,EAAO,IAAIU,KAAS,IAAMwL,EAAK3J,KAAKvC,KACpCwC,EAAW,CACfC,YAAayJ,EAAK3J,KAAKrD,MAEZmD,EAAIK,MAAM1C,GAAM2C,IAAIuJ,EAAK3J,KAAMC,GACvC3C,MAAK,SAAC+C,GACTA,EAASP,IAAIQ,iBAAiBhD,MAAK,SAACiD,GAClC3D,EAAGkB,WAAW,SACX8B,IAAI,CACHI,KAAMO,EACNrC,UAAW,IAAIC,KACfmM,OAAQX,EAAKW,OACbtM,IAAK2L,EAAK3L,IACV4E,UAAW,EACXb,aAAc,IAEfzE,MAAK,WACJb,EAAS,CAAEE,KAAK,GAAD,OAAKX,EAAL,iBAEhB+C,OAAM,SAACC,GACNvC,EAAS,CACPE,KAAK,GAAD,OAAKX,EAAL,YACJiD,QAAS,CAAEC,MAAOF,cA1BvB,2CAAP,sDiB8Ca0M,CAAS/B,IAClB6B,EAAS9H,UAAUC,OAAO,WAC1B4H,EAAiBnI,IAAM,GACvBqI,EAAW,KAkCP,kBACA,sBAAKvI,UAAU,WAAf,UACE,uBAAOvG,KAAK,OAAOgG,GAAG,aACtB,cAAC,IAAD,CAAkBY,QApEN,WACpB+H,EAASnC,QACTkC,EAAa,aAkEqCnI,UAAU,SACpD,cAAC,KAAD,CAAOA,UAAU,sBCpBdyI,I,OA/DW,WACtB,IAAMlP,EAAWwG,cACXnG,EAAOiG,aAAY,SAAAC,GAAK,OAAIA,EAAMlG,QAFZ,EAGNyH,mBAAS,IAHH,mBAGvBqH,EAHuB,KAGjBC,EAHiB,KAKxBC,EAAiB,WACrBC,EAAMrI,UAAUC,OAAO,SAErBqI,EAAYC,iBAAO,MACnBC,EAASD,iBAAO,MAChBF,EAAQE,iBAAO,MAKbE,EAAY,WACZH,EAAU/D,MAAM/G,OAAS,IAC3BgL,EAAO9I,IAAM2E,IAAIC,gBAAgBgE,EAAU/D,MAAM,MAWrD,OALAhB,qBAAU,WACI,YAAR2E,GACFI,EAAU3E,iBAAiB,SAAU8E,KAEtC,CAACP,IAEF,qBAAK9L,IAAK,SAAAsM,GAAE,OAAEL,EAAMK,GAAIlJ,UAAU,oBAAlC,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAgBK,QAASuI,EAAgB5I,UAAU,SACnD,qBAAKA,UAAU,aAAf,SACE,gDAEF,sBAAKA,UAAU,WAAf,UACE,wBAAQK,QAzBM,WACpByI,EAAU7C,QACV0C,EAAQ,aAuBF,2BACA,uBACElP,KAAK,OACLuG,UAAU,QACVpD,IAAK,SAACsM,GACJJ,EAAYI,QAIlB,qBAAKlJ,UAAU,YAAf,SACE,qBAAKA,UAAU,aAAf,SACE,qBACEP,GAAG,QACH7C,IAAK,SAACsM,GACJF,EAASE,SAKjB,sBAAKlJ,UAAU,YAAf,UACE,cAAC4B,EAAD,CAAQvB,QApCW,WnBuFG,IAACvF,EAAKgC,EmBtFhCvD,GnBsF2BuB,EmBtFDlB,EAAKkB,InBsFCgC,EmBtFGgM,EAAU/D,MAAM,GnBuFvD,uCAAO,WAAOxL,GAAP,yBAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,cACTa,EAAKvB,EAASwB,YACdiD,EAAMzE,EAAS0E,UAAUD,MACzBrC,EAAO,IAAIU,KAAS,IAAM6B,EAAKvC,KAC/BwC,EAAWD,EAAKrD,KAChB0P,EAAOvM,EAAIK,MAAM1C,GAAM2C,IAAIJ,EAAMC,GACnCqM,EAAY5N,aAAaU,QAAQ,QACjCR,KAAKS,MAAMX,aAAaU,QAAQ,SAChC,KACJiN,EAAK/O,MAAK,SAAC+C,GACTA,EAASP,IACNQ,iBACAhD,MAAK,SAACiD,GACQlF,EAASyB,OAAOU,YACxBI,cAAc,CACjBmI,SAAUxF,IAEZ3D,EAAGkB,WAAW,SAASC,IAAIC,GAAKyB,OAAO,CACrCjB,UAAW+B,IAGb+L,EAAS,2BACJA,EAAU9P,MADN,IAEPgC,UAAW+B,OAIdjD,MAAK,WACJb,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,YACJkD,QAAS,CACPsN,OAAQ,sBACR/N,UAAW8N,EAAU9N,gBAI1BO,OAAM,SAACC,GACNvC,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,WACJkD,QAAS,CAAEC,MAAOF,WAxCrB,2CAAP,yDmBpDQ,kBACA,cAAC8F,EAAD,CAAQvB,QAASuI,EAAjB,8BCsGKU,GAhJK,SAACxI,GACnB,IAAMvH,EAAWwG,cADY,EAENF,aAAY,SAACC,GAAD,OAAWA,KAAtCxG,EAFqB,EAErBA,KAAMM,EAFe,EAEfA,KAIR2P,EAAYnD,IAAMO,SAAQ,WAC9B,OAAOrN,EAAKiQ,YACX,CAACjQ,EAAKiQ,YACH7C,EAAWN,IAAMO,SAAQ,WAC7B,OAAO/M,EAAKkB,MACX,CAAClB,EAAKkB,MACH0O,EAAWpD,IAAMO,SAAQ,WAC7B,OAAO7F,EAAM2I,MAAMC,SAClB,CAAC5I,EAAM2I,MAAMC,SAIhBtD,IAAMrC,WAAU,WACdxK,EpBqDuB,SAAC,GAAa,IAAXuB,EAAU,EAAVA,IAC5B,8CAAO,WAAOvB,GAAP,iBAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKZ,EAAL,cACTa,EAAKvB,EAASwB,YACdgQ,EAAUjQ,EAAGkB,WAAW,SACdlB,EAAGkB,WAAW,SAEtBgD,MAAM,MAAO,KAAM9C,GAAKmD,WAAhC,uCAA2C,WAAOd,GAAP,iBAAA3D,EAAA,6DACnCoQ,EAAQ,GACdzM,EAASiB,SAAQ,SAACvD,GAChB+O,EAAMvL,KAAN,aAAamB,IAAK3E,EAAI4E,IAAO5E,EAAIR,YAHM,SAKhBsP,EAAQ9O,IAAIC,GAAK+C,MALD,OAKnC0L,EALmC,OAKQlP,OACjDd,EAAS,CACPE,KAAK,GAAD,OAAKZ,EAAL,YACJkD,QAAS,CAAEwN,UAAU,2BAAMA,GAAP,IAAkBK,MAAOA,OARN,2CAA3C,uDANK,2CAAP,sDoBtDWC,CAAYL,MACpB,CAACA,IAEJ,IAAMM,EAAiB,SAACtK,GACHc,SAASC,cAAc,eAC/BC,UAAU9D,IAAI,QACzBnD,EnBVwB,SAACiG,EAAKuK,GAChC,8CAAO,WAAOxQ,GAAP,qBAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKX,EAAL,cACTY,EAAKvB,EAASwB,YACd+E,EAAUhF,EAAGkB,WAAH,SACV+O,EAAUjQ,EAAGkB,WAAW,SACxB6D,EAAa/E,EAAGkB,WAAW,YAEjC8D,EAAQb,MAAMzD,MAAK,SAAC+C,GAClB,IAAI6M,EAAW,GACfvL,EACGd,QAAQ,YAAa,QACrBC,MAAM,MAAO,KAAM4B,GACnBvB,WAHH,uCAGc,WAAOgM,GAAP,iBAAAzQ,EAAA,6DACJwN,EAAW,GACjBiD,EAAgB7L,SAAQ,SAAC8L,GACvBP,EACG/L,MAAM,MAAO,KAAMsM,EAAY7P,OAAOS,KACtCmD,YAAW,SAACqE,GACXA,EAAKlE,SAAQ,SAACvD,GACZmM,EAAS3I,KAAT,aAAgBgJ,OAAQxM,EAAIR,QAAW6P,EAAY7P,kBAPjD,SAWUsP,EAAQ9O,IAAIkP,GAASlM,MAX/B,OAWJsJ,EAXI,OAaVhK,EAASiB,SAAQ,SAACvD,GACZA,EAAI4E,KAAOD,IACbwK,EAAQ,yBAAKxK,IAAK3E,EAAI4E,IAAO5E,EAAIR,QAAzB,IAAiC8M,MAAOA,EAAM9M,aAKxDd,EADEyQ,IAAa,GACN,CACPvQ,KAAK,GAAD,OAAKX,EAAL,YACJiD,QAAS,CAAEiO,WAAUhD,aAGd,CACPvN,KAAK,GAAD,OAAKX,EAAL,YACJiD,QAAS,CAAEC,MAAM,iBAAD,OAAmBwD,EAAnB,sBA3BV,2CAHd,0DATG,2CAAP,sDmBSW2K,CAAa3K,EAAK+J,EAAUzO,OAgBvC,OACE,eAAC+F,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAYjH,KAAM8M,IAChBpN,EAAK8Q,iBA2FL,qBAAKpK,UAAU,cAAf,SACE,cAACkG,GAAD,MA3FF,qBAAKlG,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,aAAf,SAEI,qBACEE,IACyB,MAAvBqJ,EAAUjO,UAAoBiO,EAAUjO,UAAYmK,GAEtDrF,IAAI,aAIV,cAAC,IAAD,CACEC,QA9BgB,WAC5BC,SAASC,cAAc,sBAAsBC,UAAU9D,IAAI,SA8B/CsD,UAAU,YAGd,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,WAAf,UACE,4BAAIuJ,EAAU/O,UAAY,IAAM+O,EAAU9O,WAC1C,cAACmH,EAAD,UACG8E,IAAa6C,EAAUzO,IAAM,eAAiB,WAEjD,cAAC,IAAD,CAAkBkF,UAAU,YAE9B,sBAAKA,UAAU,aAAf,UACE,qCACM,gDAEN,sCACO,mDAGT,qBAAKA,UAAU,aAAf,SACE,uEAEF,qBAAKK,QAlDC,WAClBC,SAASC,cAAc,YAAYC,UAAU9D,IAAI,cAiDTsD,UAAU,WAAtC,SACE,eAAC4B,EAAD,sBACE,cAAC,IAAD,CAAqB5B,UAAU,oBAKvC,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACG0G,IAAa6C,EAAUzO,IACtB,sBAAKkF,UAAU,aAAf,UACE,cAAC,IAAD,CACAK,QA3DG,WACnBC,SAASC,cAAc,YAAYC,UAAUC,OAAO,cA2DtCT,UAAU,uBAER,cAAC4B,EAAD,CAAQvB,QAxEF,WACpBC,SAASC,cAAc,cAAcC,UAAU9D,IAAI,SAuErC,+BAGF,6BAEF,qBAAKsD,UAAU,WAAf,SACGuJ,EAAUK,MAAM5L,OAAS,EACxBuL,EAAUK,MAAMzE,KAAI,SAACC,GAAD,OAClB,sBAEE/E,QAAS,kBAAMyJ,EAAe1E,EAAK5F,MACnCQ,UAAU,OAHZ,UAKE,qBAAKA,UAAU,YAAf,SACE,qBAAKI,IAAKgF,EAAKpK,UAAWkF,IAAKkF,EAAKtI,SAEtC,sBAAKkD,UAAU,YAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,SAD5B,IACuCoF,EAAK1F,aAE5C,8BACE,cAAC,KAAD,CAAQM,UAAU,SADpB,IAC+BoF,EAAKvG,qBAZjCuG,EAAK5F,QAkBd,qBAAKQ,UAAU,OAAf,SACE,yE,qCCnJL,SAASqK,GAASvJ,GAI/B,OACE,uBAAMsB,SAAU,SAACX,GAAD,OAAKX,EAAMwJ,eAAe7I,IAAI4C,MAAOvD,EAAMuD,MAAOrE,UAAU,eAA5E,UACE,qBAAKA,UAAU,QAAf,SACE,uBAAOmB,SAAU,SAACM,GAAD,OAND,SAACA,GACrBX,EAAMK,SAASM,EAAEC,OAAOT,OAKEsJ,CAAc9I,IAAIR,MAAOH,EAAMG,MAAOxB,GAAG,cAAc2B,YAAY,uBAE3F,qBAAKpB,UAAU,SAAf,SACE,cAAC4B,EAAD,CAAQvB,QAAS,SAACoB,GAAD,OAAKX,EAAMwJ,eAAe7I,IAAIhI,KAAMqH,EAAMrH,KAA3D,uBCMR,IA+Je+Q,GA/JK,WAClB,IAAMjR,EAAWwG,cADO,EAEMsB,mBAAS,IAFf,mBAEjB7C,EAFiB,KAERiM,EAFQ,OAGD5K,aAAY,SAACC,GAAD,OAAWA,KAAtC2G,EAHgB,EAGhBA,KAAM7M,EAHU,EAGVA,KACRgQ,EAAQxD,IAAMO,SAAQ,WAC1B,OAAOF,EAAKmD,QACX,CAACnD,EAAKmD,QACTxD,IAAMrC,WAAU,WACdxK,ErBuFF,uCAAO,WAAOA,GAAP,uBAAAC,EAAA,sDACLD,EAAS,CAAEE,KAAK,GAAD,OAAKX,EAAL,cACTY,EAAKvB,EAASwB,YACdgQ,EAAUjQ,EAAGkB,WAAW,SACxB8D,EAAUhF,EAAGkB,WAAW,SACxB6D,EAAa/E,EAAGkB,WAAW,YAC3B8P,EAAiBhR,EAAGkB,WAAW,gBACrC8D,EAAQT,WAAR,uCAAmB,WAAOd,GAAP,qBAAA3D,EAAA,sDACXoQ,EAAQ,GACdzM,EAASiB,SAAQ,SAACqI,GAChBmD,EAAMvL,KAAN,aAAamB,IAAKiH,EAAKhH,GAAIuH,SAAW,GAAGH,aAAa,IAAMJ,EAAKpM,YAE/DsQ,EAAQ,EALK,IAAAnR,EAAA,iBAMRuJ,GANQ,eAAAvJ,EAAA,6DAOT2N,EAAQwC,EAAQ9O,IAAI+O,EAAM7G,GAAGjI,KAAK+C,MAExCY,EAAWb,MAAM,MAAO,KAAMgM,EAAM7G,GAAGvD,KAAKvB,YAAW,SAACqE,GAEtDA,EAAKlE,SAAQ,SAACwM,GACZjB,EAAQ/L,MAAM,MAAO,KAAMgN,EAAIvQ,OAAOS,KAAKmD,YAAW,SAAC4M,GACrDA,EAAMzM,SAAQ,SAACiJ,GACbuC,EAAM7G,GAAGiE,SAAS3I,KAAlB,2BAA4BuM,EAAIvQ,QAAhC,IAAwCgN,OAAQA,EAAOhN,sBAK/DqQ,EAAe9M,MAAM,MAAM,KAAKgM,EAAM7G,GAAGvD,KAAKvB,YAAW,SAACqE,GACxDA,EAAKlE,SAAQ,SAAC0M,GACZnB,EAAQ/L,MAAM,MAAO,KAAMkN,EAAMzQ,OAAOS,KAAKmD,YAAW,SAAC4M,GACvDA,EAAMzM,SAAQ,SAACiJ,GACbuC,EAAM7G,GAAG8D,aAAaxI,KAAtB,2BAAgCyM,EAAMzQ,QAAtC,IAA8CgN,OAAQA,EAAOhN,sBAvBtD,SA6BS8M,EA7BT,OA6BfyC,EAAM7G,GAAGoE,MA7BM,OA6BgB9M,OAC3BsQ,IAAUf,EAAM5L,OAAQ,GACxBzE,EAAS,CACPE,KAAK,GAAD,OAAKX,EAAL,YACJiD,QAAS,CAAE6N,MAAM,GAAD,OAAMA,MAG5Be,GAAS,EApCM,0CAMR5H,EAAI,EANI,YAMDA,EAAI6G,EAAM5L,QANT,0CAMR+E,GANQ,eAMiBA,IANjB,2DAAnB,uDAPK,2CAAP,yDqBtFG,IACH,IAAMgI,EAAmB,SAACnM,GACxB,IAAMS,EAAc,CAClBT,MACA9D,IAAKlB,EAAKkB,KAEZvB,EAAS6F,EAAWC,KAEhByI,EAAY,SAACH,GACjB,GAAIA,EAAI3J,OAAS,EAAG,CAClB,IAAK,IAAI+E,EAAI,EAAGA,EAAI4E,EAAI3J,OAAQ+E,IAC9B,GAAI4E,EAAI5E,GAAGjI,MAAQlB,EAAKkB,IACtB,OAAO,EAGX,OAAO,EAEP,OAAO,GAcX,OACE,cAAC+F,EAAD,UACE,qBAAKb,UAAU,UAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKE,IAAK8K,GAAS5K,IAAI,aAEzB,qBAAKJ,UAAU,WAAf,SACE,8CAGJ,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKE,IAAK8K,GAAS5K,IAAI,aAEzB,qBAAKJ,UAAU,WAAf,SACE,2CAGJ,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKE,IAAK8K,GAAS5K,IAAI,aAEzB,qBAAKJ,UAAU,WAAf,SACE,iDAIN,qBAAKA,UAAU,cAAf,SACG4J,EAAMzE,KAAI,SAACC,EAAMC,GAAP,OACT,sBAAiBrF,UAAU,OAA3B,UACE,eAAC,IAAD,CAASC,GAAE,kBAAamF,EAAKtK,KAAOkF,UAAU,YAA9C,UACE,qBAAKA,UAAU,aAAf,SACE,qBACEE,IAC0B,MAAxBkF,EAAK+B,MAAM7L,UAAoB8J,EAAK+B,MAAM7L,UAAYmK,GAExDrF,IAAI,mBAGR,qBAAKJ,UAAU,YAAf,SACE,4BAAIoF,EAAK+B,MAAM3M,UAAY,IAAM4K,EAAK+B,MAAM1M,gBAGhD,qBAAKuF,UAAU,YAAf,SACE,qBAAKE,IAAKkF,EAAKtI,KAAMsD,IAAKgF,EAAKgC,WAEjC,sBAAKpH,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACI8H,EAAU1C,EAAKyB,cAMf,cAAC,IAAD,CACExG,QAAS,kBAAM0K,EAAiB3F,EAAK5F,MACrCQ,UAAU,SAPZ,cAAC,IAAD,CACEK,QAAS,kBAAM0K,EAAiB3F,EAAK5F,MACrCQ,UAAU,SAQd,cAAC,KAAD,CAAQA,UAAU,SAClB,cAAC,IAAD,CAAeA,UAAU,YAE3B,qBAAKA,UAAU,OAAf,SACE,cAAC,KAAD,CAAaA,UAAU,cAG3B,qBAAKA,UAAU,UAAf,SACE,0CAAaoF,EAAKyB,aAAa7I,OAA/B,gBAEF,qBAAKgC,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,OAAhB,SACGoF,EAAK+B,MAAM3M,UAAY,IAAM4K,EAAK+B,MAAM1M,WAE3C,sBAAMuF,UAAU,UAAhB,SAA2BoF,EAAKgC,cAGpC,qBAAKpH,UAAU,iBAAf,SACGoF,EAAK4B,SAAShJ,OAAS,EACtB,0CAAaoH,EAAK4B,SAAShJ,OAA3B,eAEA,+BAGJ,qBAAKgC,UAAU,aAAf,SACGoF,EAAK4B,SAASiE,MAAM,EAAE,GAAG9F,KAAI,SAAC3G,EAAS0M,GAAV,OAC5B,sBAAwBlL,UAAU,UAAlC,UACE,sBAAMA,UAAU,OAAhB,SACGxB,EAAQ6I,OAAO7M,UACd,IACAgE,EAAQ6I,OAAO5M,WAEnB,sBAAMuF,UAAU,SAAhB,SAA0BxB,EAAQ8I,YAN1B4D,QAUd,qBAAKlL,UAAU,YAAf,SACE,8BAAImL,KAAO/F,EAAKpK,UAAU+M,UAAUqD,SAAQ,GAA5C,YAEF,cAACf,GAAD,CACElJ,SAAU,SAACF,GAAD,OAAWwJ,EAAWxJ,IAChCoD,MAAO,CAAEgH,YAAY,GAAGC,aAAa,IACrC7R,KAAK,SACLwH,MAAOzC,EACP8L,eAAgB,SAAC7I,GAAD,OAtHR,SAACA,EAAE7C,GAC3B6C,EAAEU,iBAEY,KAAV3D,IAEFjF,EAASgF,EAAgB,CAAEK,MAAK9D,IAAKlB,EAAKkB,IAAKwM,QAAS9I,KACxDiM,EAAW,KAgH0Bc,CAAkB9J,EAAE2D,EAAK5F,UA3E1C6F,kB,UC1FX,SAASmG,GAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,8BACtE,OACE,cAAC,IAAD,2BACMA,GADN,IAEED,UAAW,SAAC5K,GACV,IAAMxH,EAAOkC,aAAaU,QAAQ,QAC9BR,KAAKS,MAAMX,aAAaU,QAAQ,SAChC,KACJ,OAAI5C,GACEA,EAAKM,KACA,cAAC6R,EAAD,eAAe3K,IAKjB,cAAC,IAAD,CAAUb,GAAG,eC8Bf2L,OApCf,WACE,IAAMrS,EAAWwG,cACXnG,EAAOiG,aAAY,SAACC,GAAD,OAAWA,EAAMlG,QAC1CwM,IAAMrC,WAAU,WACTnK,EAAK8G,eACRnH,EAASqC,OAEV,IAEH,IAAMiQ,EAAS,CACb,CAAEC,KAAM,6BAA8BvR,KAAM,OAAQmR,UAAW1I,IAC/D,CAAE8I,KAAM,SAAUvR,KAAM,QAASmR,UAAWrJ,IAC5C,CAAEyJ,KAAM,UAAWvR,KAAM,UAAWmR,UAAW3J,IAC/C,CAAE+J,KAAM,WAAYvR,KAAM,WAAYmR,UAAWK,IACjD,CAAED,KAAM,gBAAiBvR,KAAM,UAAWmR,UAAWM,KAGvD,OACE,qBAAKhM,UAAU,MAAf,SACE,cAAC,IAAD,UACG6L,EAAO1G,KAAI,SAAC8G,GACX,OACE,8BACkB,UAAfA,EAAM1R,MAAmC,YAAf0R,EAAM1R,KAC/B,cAAC,IAAD,CAAOuR,KAAMG,EAAMH,KAAMJ,UAAWO,EAAMP,UAAWQ,OAAK,IAE1D,cAACV,GAAD,CAAcM,KAAMG,EAAMH,KAAMJ,UAAWO,EAAMP,aAJ3CO,EAAM1R,c,SC/BtB4R,GAAe,CACnB3R,UAAW,GACXC,SAAU,GACVK,IAAK,GACLX,MAAO,GACPmB,UAAW,GACX8Q,gBAAgB,EAChB1L,eAAe,EACf1E,MAAO,KACPqN,OAAQ,GACRgD,UAAW,GCVPF,GAAe,CACnBzI,MAAO,GACPvF,cAAe,GACfwF,aAAa,EACbC,aAAa,EACb9F,WAAY,GACZsM,kBAAkB,EAClBb,UAAW,CACTK,MAAQ,IAEV5N,MAAO,GACPqN,OAAS,GACTgD,UAAU,GCZNF,GAAe,CACnBvC,MAAO,GACP0C,SAAS,EACTC,cAAc,EACdvQ,MAAO,KACPwQ,QAAQ,EACR1F,UAAW,CACT1B,KAAM,GACN4B,SAAU,GACVD,SAAS,EACT/K,MAAO,OCVLmQ,GAAe,CACjBtF,aAAe,GACf4F,WAAY,EACZzQ,MAAQ,KACRqN,OAAS,MCMEqD,GAPIC,aAAgB,CAC/B/S,KJSW,WAAmC,IAAlCkG,EAAiC,uDAAzBqM,GAAcS,EAAW,uCAC/C,OAAQA,EAAOnT,MACb,IAAI,GAAJ,OAAQb,EAAR,YAKE,OAJAkH,EAAK,2BACAA,GADA,IAEHsM,gBAAgB,IAGpB,IAAI,GAAJ,OAAQxT,EAAR,YAYE,OAXAkH,EAAK,2BACAA,GADA,IAEHtF,UAAWoS,EAAO7Q,QAAQzC,KAAKkB,UAC/BC,SAAUmS,EAAO7Q,QAAQzC,KAAKmB,SAC9BK,IAAK8R,EAAO7Q,QAAQzC,KAAKwB,IACzBX,MAAOyS,EAAO7Q,QAAQzC,KAAKa,MAC3BmB,UAAWsR,EAAO7Q,QAAQzC,KAAKgC,UAC/BoF,eAAe,EACf0L,gBAAgB,EAChBpQ,MAAO,OAIX,IAAI,GAAJ,OAAQpD,EAAR,YAOE,OANAkH,EAAK,2BACAA,GADA,IAEHY,eAAe,EACf0L,gBAAgB,EAChBpQ,MAAO4Q,EAAO7Q,QAAQC,QAI1B,IAAI,GAAJ,OAAQpD,EAAR,YACE,OAAOkH,EAET,IAAI,GAAJ,OAAQlH,EAAR,YAIE,OAHAkH,EAAK,eACAqM,IAIP,IAAI,GAAJ,OAAQvT,EAAR,YAKE,OAJAkH,EAAK,2BACAA,GADA,IAEH9D,MAAO4Q,EAAO7Q,QAAQC,QAG1B,QACE,OAAO8D,IIvDTxG,KHSW,WAAmC,IAAlCwG,EAAiC,uDAAzBqM,GAAcS,EAAW,uCAC/C,OAAQA,EAAOnT,MACb,IAAI,GAAJ,OAAQZ,EAAR,YAKE,OAJAiH,EAAK,2BACAA,GADA,IAEH6D,aAAa,IAGjB,IAAI,GAAJ,OAAQ9K,EAAR,YAME,OALAiH,EAAK,2BACAA,GADA,IAEH6D,aAAa,EACbD,MAAOkJ,EAAO7Q,QAAQ2H,QAG1B,IAAI,GAAJ,OAAQ7K,EAAR,YAKE,OAJAiH,EAAK,2BACAA,GADA,IAEH8D,aAAa,IAGjB,IAAI,GAAJ,OAAQ/K,EAAR,YAOE,OANAiH,EAAK,2BACAA,GADA,IAEH8D,aAAa,EACbzF,cAAeyO,EAAO7Q,QAAQoC,cAC9BL,WAAY8O,EAAO7Q,QAAQ8Q,UAG/B,IAAI,GAAJ,OAAQhU,EAAR,YAKE,OAJAiH,EAAK,2BACAA,GADA,IAEH8D,aAAa,IAGjB,IAAI,GAAJ,OAAQ/K,EAAR,YAUE,OATAiH,EAAK,2BACAA,GADA,IAEH8D,aAAa,EACbzF,cAAc,GAAD,oBACRyO,EAAO7Q,QAAQoC,eADP,aAER2B,EAAM3B,gBAEXL,WAAY8O,EAAO7Q,QAAQ+B,aAG/B,IAAI,GAAJ,OAAQjF,EAAR,YAIE,OAHAiH,EAAK,eACAA,GAGP,IAAI,GAAJ,OAAQjH,EAAR,YAKE,OAJAiH,EAAK,2BACAA,GADA,IAEHsK,kBAAkB,IAGtB,IAAI,GAAJ,OAAQvR,EAAR,YAME,OALAiH,EAAK,2BACAA,GADA,IAEHsK,kBAAkB,EAClBb,UAAWqD,EAAO7Q,QAAQwN,YAG9B,IAAI,GAAJ,OAAQ1Q,EAAR,YAKE,OAJAiH,EAAK,2BACAA,GADA,IAEH9D,MAAO4Q,EAAO7Q,QAAQC,QAGxB,IAAI,GAAJ,OAAQnD,EAAR,YAKE,OAJAiH,EAAM,2BACDA,GADA,IAEHuM,UAAS,IAGb,IAAI,GAAJ,OAAQxT,EAAR,YAUE,OATAiH,EAAK,2BACAA,GADA,IAEHuM,UAAW,EACXhD,OAAQuD,EAAO7Q,QAAQsN,OACvBE,UAAS,2BACJzJ,EAAMyJ,WADF,IAEPjO,UAAWsR,EAAO7Q,QAAQT,cAIlC,QACE,OAAOwE,IGhGT2G,KFOW,WAAmC,IAAlC3G,EAAiC,uDAAzBqM,GAAcS,EAAW,uCAC/C,OAAQA,EAAOnT,MACb,IAAI,GAAJ,OAAQX,EAAR,YAIE,OAHAgH,EAAK,eACAA,GAGP,IAAI,GAAJ,OAAQhH,EAAR,YAME,OALAgH,EAAK,2BACAA,GADA,IAEHwM,SAAS,EACTE,QAAQ,IAGZ,IAAI,GAAJ,OAAQ1T,EAAR,YACEgH,EAAK,2BACAA,GADA,IAEH0M,QAAQ,EACRF,SAAS,EACTtQ,MAAO4Q,EAAO7Q,QAAQC,QAE1B,IAAI,GAAJ,OAAQlD,EAAR,YAIE,OAHAgH,EAAK,eACAA,GAGP,IAAI,GAAJ,OAAQhH,EAAR,YAME,OALAgH,EAAK,2BACAA,GADA,IAEHyM,cAAc,EACd3C,MAAOgD,EAAO7Q,QAAQ6N,QAG1B,IAAI,GAAJ,OAAQ9Q,EAAR,YAME,OALAgH,EAAK,2BACAA,GADA,IAEHyM,cAAc,EACdvQ,MAAO4Q,EAAO7Q,QAAQC,QAG1B,IAAI,GAAJ,OAAQlD,EAAR,YAIE,OAHAgH,EAAK,eACAA,GAGP,IAAI,GAAJ,OAAQhH,EAAR,YAWE,OAVAgH,EAAK,2BACAA,GADA,IAEHgH,UAAU,2BACLhH,EAAMgH,WADF,IAEP1B,KAAMwH,EAAO7Q,QAAQiO,SACrBhD,SAAU4F,EAAO7Q,QAAQiL,SACzBD,SAAS,EACT/K,MAAO,SAIb,IAAI,GAAJ,OAAQlD,EAAR,YASE,OARAgH,EAAK,2BACAA,GADA,IAEHgH,UAAU,2BACLhH,EAAMgH,WADF,IAEPC,SAAS,EACT/K,MAAO4Q,EAAO7Q,QAAQC,UAI5B,IAAI,GAAJ,OAAQlD,EAAR,YAKE,OAJAgH,EAAK,2BACAA,GADA,IAEHyM,cAAc,IAGlB,IAAI,GAAJ,OAAQzT,EAAR,YASE,OAPAgH,EAAK,2BACAA,GADA,IAEHyM,cAAc,EACd3C,MAAMgD,EAAO7Q,QAAQ6N,MACrB5N,MAAM,KAIV,IAAI,GAAJ,OAAQlD,EAAR,YACEgH,EAAK,2BACAA,GADA,IAEHyM,cAAe,EACfvQ,MAAO4Q,EAAO7Q,QAAQC,QAE1B,QACE,OAAO8D,IEhGTT,YDDW,WAAgC,IAA/BS,EAA8B,uDAAtBqM,GAAaS,EAAS,uCAC1C,OAAQA,EAAOnT,MACX,IAAI,GAAJ,OAAQV,EAAR,YAMI,OAAO+G,EACX,IAAI,GAAJ,OAAQ/G,EAAR,YAKI,OAJA+G,EAAK,2BACEA,GADF,IAED2M,WAAU,IAGlB,IAAI,GAAJ,OAAQ1T,EAAR,YAMI,OALA+G,EAAK,2BACEA,GADF,IAED2M,WAAU,EACV5F,aAAe+F,EAAO7Q,QAAQ8K,eAGtC,QACI,OAAO/G,M,UEtBJgN,GANDC,aACZC,GACAC,aAAgBC,OCClBhJ,OAAO4I,MAAQA,GACfK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFxM,SAAS2D,eAAe,W","file":"static/js/main.2314b68d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDhWHYUo31EhafDtO8OdAlDZthmVN85TPI\",\r\n  authDomain: \"realtime-chat-ap.firebaseapp.com\",\r\n  projectId: \"realtime-chat-ap\",\r\n  storageBucket: \"realtime-chat-ap.appspot.com\",\r\n  messagingSenderId: \"930254441751\",\r\n  appId: \"1:930254441751:web:c256a9a83d26e7af4d7b52\",\r\n  measurementId: \"G-8Q95J2GC5R\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","export const authConstants = {\r\n    USER_LOGIN : 'USER_LOGIN',\r\n    USER_LOGOUT : 'USER_LOGOUT',\r\n}\r\n\r\nexport const userConstants = {\r\n    UPDATE_USER_AVATAR : 'UPDATE_USER_AVATAR',\r\n    GET_REALTIME_USERS : 'GET_REALTIME_USERS',\r\n    UPDATE_MESSAGE : 'UPDATE_MESSAGE',\r\n    GET_REALTIME_MESSAGE : 'GET_REALTIME_MESSAGE',\r\n    SET_SEEN_MESSAGE : 'SET_SEEN_MESSAGE',\r\n    GET_LOADMORE_MESSAGE : 'GET_LOADMORE_MESSAGE',\r\n    GET_USER_PROFILE_BY_ID : 'GET_USER_PROFILE_BY_ID'\r\n\r\n}\r\nexport const postConstants = {\r\n    PUSH_POST : 'PUSH_POST',\r\n    GET_REALTIME_POSTS : 'GET_REALTIME_POSTS',\r\n    GET_POST_BY_KEY:'GET_POST_BY_KEY',\r\n    CLEAR_POST_ITEM :'CLEAR_POST_ITEM',\r\n    PUSH_COMMENT : 'PUSH_COMMENT',\r\n    GET_REALTIME_POSTS_NEW_FEED : 'GET_REALTIME_POSTS_NEW_FEED'\r\n}\r\n\r\nexport const interactionConstants = {\r\n    GET_REALTIME_INTERACTIONS : 'GET_REALTIME_INTERACTIONS',\r\n    UPDATE_LIKE : 'UPDATE_LIKES',\r\n}","import firebase from \"../database/firebase\";\r\nimport { authConstants } from \"./constants\";\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst bcrypt = require(\"bcryptjs\");\r\n\r\nrequire(\"dotenv\").config();\r\nconst API_KEY = \"123123123ASACI9Z999CCAA911S12\";\r\n\r\nexport const signUp = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore();\r\n    const auth = firebase.auth();\r\n    const salt = bcrypt.genSaltSync(10);\r\n    const hash = bcrypt.hashSync(user.password, salt);\r\n    auth\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(),\r\n                uid: data.user.uid,\r\n                isOnline: true,\r\n                email: user.email,\r\n                password: hash,\r\n              })\r\n              .then(() => {\r\n                const token = jwt.sign(\r\n                  {\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    uid: data.user.uid,\r\n                    email: user.email,\r\n                    avatarUrl: user.avatarUrl,\r\n                  },\r\n                  API_KEY,\r\n                  {\r\n                    expiresIn: 3000,\r\n                  }\r\n                );\r\n\r\n                const loggedUser = {\r\n                  auth: true,\r\n                  token: token,\r\n                };\r\n                localStorage.setItem(\"user\", JSON.stringify(loggedUser));\r\n                isLoggedInUser();\r\n              })\r\n              .catch((err) => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: err,\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore();\r\n    const auth = firebase.auth();\r\n    const userRef = db.collection(\"users\");\r\n    userRef\r\n      .where(\"email\", \"==\", user.email)\r\n      .get()\r\n      .then((snap) => {\r\n        snap.forEach((result) => {\r\n          if (result.exists) {\r\n            bcrypt.compare(\r\n              user.password,\r\n              result.data().password,\r\n              (err, res) => {\r\n                if (res) {\r\n                  auth\r\n                    .signInWithEmailAndPassword(user.email, user.password)\r\n                    .then((data) => {\r\n                      db.collection(\"users\")\r\n                        .doc(data.user.uid)\r\n                        .update({\r\n                          isOnline: true,\r\n                        })\r\n                        .then(() => {\r\n                          const name = data.user.displayName.split(\" \");\r\n                          const avatarUrl = data.user.photoURL;\r\n                          const stringArray = [];\r\n                          for (let i = 0; i < name.length; i++) {\r\n                            stringArray.push(name[i]);\r\n                          }\r\n                          const firstName = name[0];\r\n                          const lastName = name[1];\r\n                          const token = jwt.sign(\r\n                            {\r\n                              avatarUrl,\r\n                              firstName: firstName,\r\n                              lastName: lastName,\r\n                              uid: data.user.uid,\r\n                              email: user.email,\r\n                            },\r\n                            API_KEY,\r\n                            {\r\n                              expiresIn: 3000,\r\n                            }\r\n                          );\r\n                          const loggedUser = {\r\n                            auth: true,\r\n                            token: token,\r\n                          };\r\n                          localStorage.setItem(\r\n                            \"user\",\r\n                            JSON.stringify(loggedUser)\r\n                          );\r\n                          dispatch({\r\n                            type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                            payload: {\r\n                              user: {\r\n                                avatarUrl,\r\n                                firstName: firstName,\r\n                                lastName: lastName,\r\n                                uid: data.user.uid,\r\n                                email: user.email,\r\n                              },\r\n                            },\r\n                          });\r\n                        });\r\n                    });\r\n                } else {\r\n                  dispatch({\r\n                    type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                    payload: { error: \"User or password was wrong\" },\r\n                  });\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n              payload: { error: \"User doesn't exists\" },\r\n            });\r\n          }\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    debugger\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      const token = user.token;\r\n      if (!token) {\r\n        localStorage.clear();\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: \"No token\" },\r\n        });\r\n      } else {\r\n        jwt.verify(token, API_KEY, (err, decode) => {\r\n          if (err) {\r\n                localStorage.clear();\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: {\r\n                    error: \"You have no permission. Please log in again\",\r\n                  },\r\n                });\r\n          } else {\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(decode.uid)\r\n              .update({\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: decode },\r\n                });\r\n              });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      localStorage.clear();\r\n\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"Login again\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n","import { userConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const getRealTimeUser = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    if (uid !== undefined) {\r\n      db.collection(\"users\")\r\n        .where(\"uid\", \"!=\", uid)\r\n        .onSnapshot(function (snap) {\r\n          const users = [];\r\n          snap.forEach((doc) => {\r\n            if (doc.data().length !== users.length) {\r\n              users.push({key : doc.id,...doc.data()});\r\n            }\r\n          });\r\n          dispatch({\r\n            type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n            payload: { users },\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\nexport const updateMessage = ({ msgObj, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    if (type !== \"file\") {\r\n      db.collection(\"conversations\")\r\n        .add({\r\n          ...msgObj,\r\n          type: \"text\",\r\n          isView: false,\r\n          createdAt: new Date(),\r\n        })\r\n        .then((data) => {\r\n          dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n            payload: { error: error.message },\r\n          });\r\n        });\r\n    } else {\r\n      const ref = firebase.storage().ref();\r\n      const name = new Date() + \"-\" + msgObj.file.name;\r\n      const metaData = {\r\n        contentType: msgObj.file.type,\r\n      };\r\n      const task = ref.child(name).put(msgObj.file, metaData);\r\n      task.then((snapshot) => {\r\n        snapshot.ref.getDownloadURL().then((url) => {\r\n          db.collection(\"conversations\")\r\n            .add({\r\n              user_uid_1: msgObj.user_uid_1,\r\n              user_uid_2: msgObj.user_uid_2,\r\n              file: url,\r\n              type: \"file\",\r\n              isView: false,\r\n              createdAt: new Date(),\r\n            })\r\n            .then((data) => {\r\n              dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n                payload: { error: error.message },\r\n              });\r\n            });\r\n        });\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const setSeenMessage = ({ uid_1, uid_2 }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.SET_SEEN_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"==\", uid_2)\r\n      .where(\"user_uid_2\", \"==\", uid_1)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          doc.ref.update({\r\n            isView: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getUserById = ({ uid }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_USER_PROFILE_BY_ID}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(\"users\");\r\n    const postRef = db.collection(\"posts\");\r\n    \r\n    postRef.where(\"uid\", \"==\", uid).onSnapshot(async (snapshot) => {\r\n      const posts = [];\r\n      snapshot.forEach((doc) => {\r\n        posts.push({ key: doc.id, ...doc.data() });\r\n      });\r\n      const userByKey = (await userRef.doc(uid).get()).data();\r\n      dispatch({\r\n        type: `${userConstants.GET_USER_PROFILE_BY_ID}_SUCCESS`,\r\n        payload: { userByKey: { ...userByKey, posts: posts } },\r\n      });\r\n    });\r\n  };\r\n};\r\nexport const updateUserAvatar = (uid, file) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_USER_AVATAR}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = firebase.storage().ref();\r\n    const name = new Date() + \"-\" + file.name;\r\n    const metaData = file.type;\r\n    const task = ref.child(name).put(file, metaData);\r\n    var userLocal = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    task.then((snapshot) => {\r\n      snapshot.ref\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          const user = firebase.auth().currentUser;\r\n          user.updateProfile({\r\n            photoURL: url,\r\n          });\r\n          db.collection(\"users\").doc(uid).update({\r\n            avatarUrl: url,\r\n          });\r\n\r\n          userLocal = {\r\n            ...userLocal.user,\r\n            avatarUrl: url,\r\n          };\r\n        })\r\n\r\n        .then(() => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_USER_AVATAR}_SUCCESS`,\r\n            payload: {\r\n              notify: \"Update successfully\",\r\n              avatarUrl: userLocal.avatarUrl,\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_USER_AVATAR}_FALURE`,\r\n            payload: { error: err },\r\n          });\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getLoadMoreConversations = ({ uid_1, uid_2, lastestDoc }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n      .startAfter(lastestDoc || 0)\r\n      .limit(10);\r\n    const data = await ref.get();\r\n    lastestDoc = data.docs[data.docs.length - 1];\r\n    const conversations = [];\r\n    data.docs.forEach((doc) => {\r\n      conversations.push(doc.data());\r\n    });\r\n    if (conversations !== []) {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`,\r\n        payload: { conversations: conversations.reverse(), lastestDoc },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`,\r\n        payload: { error: \"END\" },\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const getRealTimeConversations = ({ uid_1, uid_2, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1]);\r\n    const data = await ref.get();\r\n    const lastestDoc = data.docs[data.docs.length - 1];\r\n    db.collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_1, uid_2])\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 === uid_1 &&\r\n              doc.data().user_uid_2 === uid_2) ||\r\n            (doc.data().user_uid_1 === uid_2 && doc.data().user_uid_2 === uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`,\r\n          payload: { conversations: conversations.reverse(), lastestDoc },\r\n        });\r\n      });\r\n  };\r\n};\r\n","import { postConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const pushPost = (post) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.PUSH_POST}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = firebase.storage().ref();\r\n    const name = new Date() + \"-\" + post.file.name;\r\n    const metaData = {\r\n      contentType: post.file.type,\r\n    };\r\n    const task = ref.child(name).put(post.file, metaData);\r\n    task.then((snapshot) => {\r\n      snapshot.ref.getDownloadURL().then((url) => {\r\n        db.collection(\"posts\")\r\n          .add({\r\n            file: url,\r\n            createdAt: new Date(),\r\n            status: post.status,\r\n            uid: post.uid,\r\n            likeCount: 0,\r\n            commentCount: 0,\r\n          })\r\n          .then(() => {\r\n            dispatch({ type: `${postConstants.PUSH_POST}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${postConstants.PUSH_POST}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getPostByKey = (key, ownerId) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.GET_POST_BY_KEY}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const postRef = db.collection(`posts`);\r\n    const userRef = db.collection(\"users\");\r\n    const commentRef = db.collection(\"comments\");\r\n\r\n    postRef.get().then((snapshot) => {\r\n      let postItem = {};\r\n      commentRef\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .where(\"pid\", \"==\", key)\r\n        .onSnapshot(async (commentSnapShot) => {\r\n          const comments = [];\r\n          commentSnapShot.forEach((commentItem) => {\r\n            userRef\r\n              .where(\"uid\", \"==\", commentItem.data().uid)\r\n              .onSnapshot((snap) => {\r\n                snap.forEach((doc) => {\r\n                  comments.push({ sender: doc.data(), ...commentItem.data() });\r\n                });\r\n              });\r\n          });\r\n          const owner = await userRef.doc(ownerId).get();\r\n\r\n          snapshot.forEach((doc) => {\r\n            if (doc.id === key) {\r\n              postItem = { key: doc.id, ...doc.data(), owner: owner.data() };\r\n            }\r\n          });\r\n\r\n          if (postItem !== {}) {\r\n            dispatch({\r\n              type: `${postConstants.GET_POST_BY_KEY}_SUCCESS`,\r\n              payload: { postItem, comments },\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: `${postConstants.GET_POST_BY_KEY}_FAILURE`,\r\n              payload: { error: `Item with key ${key} does not exist` },\r\n            });\r\n          }\r\n        });\r\n    });\r\n  };\r\n};\r\nexport const getRealTimePosts = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.GET_REALTIME_POSTS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"posts\")\r\n      .where(\"uid\", \"==\", uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const posts = [];\r\n        snapshot.forEach((doc) => {\r\n          db.collection(\"interactions\")\r\n            .where(\"pid\", \"==\", doc.id)\r\n            .onSnapshot((query) => {\r\n              query.forEach((dc) => {\r\n                // interactions.push(dc.data());\r\n              });\r\n              posts.push({\r\n                key: doc.id,\r\n                ...doc.data(),\r\n              });\r\n              dispatch({\r\n                type: `${postConstants.GET_REALTIME_POSTS}_SUCCESS`,\r\n                payload: { posts: posts },\r\n              });\r\n            });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getRealTimePostsNewFeed = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(\"users\");\r\n    const postRef = db.collection(\"posts\");\r\n    const commentRef = db.collection(\"comments\");\r\n    const interactionRef = db.collection(\"interactions\")\r\n    postRef.onSnapshot(async (snapshot) => {\r\n      const posts = [];\r\n      snapshot.forEach((post) => {\r\n        posts.push({ key: post.id, comments : [],interactions:[],...post.data() });\r\n      });\r\n      let count = 0;\r\n      for (let i = 0; i < posts.length; i++) {\r\n        const owner = userRef.doc(posts[i].uid).get();\r\n        \r\n        commentRef.where(\"pid\", \"==\", posts[i].key).onSnapshot((snap) => {\r\n\r\n          snap.forEach((cmt) => {\r\n            userRef.where(\"uid\", \"==\", cmt.data().uid).onSnapshot((uSnap) => {\r\n              uSnap.forEach((sender) => {\r\n                posts[i].comments.push({ ...cmt.data(), sender: sender.data() });\r\n              });\r\n            });\r\n          });\r\n        });\r\n        interactionRef.where(\"pid\",\"==\",posts[i].key).onSnapshot((snap)=>{\r\n          snap.forEach((inter)=>{\r\n            userRef.where(\"uid\", \"==\", inter.data().uid).onSnapshot((uSnap) => {\r\n              uSnap.forEach((sender) => {\r\n                posts[i].interactions.push({ ...inter.data(), sender: sender.data() });\r\n              });\r\n            });\r\n          })\r\n          \r\n        })\r\n        posts[i].owner = (await owner).data();\r\n        if (count === posts.length -1 ) {\r\n            dispatch({\r\n              type: `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_SUCCESS`,\r\n              payload: { posts: [...posts] },\r\n            });\r\n        }\r\n        count += 1;\r\n      }\r\n    });\r\n  };\r\n};\r\nexport const pushPostComment = (comment) => {\r\n  return async (dispatch) => {\r\n    debugger;\r\n    dispatch({ type: `${postConstants.PUSH_COMMENT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const commentRef = db.collection(\"comments\");\r\n    const postRef = db.collection(\"posts\");\r\n    commentRef\r\n      .add({\r\n        ...comment,\r\n        createdAt: new Date(),\r\n        liked: 0,\r\n      })\r\n      .then(() => {\r\n        postRef.doc(comment.pid).update({\r\n          commentCount: firebase.firestore.FieldValue.increment(1),\r\n        });\r\n        dispatch({ type: `${postConstants.PUSH_COMMENT}_SUCCESS` });\r\n      })\r\n      .catch({ type: `${postConstants.PUSH_COMMENT}_FAILURE` });\r\n  };\r\n};\r\n","import firebase from \"../database/firebase\";\r\nimport { interactionConstants } from \"./constants\";\r\nfunction isEmpty(obj) {\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\nexport const updateLike = (interaction) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    const postRef = db.collection('posts')\r\n    db.collection(\"interactions\")\r\n      .where(\"uid\", \"==\", interaction.uid)\r\n      .where(\"pid\", \"==\", interaction.pid)\r\n      .limit(1)\r\n      .get()\r\n      .then((snapshot) => {\r\n        let newObj = {};\r\n        snapshot.forEach((doc) => {\r\n          newObj = {\r\n            key: doc.id,\r\n            ...doc.data(),\r\n          };\r\n        });\r\n\r\n        const empty = isEmpty(newObj);\r\n        if (empty) {\r\n          dispatch({ type: `${interactionConstants.UPDATE_LIKE}_REQUEST` });\r\n          db.collection(\"interactions\")\r\n            .add({\r\n              ...interaction,\r\n              createdAt: new Date(),\r\n            })\r\n            .then(() => {\r\n              postRef.doc(interaction.pid).update({\r\n                likeCount: firebase.firestore.FieldValue.increment(1)\r\n            });\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_SUCCESS`,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_FAILURE`,\r\n                payload: { error },\r\n              });\r\n            });\r\n        } else {\r\n          dispatch({ type: `${interactionConstants.UPDATE_LIKE}_REQUEST` });\r\n          db.collection(\"interactions\")\r\n            .doc(newObj.key)\r\n            .delete()\r\n            .then(() => {\r\n              postRef.doc(interaction.pid).update({\r\n                likeCount: firebase.firestore.FieldValue.increment(-1)\r\n            });\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_SUCCESS`,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_FAILURE`,\r\n                payload: { error },\r\n              });\r\n            });\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const getRealtimeInteractions = (pid) => {\r\n  return async (dispatch) => {\r\n    if (pid != undefined) {\r\n      const db = firebase.firestore();\r\n      dispatch({\r\n        type: `${interactionConstants.GET_REALTIME_INTERACTIONS}_REQUEST`,\r\n      });\r\n      db.collection(\"interactions\")\r\n        .where(\"pid\", \"==\", pid)\r\n        .onSnapshot((snapshot) => {\r\n          const interactionArr = [];\r\n          snapshot.forEach((doc) => {\r\n            interactionArr.push(doc.data());\r\n          });\r\n          dispatch({\r\n            type: `${interactionConstants.GET_REALTIME_INTERACTIONS}_SUCCESS`,\r\n            payload: { interactions: interactionArr },\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Asset 2.5384deb3.png\";","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser, logout } from \"../../actions\";\r\nimport Logo from \"../../images/100ppi/Asset 2.png\";\r\nimport {AiOutlineBars,AiOutlineClose} from 'react-icons/ai'\r\nexport default function Header() {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout(auth.uid));\r\n  };\r\n  const closeMenu = ()=>{\r\n    document.querySelector('.navSide').classList.remove('is-active')\r\n  }\r\n  const openMenu = ()=>{\r\n    document.querySelector('.navSide').classList.add('is-active')\r\n\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navBar\">\r\n        <NavLink to='/realtime-chat-application' className=\"logoArea\">\r\n          <img src={Logo} alt=\"logo\" />\r\n        </NavLink>\r\n        <AiOutlineBars onClick={openMenu} className='hamburger-menu'/>\r\n        <div className=\"navSide\">\r\n          <AiOutlineClose onClick={closeMenu} className='icon close-hamburger-menu'/>\r\n          {!auth.authenticated ? (\r\n            <ul className=\"navWrap\">\r\n              <li className=\"navItem\">\r\n              <NavLink to=\"/realtime-chat-application\" className=\"navLink\">\r\n                Message\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/newfeed\" className=\"navLink\">\r\n                New Feed\r\n              </NavLink>\r\n            </li>\r\n              <li className=\"navItem\">\r\n                <NavLink to=\"/login\" className=\"navLink\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navItem\">\r\n                <NavLink to=\"/signup\" className=\"navLink\">\r\n                  Sign Up\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul className=\"navWrap\">\r\n              <li className=\"navItem\">\r\n              <NavLink to=\"/realtime-chat-application\" className=\"navLink\">\r\n                Message\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/newfeed\" className=\"navLink\">\r\n                New Feed\r\n              </NavLink>\r\n            </li>\r\n              <li className=\"navItem\">\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/profile/${auth.uid}`,\r\n                    state: { uid: auth.uid },\r\n                  }}\r\n                  className=\"navLink\"\r\n                >\r\n                  {auth.firstName} Profile\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navItem\">\r\n                <Link to=\"#\" onClick={handleLogout} className=\"navLink\">\r\n                  Log out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Header from '../../components/Header/index'\r\nexport default function Layout(props) {\r\n    return (\r\n        <div className='layout'>\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './style.scss'\r\nexport default function Input({value,type,label,onChange,placeholder}) {\r\n    const [inputGroup,setInputGroup] = useState('inputGroup')\r\n    const handleChange = (e)=>{\r\n        const {value}=e.target;\r\n        onChange(value);\r\n    }\r\n    const onFocus = (e)=>{\r\n        setInputGroup('inputGroup onFocus')\r\n    }\r\n    return (\r\n        <div className={inputGroup}>\r\n            <label>{label}</label>\r\n            <input type={type} onFocus={onFocus} onChange={handleChange} placeholder={placeholder} value={value} />\r\n            <div className='line'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Button(props) {\r\n    return (\r\n        <button type={props.type} onClick={props.onClick} className='buttonGold'>{props.children}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Title(props) {\r\n    return (\r\n        <div className='title'>\r\n            <p >{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nimport {RiErrorWarningFill} from 'react-icons/ri'\r\nconst Error = (props)=>{\r\n    return(\r\n        <div className='error'>\r\n            <p>{props.children}</p>\r\n            <RiErrorWarningFill className='icon'/>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/Layout/UI/Input/index\";\r\nimport Card from \"../../components/Layout/UI/Card/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Error from '../../components/Layout/UI/Error/index'\r\nimport { signUp } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default function SignUp() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(signUp(form));\r\n  };\r\n  if (auth.authenticated === true) {\r\n    return <Redirect to=\"/realtime-chat-application\" />;\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <form onSubmit={handleSignUp} className=\"authForm\">\r\n            <Title>SIGN UP</Title>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"First name\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, firstName: value })}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Last name\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, lastName: value })}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, email: value })}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, password: value })}\r\n            />\r\n            {\r\n              auth.error ? <Error>{auth.error}</Error>: <></>\r\n            }\r\n            <Button type=\"submit\">SIGN UP</Button>\r\n          </form>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/Layout/UI/Input/index\";\r\nimport Card from \"../../components/Layout/UI/Card/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Error from \"../../components/Layout/UI/Error/index\";\r\nimport \"./style.scss\";\r\nimport { signIn } from \"../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {useFormik} from 'formik'\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signIn(form));\r\n  };\r\n  if (auth.authenticated === true) {\r\n    return <Redirect to=\"/realtime-chat-application\" />;\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <form onSubmit={handleLogin} className=\"authForm\">\r\n            <Title>Login</Title>\r\n            <Input\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, email: value })}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, password: value })}\r\n            />\r\n            {auth.error ? <Error>{auth.error}</Error> : <></>}\r\n            <Button type=\"submit\">LOG IN</Button>\r\n          </form>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/noavtar.a69237c0.png\";","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport \"./style.scss\";\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineFileGif,\r\n  AiOutlinePicture,\r\n  AiOutlineHeart,\r\n  AiOutlinePhone,\r\n  AiOutlineInfoCircle,\r\n  AiOutlineSend,\r\n  AiOutlineCheckCircle,\r\n  AiOutlineArrowLeft,\r\n  AiOutlineUser,\r\n  AiOutlineDelete,\r\n  AiOutlineBell,\r\n  AiOutlineLock,\r\n} from \"react-icons/ai\";\r\nimport { BiLoaderCircle } from \"react-icons/bi\";\r\nimport { RiSendPlaneFill } from \"react-icons/ri\";\r\nimport { BsCameraVideo } from \"react-icons/bs\";\r\nimport { MdTagFaces } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRealTimeConversations,\r\n  getRealTimeUser,\r\n  setSeenMessage,\r\n  updateMessage,\r\n} from \"../../actions\";\r\nimport noavt from \"../../images/noavtar.png\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Home = () => {\r\n  const [isSelected, setIsSelected] = useState(\"\");\r\n  const [userSelected, setUserSelected] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageImg, setMessageImg] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [menuSelected, setMenuSelected] = useState(-1);\r\n  const {\r\n    users,\r\n    conversations,\r\n    loadingUser,\r\n    loadingChat,\r\n    lastestDoc,\r\n  } = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const viewUser = () => {\r\n    dispatch(getRealTimeUser(auth.uid));\r\n  };\r\n  useEffect(() => {\r\n    viewUser();\r\n    const container = document.getElementById(\"homePage\")\r\n    window.addEventListener(\"resize\", () => {\r\n      if(container !==null)\r\n      {\r\n        if (window.innerWidth > 1200) {\r\n          container.style.transform = \"translateX(0%)\";\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n  const selectItem = (index) => {\r\n    if (isSelected !== \"\") {\r\n      const prevItem = document.querySelectorAll(\".friend\")[isSelected];\r\n      prevItem.classList.remove(\"isSelected\");\r\n      const curItem = document.querySelectorAll(\".friend\")[index];\r\n      curItem.classList.add(\"isSelected\");\r\n      setIsSelected(index);\r\n    } else {\r\n      const curItem = document.querySelectorAll(\".friend\")[index];\r\n      curItem.classList.add(\"isSelected\");\r\n      setIsSelected(index);\r\n    }\r\n  };\r\n  const initChat = (user) => {\r\n    const users = { uid_1: auth.uid, uid_2: user.uid };\r\n    setUserSelected(user);\r\n    dispatch(getRealTimeConversations(users));\r\n    if (window.innerWidth <= 1200) {\r\n      document.getElementById(\"homePage\").style.transform = \"translateX(-100%)\";\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (userSelected != \"\") {\r\n      dispatch(\r\n        getRealTimeConversations({\r\n          uid_1: auth.uid,\r\n          uid_2: userSelected.uid,\r\n          type: \"afterSend\",\r\n        })\r\n      );\r\n    }\r\n  }, [userSelected]);\r\n  useEffect(() => {\r\n    if (userSelected !== \"\" && !loadingChat) {\r\n      let chatArea = document.getElementById(\"chatArea\");\r\n      chatArea.scrollTop = chatArea.scrollHeight;\r\n    }\r\n  }, [conversations]);\r\n  useEffect(() => {\r\n    if (messageImg != \"\") {\r\n      img.addEventListener(\"change\", viewFile);\r\n    }\r\n  }, [messageImg]);\r\n\r\n  const img = document.getElementById(\"fileInput\");\r\n  const messImgElement = document.getElementById(\"messageImg\");\r\n  const openFile = (e) => {\r\n    img.click();\r\n    setMessageImg(\"advanced\");\r\n  };\r\n  const viewFile = (e) => {\r\n    const fileSend = document.querySelector(\".fileSend\");\r\n    fileSend.classList.add(\"hasFile\");\r\n    messImgElement.src = URL.createObjectURL(img.files[0]);\r\n  };\r\n\r\n  const submitMessageFile = (e) => {\r\n    e.preventDefault();\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userSelected.uid,\r\n      file: img.files[0],\r\n    };\r\n\r\n    dispatch(updateMessage({ msgObj: msgObj, type: \"file\" }));\r\n    const fileSend = document.querySelector(\".fileSend\");\r\n    fileSend.classList.remove(\"hasFile\");\r\n    messImgElement.src = \"\";\r\n    dispatch(\r\n      getRealTimeConversations({\r\n        uid_1: auth.uid,\r\n        uid_2: userSelected.uid,\r\n        type: \"afterSend\",\r\n      })\r\n    );\r\n  };\r\n  const submitMessage = (e) => {\r\n    e.preventDefault();\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userSelected.uid,\r\n      message,\r\n    };\r\n    if (message !== \"\") {\r\n      dispatch(updateMessage({ msgObj: msgObj }));\r\n      dispatch(\r\n        getRealTimeConversations({\r\n          uid_1: auth.uid,\r\n          uid_2: userSelected.uid,\r\n          type: \"afterSend\",\r\n        })\r\n      );\r\n\r\n      // let chatArea = document.getElementById(\"chatArea\");\r\n      // chatArea.scrollTop = chatArea.scrollHeight;\r\n\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  const handleScroll = () => {\r\n    let body = document.body;\r\n    let chatArea = document.querySelector(\".chatArea\");\r\n    chatArea = chatArea.clientHeight ? chatArea : body;\r\n\r\n    if (chatArea.scrollTop == 0) {\r\n      // const users = { uid_1: auth.uid, uid_2: userSelected.uid,lastestDoc };\r\n      // dispatch(getLoadMoreConversations(users))\r\n      // console.log(users)\r\n    }\r\n  };\r\n  const handleSeen = (e) => {\r\n    dispatch(setSeenMessage({ uid_1: auth.uid, uid_2: userSelected.uid }));\r\n  };\r\n  const handleCloseFriendBox = (e) => {\r\n    e.stopPropagation();\r\n    if (menuSelected >= 0) {\r\n      const myTarget = document.querySelectorAll(\".userMenu\")[menuSelected];\r\n      const clicked = e.target.className;\r\n      if (clicked !== myTarget) {\r\n        myTarget.classList.remove(\"open\");\r\n        setMenuSelected(-1);\r\n      }\r\n    }\r\n  };\r\n  const handleOpenFriendBox = (e, index) => {\r\n    e.stopPropagation();\r\n    document.querySelectorAll(\".userMenu\")[index].classList.add(\"open\");\r\n    setMenuSelected(index);\r\n    if (menuSelected >= 0) {\r\n      document\r\n        .querySelectorAll(\".userMenu\")\r\n        [menuSelected].classList.remove(\"open\");\r\n    }\r\n  };\r\n  const toggleListFriend = () => {\r\n    document.getElementById(\"homePage\").style.transform = \"translateX(0)\";\r\n  };\r\n  return (\r\n    <Layout>\r\n     <div className=\"homepage-wrap\">\r\n     <div id=\"homePage\" className=\"homePage\">\r\n        <div className=\"friendListWrap is-active\">\r\n          {!loadingUser ? (\r\n            <div className=\"friendList\">\r\n              {users.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => {\r\n                    initChat(item);\r\n                    selectItem(index);\r\n                  }}\r\n                  className=\"friend\"\r\n                >\r\n                  <div className=\"avatar\">\r\n                    <img\r\n                      src={item.avatarUrl != null ? item.avatarUrl : noavt}\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <span\r\n                      className={item.isOnline ? \"isOnline\" : \"isOffline\"}\r\n                    ></span>\r\n                  </div>\r\n                  <div className=\"friendState\">\r\n                    <p className=\"friendName\">\r\n                      {item.firstName + \" \" + item.lastName}\r\n                    </p>\r\n                    <div className=\"friendLastText\">\r\n                      <p className=\"lastText\">See you again </p>\r\n                      <span></span>\r\n                      <p>4 hours ago</p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"friendButton\"\r\n                    onClick={(e) => {\r\n                      index !== menuSelected\r\n                        ? handleOpenFriendBox(e, index)\r\n                        : handleCloseFriendBox(e, index);\r\n                    }}\r\n                  >\r\n                    <button>\r\n                      <div className=\"circle\"></div>\r\n                      <div className=\"circle\"></div>\r\n                      <div className=\"circle\"></div>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"userMenu\">\r\n                    <div className=\"menuGroup\">\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineUser className=\"icon\" />\r\n                        <NavLink to={`/profile/${item.key}`}>\r\n                          Go to profile page\r\n                        </NavLink>\r\n                      </div>\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineBell className=\"icon\" />\r\n                        <span>Turn off notification</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"menuGroup\">\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineDelete className=\"icon\" />\r\n                        <span>Delete conversation</span>\r\n                      </div>\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineLock className=\"icon\" />\r\n                        <span>Block</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\" loading\">\r\n              <BiLoaderCircle className=\"icon\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {userSelected !== \"\" ? (\r\n          <div className=\"chatBox\">\r\n            <div className=\"headBox\">\r\n              <AiOutlineArrowLeft\r\n                onClick={toggleListFriend}\r\n                className=\"icon closeChatbox\"\r\n              />\r\n              <div className=\"headUser\">\r\n                <img\r\n                  alt=\"avatar\"\r\n                  src={\r\n                    userSelected.avatarUrl != null\r\n                      ? userSelected.avatarUrl\r\n                      : noavt\r\n                  }\r\n                />\r\n                <NavLink to={`/profile/${userSelected.key}`}>\r\n                  <p>{userSelected.firstName}</p>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"headCall\">\r\n                <AiOutlinePhone className=\"icon\" />\r\n                <BsCameraVideo className=\"icon\" />\r\n\r\n                <AiOutlineInfoCircle className=\"icon\" />\r\n              </div>\r\n            </div>\r\n            {!loadingChat ? (\r\n              <div onScroll={handleScroll} id=\"chatArea\" className=\"chatArea\">\r\n                <div className=\"chatAreaWrap\">\r\n                  {conversations.map((item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={\r\n                        auth.uid === item.user_uid_1\r\n                          ? \"chatWrapper right\"\r\n                          : \"chatWrapper left\"\r\n                      }\r\n                    >\r\n                      {auth.uid !== item.user_uid_1 ? (\r\n                        <img\r\n                          alt={userSelected.avatarUrl}\r\n                          className=\"avatar\"\r\n                          src={\r\n                            userSelected.avatarUrl != null\r\n                              ? userSelected.avatarUrl\r\n                              : noavt\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {item.type !== \"file\" ? (\r\n                        <div className=\"messageWrap\">\r\n                          <p key={index}>{item.message}</p>\r\n                        </div>\r\n                      ) : (\r\n                        <img\r\n                          className=\"messageFile\"\r\n                          alt={index}\r\n                          src={item.file}\r\n                          key={index}\r\n                        />\r\n                      )}\r\n                      <AiOutlineCheckCircle\r\n                        className={\r\n                          auth.uid === item.user_uid_1 && !item.isView\r\n                            ? \"icon\"\r\n                            : \"icon gone\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"chatArea loading\">\r\n                <BiLoaderCircle className=\"icon\" />\r\n              </div>\r\n            )}\r\n            <div className=\"typeArea\">\r\n              <div className=\"action\">\r\n                <div className=\"fileSend\">\r\n                  <img alt=\"messageImg\" id=\"messageImg\" />\r\n\r\n                  <div className=\"before\"></div>\r\n                  <AiOutlineSend onClick={submitMessageFile} className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" className=\"fileInput\" />\r\n                  <AiOutlinePlusCircle className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" id=\"fileInput\" className=\"fileInput\" />\r\n                  <AiOutlinePicture onClick={openFile} className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" className=\"fileInput\" />\r\n                  <MdTagFaces className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" className=\"fileInput\" />\r\n                  <AiOutlineFileGif className=\"icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"input\">\r\n                <form onSubmit={submitMessage}>\r\n                  <input\r\n                    value={message}\r\n                    onClick={() => handleSeen()}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Aa\"\r\n                  />\r\n                </form>\r\n                <MdTagFaces className=\"icon\" />\r\n              </div>\r\n              <div className=\"likeButton\">\r\n                {message === \"\" ? (\r\n                  <AiOutlineHeart className=\"icon\" />\r\n                ) : (\r\n                  <AiOutlineSend onClick={submitMessage} className=\"icon\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"chatBox unSelected\">\r\n            <RiSendPlaneFill className=\"bigIcon\" />\r\n            <Title>Your Message</Title>\r\n            <p>Send private photos and messages to a friend or group.</p>\r\n            <Button>Send a message</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n     </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/mint.98ef681e.jpg\";","import React from 'react'\r\nimport { BiLoaderCircle } from \"react-icons/bi\";\r\nimport './styles.scss'\r\nexport default function Loading() {\r\n    return (\r\n        <BiLoaderCircle className='loadingIcon'/>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport {\r\n  AiOutlineSend,\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n  AiOutlineClose,\r\n} from \"react-icons/ai\";\r\nimport { VscBookmark } from \"react-icons/vsc\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport Button from \"../Layout/UI/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport noavt from '../../images/noavtar.png'\r\nimport Loading from \"../Layout/UI/Loading\";\r\nimport { pushPostComment } from \"../../actions/post\";\r\nimport { getRealtimeInteractions, updateLike } from \"../../actions\";\r\nconst PostDetail = ({auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [replySelected, setReplySelected] = React.useState([]);\r\n  const [commentValue, setCommentValue] = React.useState(\"\");\r\n  const { post, interaction } = useSelector((state) => state);\r\n  const auth_uid = React.useMemo(()=>{\r\n    return auth\r\n  },[auth])\r\n  const interactionArr = React.useMemo(() => {\r\n    return interaction.interactions;\r\n  }, [interaction.interactions]);\r\n  const { item, loading, comments } = React.useMemo(() => {\r\n    return {\r\n      item: post.postByKey.item,\r\n      loading: post.postByKey.loading,\r\n      comments: post.postByKey.comments,\r\n    };\r\n  }, [post.postByKey.item, post.postByKey.comments]);\r\n  React.useEffect(() => {\r\n    dispatch(getRealtimeInteractions(item.key));\r\n  }, [item.key,dispatch]);\r\n  const closePostDetail = () => {\r\n    const postDetail = document.querySelector(\".postDetail\");\r\n    postDetail.classList.remove(\"open\");\r\n    const replies = document.querySelector(\".replies\");\r\n    if (replies != null) {\r\n      replies.classList.remove(\"view\");\r\n      const newArr = [];\r\n      setReplySelected(newArr);\r\n    }\r\n  };\r\n  const hanldePostComment = (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      content: commentValue,\r\n      pid: item.key,\r\n      uid: auth_uid,\r\n    };\r\n    dispatch(pushPostComment(comment));\r\n    setCommentValue(\"\");\r\n  };\r\n  const openReplyComment = (index) => {\r\n    const newArr = [...replySelected];\r\n\r\n    document.querySelectorAll(\".replies\")[index].classList.add(\"view\");\r\n    newArr[index] = true;\r\n    setReplySelected(newArr);\r\n  };\r\n\r\n  const closeReplyComment = (index) => {\r\n    const newArr = [...replySelected];\r\n    document.querySelectorAll(\".replies\")[index].classList.remove(\"view\");\r\n    newArr[index] = false;\r\n    setReplySelected(newArr);\r\n  };\r\n  const handleLikePost = () => {\r\n    const obj = {\r\n      pid: item.key,\r\n      uid: auth_uid,\r\n    };\r\n    dispatch(updateLike(obj));\r\n  };\r\n  const isInArray = (arr)=> {\r\n    console.log(interactionArr)\r\n      if(arr.length>0)\r\n      {\r\n        for (let i =0;i<arr.length;i++) {\r\n          console.log(arr[i].uid)\r\n          if(arr[i].uid===auth_uid)\r\n          {\r\n            return true;\r\n          }\r\n        }\r\n        return false\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    \r\n  }\r\n  return (\r\n    <div className=\"postDetail\">\r\n      <AiOutlineClose className=\"exit\" onClick={closePostDetail} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"postWrapper\">\r\n          <div className=\"postImage\">\r\n            <img src={item.file} alt={item.key} />\r\n          </div>\r\n          <div className=\"postStatus\">\r\n            <div className=\"postOwner\">\r\n              <div className=\"ownerAvatar\">\r\n                <div>\r\n                  <img src={item.owner.avatarUrl != null ? item.owner.avatarUrl : noavt} alt={item.key} />\r\n                </div>\r\n                <p>{item.owner.firstName + \" \" + item.owner.lastName}</p>\r\n              </div>\r\n              <div className=\"more\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"postDescription\">\r\n              <div className=\"ownerAvatar\">\r\n                <div>\r\n                  <img src={item.owner.avatarUrl != null ? item.owner.avatarUrl : noavt} alt={item.key} />\r\n                </div>\r\n                <p className=\"name\">\r\n                  {item.owner.firstName + \" \" + item.owner.lastName}\r\n                </p>\r\n                <p className=\"status\">{item.status}</p>\r\n              </div>\r\n              <div className=\"postedDate\">\r\n                <p>6d</p>\r\n              </div>\r\n              <div className=\"commentBox\">\r\n                {comments.map((item, index) => (\r\n                  <div key={index} className=\"comment\">\r\n                    <div className=\"ownerImage\">\r\n                      <div className='wrap'>\r\n                      <img\r\n                        src={item.sender.avatarUrl != null ? item.sender.avatarUrl : noavt}\r\n                        alt={item.sender.firstName}\r\n                      />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ownerDetail\">\r\n                      <div className=\"ownerName\">\r\n                        <div className=\"content\">\r\n                          {\" \"}\r\n                          <p>{item.sender.firstName}</p>\r\n                          <p>{item.content}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"reply\">\r\n                        <span>4d</span>\r\n                        <p>Reply</p>\r\n                        <div className=\"heartIcon\">\r\n                          <AiOutlineHeart className=\"icon\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"viewReplies\">\r\n                        <div className=\"line\"></div>\r\n                        {replySelected[index] ? (\r\n                          <p onClick={() => closeReplyComment(index)}>\r\n                            Hide replies(2)\r\n                          </p>\r\n                        ) : (\r\n                          <p onClick={() => openReplyComment(index)}>\r\n                            View replies(2)\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"replies\">\r\n                        <div className=\"replyItem\">\r\n                          <div className=\"ownerImage\">\r\n                            <img src={Mint} alt={Mint} />\r\n                          </div>\r\n                          <div className=\"ownerDetail\">\r\n                            <div className=\"ownerName\">\r\n                              <div className=\"content\">\r\n                                {\" \"}\r\n                                <p>mint_stillwalks</p>\r\n                                <p>{item.content}</p>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"reply\">\r\n                              <span>4d</span>\r\n                              <p>Reply</p>\r\n                              <div className=\"heartIcon\">\r\n                                <AiOutlineHeart className=\"icon\" />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"postLiked\">\r\n                <div className=\"iconBox\">\r\n                  <div className=\"likeIcon\">\r\n                    {isInArray(interactionArr) ? (\r\n                      <AiFillHeart onClick={handleLikePost} className=\"icon\" />\r\n                    ) : (\r\n                      <AiOutlineHeart\r\n                        onClick={handleLikePost}\r\n                        className=\"icon\"\r\n                      />\r\n                    )}\r\n\r\n                    <BsChat className=\"icon\" />\r\n                    <AiOutlineSend className=\"icon\" />\r\n                  </div>\r\n                  <div className=\"saveIcon\">\r\n                    <VscBookmark className=\"icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"likedBy\">\r\n                  <p>Liked by {interactionArr.length} peoples</p>\r\n                  <p>{item.createdAt.toDate().toDateString()}</p>\r\n                </div>\r\n              </div>\r\n              <form className=\"commentInput\">\r\n                <div className=\"input\">\r\n                  <input\r\n                    onChange={(e) => setCommentValue(e.target.value)}\r\n                    value={commentValue}\r\n                    id=\"postComment\"\r\n                    placeholder=\"Add comment here\"\r\n                  />\r\n                </div>\r\n                <div className=\"button\">\r\n                  <Button type=\"submit\" onClick={hanldePostComment}>\r\n                    Post\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PostDetail;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { AiOutlineClose, AiOutlinePicture } from \"react-icons/ai\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport { BiLock, BiMap } from \"react-icons/bi\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Button from \"../Layout/UI/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { pushPost } from \"../../actions/post\";\r\nconst ModalPost = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const [postImage, setPostImage] = React.useState(\"\");\r\n\r\n  const closeModalPost = () => {\r\n    document.querySelector(\".modalPost\").classList.remove(\"open\");\r\n  };\r\n  const filePost = document.getElementById(\"filePost\");\r\n  const postImageElement = document.getElementById(\"postImageElement\");\r\n  const openFileInput = () => {\r\n    filePost.click();\r\n    setPostImage(\"advanced\");\r\n  };\r\n  const imageBox = document.querySelector(\".imageBox\");\r\n  const viewFile = (e) => {\r\n \r\n    imageBox.classList.add(\"hasFile\");\r\n\r\n    // console.log(filePost.files.length);\r\n    if (filePost.files.length > 0) {\r\n      postImageElement.src = URL.createObjectURL(filePost.files[0]);\r\n    }\r\n    setPostImage(\"\");\r\n  };\r\n  React.useEffect(() => {\r\n    if (postImage != \"\") {\r\n      filePost.addEventListener(\"change\", viewFile);\r\n    }\r\n  }, [postImage]);\r\n  const handlePost = () => {\r\n    var postText = document.getElementById(\"postText\").value;\r\n    if (filePost.files.length > 0) {\r\n      const post = {\r\n        file: filePost.files[0],\r\n        status: postText,\r\n        uid:auth.uid\r\n      };\r\n      dispatch(pushPost(post));\r\n      imageBox.classList.remove(\"hasFile\");\r\n      postImageElement.src = \"\";\r\n      postText = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"modalPost\">\r\n      <div className=\"modalWrapper\">\r\n        <div className=\"head\">\r\n          <div className=\"title\">\r\n            <Title>Make a post</Title>\r\n          </div>\r\n          <AiOutlineClose onClick={closeModalPost} className=\"icon\" />\r\n        </div>\r\n        <div className=\"poster\">\r\n          <div className=\"posterImage\">\r\n            <img src={Mint} />\r\n          </div>\r\n          <div className=\"posterName\">\r\n            <p>Mint</p>\r\n            <div className=\"securityMode\">\r\n              <BiLock className=\"icon\" />\r\n              <span>Private</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"statusBox\">\r\n          <textarea\r\n            id=\"postText\"\r\n            placeholder=\"What are you thinking ?\"\r\n          ></textarea>\r\n          <div className=\"imageBox\">\r\n            <img id=\"postImageElement\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"postButton\">\r\n          <Button onClick={handlePost}>Post</Button>\r\n          <div className=\"postIcon\">\r\n            <input type=\"file\" id=\"filePost\" />\r\n            <AiOutlinePicture onClick={openFileInput} className=\"icon\" />\r\n            <BiMap className=\"icon\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ModalPost;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport Button from \"../Layout/UI/Button\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserAvatar } from \"../../actions/user\";\r\nconst ModalUpdateAvatar = () => {\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n  const [temp, setTemp] = useState(\"\");\r\n\r\n  const closeModalPost = () => {\r\n    modal.classList.remove('open')\r\n  };\r\n  let fileInput = useRef(null);\r\n  let imgSrc = useRef(null);\r\n  let modal = useRef(null)\r\n  const openFileInput = () => {\r\n    fileInput.click();\r\n    setTemp(\"advanced\");\r\n  };\r\n  const viewPhoto = () => {\r\n    if (fileInput.files.length > 0) {\r\n      imgSrc.src = URL.createObjectURL(fileInput.files[0]);\r\n    }\r\n  };\r\n  const handleUpdateAvatar = ()=>{\r\n      dispatch(updateUserAvatar(auth.uid,fileInput.files[0]))\r\n  }\r\n  useEffect(() => {\r\n    if (temp == \"advanced\") {\r\n      fileInput.addEventListener(\"change\", viewPhoto);\r\n    }\r\n  }, [temp]);\r\n  return (\r\n    <div ref={el=>modal=el} className=\"modalUpdateAvatar\">\r\n      <div className=\"modalWrapper\">\r\n        <AiOutlineClose onClick={closeModalPost} className=\"icon\" />\r\n        <div className=\"modalTitle\">\r\n          <p>Update Avatar</p>\r\n        </div>\r\n        <div className=\"openFile\">\r\n          <button onClick={openFileInput}>Choose a file</button>\r\n          <input\r\n            type=\"file\"\r\n            className=\"input\"\r\n            ref={(el) => {\r\n              fileInput = el;\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"avatarBox\">\r\n          <div className=\"avatarWrap\">\r\n            <img\r\n              id=\"image\"\r\n              ref={(el) => {\r\n                imgSrc = el;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"updateBtn\">\r\n          <Button onClick={handleUpdateAvatar}>Save</Button>\r\n          <Button onClick={closeModalPost}>Cancel</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ModalUpdateAvatar;\r\n","import React from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport {\r\n  AiOutlineSetting,\r\n  AiOutlinePlusCircle,\r\n  AiOutlineHeart,\r\n  AiOutlineArrowLeft,\r\n  AiOutlineArrowRight\r\n\r\n} from \"react-icons/ai\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport \"./style.scss\";\r\nimport PostDetail from \"../../components/PostDetail/index\";\r\nimport ModalPost from \"../../components/ModalPost/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPostByKey, getUserById } from \"../../actions\";\r\nimport Loading from \"../../components/Layout/UI/Loading/index\";\r\nimport noavt from \"../../images/noavtar.png\";\r\n\r\nimport ModalUpdateAvatar from \"../../components/ModalUpdateAvatar\";\r\n\r\nconst ProfilePage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { user, auth } = useSelector((state) => state);\r\n\r\n  //use Memo\r\n\r\n  const userByKey = React.useMemo(() => {\r\n    return user.userByKey;\r\n  }, [user.userByKey]);\r\n  const auth_uid = React.useMemo(() => {\r\n    return auth.uid;\r\n  }, [auth.uid]);\r\n  const uidParam = React.useMemo(() => {\r\n    return props.match.params;\r\n  }, [props.match.params]);\r\n\r\n  //end use Memo\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getUserById(uidParam));\r\n  }, [uidParam]);\r\n\r\n  const openPostDetail = (key) => {\r\n    const postDetail = document.querySelector(\".postDetail\");\r\n    postDetail.classList.add(\"open\");\r\n    dispatch(getPostByKey(key, userByKey.uid));\r\n  };\r\n\r\n  const openModalPost = () => {\r\n    document.querySelector(\".modalPost\").classList.add(\"open\");\r\n  };\r\n\r\n  const openModalUpdateAvatar = () => {\r\n    document.querySelector(\".modalUpdateAvatar\").classList.add(\"open\");\r\n  };\r\nconst openSeePost = ()=>{\r\n  document.querySelector('.profile').classList.add('is-active')\r\n}\r\nconst closeSeePost = ()=>{\r\n  document.querySelector('.profile').classList.remove('is-active')\r\n}\r\n  return (\r\n    <Layout>\r\n      <ModalPost />\r\n      <ModalUpdateAvatar />\r\n      <PostDetail auth={auth_uid} />\r\n      {!user.loadingUserByKey ? (\r\n        <div className=\"profile-wrap\">\r\n          <div className=\"profile\">\r\n          <div className=\"profileHead\">\r\n            <div className=\"avatar\">\r\n              <div className=\"avatarWrap\">\r\n                {\r\n                  <img\r\n                    src={\r\n                      userByKey.avatarUrl != null ? userByKey.avatarUrl : noavt\r\n                    }\r\n                    alt=\"avatar\"\r\n                  />\r\n                }\r\n              </div>\r\n              <AiOutlinePlusCircle\r\n                onClick={openModalUpdateAvatar}\r\n                className=\"icon\"\r\n              />\r\n            </div>\r\n            <div className=\"details\">\r\n              <div className=\"userName\">\r\n                <p>{userByKey.firstName + \" \" + userByKey.lastName}</p>\r\n                <Button>\r\n                  {auth_uid === userByKey.uid ? \"Edit Profile\" : \"Follow\"}\r\n                </Button>\r\n                <AiOutlineSetting className=\"icon\" />\r\n              </div>\r\n              <div className=\"userFollow\">\r\n                <p>\r\n                  282 <span>followers</span>\r\n                </p>\r\n                <p>\r\n                  1003 <span>following</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"madeUpName\">\r\n                <p>小さなホタル</p>\r\n              </div>\r\n              <div onClick={openSeePost}  className=\"see-post\">\r\n                <Button>See post\r\n                  <AiOutlineArrowRight className='icon'/>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-container-wrap\">\r\n            <div className=\"post-container\">\r\n              {auth_uid === userByKey.uid ? (\r\n                <div className=\"postButton\">\r\n                  <AiOutlineArrowLeft\r\n                  onClick={closeSeePost}\r\n                className=\"icon closePostList\"\r\n              />\r\n                  <Button onClick={openModalPost}>Post something</Button>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div className=\"allPosts\">\r\n                {userByKey.posts.length > 0 ? (\r\n                  userByKey.posts.map((item) => (\r\n                    <div\r\n                      key={item.key}\r\n                      onClick={() => openPostDetail(item.key)}\r\n                      className=\"post\"\r\n                    >\r\n                      <div className=\"postImage\">\r\n                        <img alt={item.createdAt} src={item.file} />\r\n                      </div>\r\n                      <div className=\"postHover\">\r\n                        <p>\r\n                          <AiOutlineHeart className=\"icon\" /> {item.likeCount}\r\n                        </p>\r\n                        <p>\r\n                          <BsChat className=\"icon\" /> {item.commentCount}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"post\">\r\n                    <p>Havent posted anything</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loadingWrap\">\r\n          <Loading />\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\nexport default ProfilePage;\r\n","import * as React from \"react\";\r\nimport Button from \"../Button\";\r\nimport \"./style.scss\";\r\nexport default function FormChat(props) {\r\n  const onChangeValue = (e)=>{\r\n    props.onChange(e.target.value)\r\n  }\r\n  return (\r\n    <form onSubmit={(e)=>props.handleFunction(e)} style={props.style} className=\"commentInput\">\r\n      <div className=\"input\">\r\n        <input onChange={(e)=>onChangeValue(e)} value={props.value} id=\"postComment\" placeholder=\"Add comment here\" />\r\n      </div>\r\n      <div className=\"button\">\r\n        <Button onClick={(e)=>props.handleFunction(e)} type={props.type}>Post</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport \"./style.scss\";\r\nimport testImg from \"../../images/mint.jpg\";\r\nimport { AiOutlineSend, AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\r\nimport noavt from '../../images/noavtar.png';\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport { VscBookmark } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRealTimePostsNewFeed,\r\n  pushPostComment,\r\n  setOffLine,\r\n  updateLike,\r\n} from \"../../actions\";\r\nimport moment from \"moment\";\r\nimport Button from \"../../components/Layout/UI/Button\";\r\nimport FormChat from \"../../components/Layout/UI/FormChat\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst NewFeedPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n  const { post, auth } = useSelector((state) => state);\r\n  const posts = React.useMemo(() => {\r\n    return post.posts;\r\n  }, [post.posts]);\r\n  React.useEffect(() => {\r\n    dispatch(getRealTimePostsNewFeed());\r\n  }, []);\r\n  const handleUpdateLike = (pid) => {\r\n    const interaction = {\r\n      pid,\r\n      uid: auth.uid,\r\n    };\r\n    dispatch(updateLike(interaction));\r\n  };\r\n  const isInArray = (arr) => {\r\n    if (arr.length > 0) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].uid === auth.uid) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n \r\n  const handlePushComment = (e,pid) => {\r\n    e.preventDefault();\r\n  \r\n     if(comment!=='')\r\n     {\r\n      dispatch(pushPostComment({ pid, uid: auth.uid, content: comment }))\r\n      setComment('')\r\n     }\r\n    \r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"newFeed\">\r\n        <div className=\"newFeedWrap\">\r\n          <div className=\"swipeSide\">\r\n            <div className=\"storyLine\">\r\n              <div className=\"storyBox\">\r\n                <div className=\"avatarWrap\">\r\n                  <img src={testImg} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"nameWrap\">\r\n                  <p>minttran</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"storyBox\">\r\n                <div className=\"avatarWrap\">\r\n                  <img src={testImg} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"nameWrap\">\r\n                  <p>miran</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"storyBox\">\r\n                <div className=\"avatarWrap\">\r\n                  <img src={testImg} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"nameWrap\">\r\n                  <p>minttran</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"postWrapper\">\r\n              {posts.map((item, index) => (\r\n                <div key={index} className=\"post\">\r\n                  <NavLink to={`profile/${item.uid}`} className=\"postOwner\">\r\n                    <div className=\"ownerImage\">\r\n                      <img\r\n                        src={\r\n                          item.owner.avatarUrl != null ? item.owner.avatarUrl : noavt\r\n                        }\r\n                        alt=\"avatar owner\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"ownerName\">\r\n                      <p>{item.owner.firstName + \" \" + item.owner.lastName}</p>\r\n                    </div>\r\n                  </NavLink>\r\n                  <div className=\"postImage\">\r\n                    <img src={item.file} alt={item.status} />\r\n                  </div>\r\n                  <div className=\"interactionBox\">\r\n                    <div className=\"button\">\r\n                      {!isInArray(item.interactions) ? (\r\n                        <AiOutlineHeart\r\n                          onClick={() => handleUpdateLike(item.key)}\r\n                          className=\"icon\"\r\n                        />\r\n                      ) : (\r\n                        <AiFillHeart\r\n                          onClick={() => handleUpdateLike(item.key)}\r\n                          className=\"icon\"\r\n                        />\r\n                      )}\r\n                      <BsChat className=\"icon\" />\r\n                      <AiOutlineSend className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"save\">\r\n                      <VscBookmark className=\"icon\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"likedBy\">\r\n                    <p>Liked by {item.interactions.length} peoples</p>\r\n                  </div>\r\n                  <div className=\"postContent\">\r\n                    <div className=\"ownerName\">\r\n                      <span className=\"name\">\r\n                        {item.owner.firstName + \" \" + item.owner.lastName}\r\n                      </span>\r\n                      <span className=\"content\">{item.status}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"viewAllComment\">\r\n                    {item.comments.length > 2 ? (\r\n                      <p>View All {item.comments.length} Comments</p>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"commentBox\">\r\n                    {item.comments.slice(0,2).map((comment, commentIndex) => (\r\n                      <div key={commentIndex} className=\"comment\">\r\n                        <span className=\"name\">\r\n                          {comment.sender.firstName +\r\n                            \" \" +\r\n                            comment.sender.lastName}\r\n                        </span>\r\n                        <span className=\"conent\">{comment.content}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"createdAt\">\r\n                    <p>{moment(item.createdAt.toDate()).fromNow(true)} ago</p>\r\n                  </div>\r\n                  <FormChat\r\n                    onChange={(value) => setComment(value)}\r\n                    style={{ paddingLeft:10,paddingRight:10}}\r\n                    type=\"submit\"\r\n                    value={comment}\r\n                    handleFunction={(e) => handlePushComment(e,item.key)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default NewFeedPage;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        const user = localStorage.getItem(\"user\")\r\n          ? JSON.parse(localStorage.getItem(\"user\"))\r\n          : null;\r\n        if (user) {\r\n          if (user.auth) {\r\n            return <Component {...props} />;\r\n          } else {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport SignUp from \"./containers/SignUpPage/index\";\nimport Login from \"./containers/LoginPage/index\";\nimport Home from \"./containers/HomePage/index\";\nimport Profile from \"./containers/ProfilePage/index\";\nimport NewFeed from \"./containers/NewFeedPage/index\";\nimport PrivateRoute from \"./components/Private/index.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLoggedInUser, setOffLine } from \"./actions\";\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  React.useEffect(() => {\n    if (!auth.authenticated) {\n      dispatch(isLoggedInUser());\n    }\n  }, []);\n\n  const routes = [\n    { path: \"/realtime-chat-application\", name: \"Home\", component: Home },\n    { path: \"/login\", name: \"Login\", component: Login },\n    { path: \"/signup\", name: \"Sign Up\", component: SignUp },\n    { path: \"/newfeed\", name: \"New Feed\", component: NewFeed },\n    { path: \"/profile/:uid\", name: \"Profile\", component: Profile },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {routes.map((route) => {\n          return (\n            <div key={route.name}>\n              {route.name === \"Login\" || route.name === \"Sign Up\" ? (\n                <Route path={route.path} component={route.component} exact />\n              ) : (\n                <PrivateRoute path={route.path} component={route.component} />\n              )}\n            </div>\n          );\n        })}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  uid: \"\",\r\n  email: \"\",\r\n  avatarUrl: \"\",\r\n  authenticating: false,\r\n  authenticated: false,\r\n  error: null,\r\n  notify: \"\",\r\n  updating : false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${authConstants.USER_LOGIN}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      return state;\r\n    case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        firstName: action.payload.user.firstName,\r\n        lastName: action.payload.user.lastName,\r\n        uid: action.payload.user.uid,\r\n        email: action.payload.user.email,\r\n        avatarUrl: action.payload.user.avatarUrl,\r\n        authenticated: true,\r\n        authenticating: false,\r\n        error: null,\r\n      };\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGIN}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        authenticated: false,\r\n        authenticating: false,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { userConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  conversations: [],\r\n  loadingUser: true,\r\n  loadingChat: true,\r\n  lastestDoc: {},\r\n  loadingUserByKey: false,\r\n  userByKey: {\r\n    posts : []\r\n  },\r\n  error: \"\",\r\n  notify : \"\",\r\n  updating :false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: false,\r\n        users: action.payload.users,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: action.payload.conversations,\r\n        lastestDoc: action.payload.lastDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: [\r\n          ...action.payload.conversations,\r\n          ...state.conversations,\r\n        ],\r\n        lastestDoc: action.payload.lastestDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_USER_PROFILE_BY_ID}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUserByKey: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_USER_PROFILE_BY_ID}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUserByKey: false,\r\n        userByKey: action.payload.userByKey,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_USER_PROFILE_BY_ID}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n      case `${userConstants.UPDATE_USER_AVATAR}_REQUEST`:\r\n        state={\r\n          ...state,\r\n          updating:true\r\n        }\r\n        return state;\r\n      case `${userConstants.UPDATE_USER_AVATAR}_SUCCESS`:\r\n        state = {\r\n          ...state,\r\n          updating : false,\r\n          notify: action.payload.notify,\r\n          userByKey : {\r\n            ...state.userByKey,\r\n            avatarUrl: action.payload.avatarUrl,\r\n          }\r\n        };\r\n        return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { postConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  posting: true,\r\n  loadingPosts: true,\r\n  error: null,\r\n  posted: false,\r\n  postByKey: {\r\n    item: {},\r\n    comments: [],\r\n    loading: true,\r\n    error: null,\r\n  },\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${postConstants.PUSH_POST}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${postConstants.PUSH_POST}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        posting: false,\r\n        posted: true,\r\n      };\r\n      return state;\r\n    case `${postConstants.PUSH_POST}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        posted: false,\r\n        posting: false,\r\n        error: action.payload.error,\r\n      };\r\n    case `${postConstants.GET_REALTIME_POSTS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts: false,\r\n        posts: action.payload.posts,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts: false,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_POST_BY_KEY}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_POST_BY_KEY}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        postByKey: {\r\n          ...state.postByKey,\r\n          item: action.payload.postItem,\r\n          comments: action.payload.comments,\r\n          loading: false,\r\n          error: null,\r\n        },\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_POST_BY_KEY}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        postByKey: {\r\n          ...state.postByKey,\r\n          loading: true,\r\n          error: action.payload.error,\r\n        },\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts: true,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_SUCCESS`:\r\n      debugger\r\n      state = {\r\n        ...state,\r\n        loadingPosts: false,\r\n        posts:action.payload.posts,\r\n        error:'',\r\n        \r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts : false,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { interactionConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    interactions : [],\r\n    isLoading : false,\r\n    error : null,\r\n    notify : null,\r\n}\r\nexport default (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case `${interactionConstants.UPDATE_LIKE}_REQUEST`:\r\n            // state = {\r\n            //     ...state,\r\n            //     interactions : action.payload.interactions,\r\n            //     isLoading:true,\r\n            // }\r\n            return state;\r\n        case `${interactionConstants.GET_REALTIME_INTERACTIONS}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                isLoading:true,\r\n            };\r\n            return state;\r\n        case `${interactionConstants.GET_REALTIME_INTERACTIONS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                isLoading:false,\r\n                interactions : action.payload.interactions\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer'\r\nimport userReducer from './userReducer'\r\nimport postReducer from './postReducer'\r\nimport interactionReducer from './interactionReducer'\r\nconst myReducers = combineReducers({\r\n    auth : authReducer,\r\n    user : userReducer,\r\n    post : postReducer,\r\n    interaction : interactionReducer,\r\n})\r\n\r\nexport default myReducers","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducers from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(\r\n  rootReducers,\r\n  applyMiddleware(thunk),\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}