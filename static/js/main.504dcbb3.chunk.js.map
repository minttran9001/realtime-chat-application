{"version":3,"sources":["database/firebase.js","actions/constants.js","actions/auth.js","actions/user.js","actions/post.js","actions/interaction.js","images/100ppi/Asset 2.png","components/Header/index.js","components/Layout/index.js","components/Layout/UI/Input/index.js","components/Layout/UI/Card/index.js","components/Layout/UI/Button/index.js","components/Layout/UI/Title/index.js","components/Layout/UI/Error/index.js","containers/SignUpPage/index.js","containers/LoginPage/index.js","images/mint.jpg","images/noavtar.png","containers/HomePage/index.js","components/Layout/UI/Loading/index.js","components/PostDetail/index.js","components/ModalPost/index.js","components/ModalUpdateAvatar/index.js","containers/ProfilePage/index.js","components/Layout/UI/FormChat/index.js","containers/NewFeedPage/index.js","components/Private/index.js","App.js","reducers/authReducer.js","reducers/userReducer.js","reducers/postReducer.js","reducers/interactionReducer.js","reducers/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authConstants","userConstants","postConstants","interactionConstants","signUp","user","dispatch","a","db","firestore","type","auth","createUserWithEmailAndPassword","email","password","then","data","currentUser","name","firstName","lastName","updateProfile","displayName","collection","doc","uid","set","createdAt","Date","isOnline","loggedUser","localStorage","setItem","JSON","stringify","payload","catch","err","error","message","updateMessage","msgObj","add","isView","ref","storage","file","metaData","contentType","child","put","snapshot","getDownloadURL","url","user_uid_1","user_uid_2","getRealTimeConversations","uid_1","uid_2","orderBy","where","get","lastestDoc","docs","length","onSnapshot","querySnapshot","conversations","forEach","push","reverse","pushPostComment","comment","commentRef","postRef","liked","pid","update","commentCount","FieldValue","increment","isEmpty","obj","prop","hasOwnProperty","updateLike","interaction","limit","newObj","key","id","likeCount","delete","Header","useSelector","state","useDispatch","className","to","src","Logo","alt","authenticated","pathname","onClick","signOut","clear","Layout","props","children","Input","value","label","onChange","placeholder","useState","inputGroup","setInputGroup","onFocus","e","target","Card","Button","Title","Error","SignUp","form","setForm","handleSignUp","preventDefault","onSubmit","Login","signInWithEmailAndPassword","avatarUrl","photoURL","split","stringArray","Array","i","Home","isSelected","setIsSelected","userSelected","setUserSelected","setMessage","messageImg","setMessageImg","menuSelected","setMenuSelected","users","loadingUser","loadingChat","viewUser","undefined","snap","useEffect","chatArea","document","getElementById","scrollTop","scrollHeight","img","addEventListener","viewFile","messImgElement","querySelector","classList","URL","createObjectURL","files","submitMessage","handleSeen","setSeenMessage","map","item","index","initChat","querySelectorAll","remove","selectItem","noavt","stopPropagation","handleOpenFriendBox","myTarget","handleCloseFriendBox","onScroll","body","clientHeight","click","Loading","PostDetail","React","replySelected","setReplySelected","commentValue","setCommentValue","post","auth_uid","useMemo","interactionArr","interactions","postByKey","loading","comments","handleLikePost","replies","owner","status","sender","content","newArr","closeReplyComment","openReplyComment","Mint","arr","console","log","isInArray","toDate","toDateString","ModalPost","postImage","setPostImage","filePost","postImageElement","imageBox","postText","pushPost","ModalUpdateAvatar","temp","setTemp","closeModalPost","modal","fileInput","useRef","imgSrc","viewPhoto","el","task","userLocal","getItem","parse","notify","ProfilePage","userByKey","uidParam","match","params","userRef","posts","getUserById","openPostDetail","ownerId","postItem","commentSnapShot","commentItem","getPostByKey","loadingUserByKey","FormChat","handleFunction","style","onChangeValue","NewFeedPage","setComment","interactionRef","count","cmt","uSnap","inter","handleUpdateLike","testImg","slice","commentIndex","moment","fromNow","paddingLeft","paddingRight","handlePushComment","PrivateRoute","Component","component","rest","App","routes","path","NewFeed","Profile","route","exact","initialState","authenticating","updating","posting","loadingPosts","posted","isLoading","myReducers","combineReducers","action","lastDoc","store","createStore","rootReducers","applyMiddleware","thunk","window","ReactDOM","render"],"mappings":"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","file":"static/js/main.504dcbb3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDhWHYUo31EhafDtO8OdAlDZthmVN85TPI\",\r\n  authDomain: \"realtime-chat-ap.firebaseapp.com\",\r\n  projectId: \"realtime-chat-ap\",\r\n  storageBucket: \"realtime-chat-ap.appspot.com\",\r\n  messagingSenderId: \"930254441751\",\r\n  appId: \"1:930254441751:web:c256a9a83d26e7af4d7b52\",\r\n  measurementId: \"G-8Q95J2GC5R\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","export const authConstants = {\r\n    USER_LOGIN : 'USER_LOGIN',\r\n    USER_LOGOUT : 'USER_LOGOUT',\r\n}\r\n\r\nexport const userConstants = {\r\n    UPDATE_USER_AVATAR : 'UPDATE_USER_AVATAR',\r\n    GET_REALTIME_USERS : 'GET_REALTIME_USERS',\r\n    UPDATE_MESSAGE : 'UPDATE_MESSAGE',\r\n    GET_REALTIME_MESSAGE : 'GET_REALTIME_MESSAGE',\r\n    SET_SEEN_MESSAGE : 'SET_SEEN_MESSAGE',\r\n    GET_LOADMORE_MESSAGE : 'GET_LOADMORE_MESSAGE',\r\n    GET_USER_PROFILE_BY_ID : 'GET_USER_PROFILE_BY_ID'\r\n\r\n}\r\nexport const postConstants = {\r\n    PUSH_POST : 'PUSH_POST',\r\n    GET_REALTIME_POSTS : 'GET_REALTIME_POSTS',\r\n    GET_POST_BY_KEY:'GET_POST_BY_KEY',\r\n    CLEAR_POST_ITEM :'CLEAR_POST_ITEM',\r\n    PUSH_COMMENT : 'PUSH_COMMENT',\r\n    GET_REALTIME_POSTS_NEW_FEED : 'GET_REALTIME_POSTS_NEW_FEED'\r\n}\r\n\r\nexport const interactionConstants = {\r\n    GET_REALTIME_INTERACTIONS : 'GET_REALTIME_INTERACTIONS',\r\n    UPDATE_LIKE : 'UPDATE_LIKES',\r\n}","import firebase from \"../database/firebase\";\r\nimport { authConstants } from \"./constants\";\r\nexport const signUp = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(),\r\n                uid: data.user.uid,\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                const loggedUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\r\n                  \"user\",\r\n                  JSON.stringify({\r\n                    loggedUser,\r\n                  })\r\n                );\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: loggedUser },\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: err,\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: error.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: `${authConstants.USER_LOGIN}_REQUEST`,\r\n    });\r\n    const db = firebase.firestore();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline: true,\r\n          })\r\n          .then(() => {\r\n            var name = data.user.displayName;\r\n            const avatarUrl = data.user.photoURL;\r\n            name = name.split(\" \");\r\n            var stringArray = new Array();\r\n            for (var i = 0; i < name.length; i++) {\r\n              stringArray.push(name[i]);\r\n            }\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n            const loggedUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n              avatarUrl,\r\n            };\r\n            localStorage.setItem(\r\n              \"user\",\r\n              JSON.stringify({\r\n                user: loggedUser,\r\n              })\r\n            );\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n              payload: { user: loggedUser },\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n          payload: { error: err.message },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n        payload: { user: user.user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n\r\n","import { userConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const getRealTimeUser = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    if (uid !== undefined) {\r\n      db.collection(\"users\")\r\n        .where(\"uid\", \"!=\", uid)\r\n        .onSnapshot(function (snap) {\r\n          const users = [];\r\n          snap.forEach((doc) => {\r\n            if (doc.data().length !== users.length) {\r\n              users.push({key : doc.id,...doc.data()});\r\n            }\r\n          });\r\n          dispatch({\r\n            type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n            payload: { users },\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\nexport const updateMessage = ({ msgObj, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    if (type !== \"file\") {\r\n      db.collection(\"conversations\")\r\n        .add({\r\n          ...msgObj,\r\n          type: \"text\",\r\n          isView: false,\r\n          createdAt: new Date(),\r\n        })\r\n        .then((data) => {\r\n          dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n            payload: { error: error.message },\r\n          });\r\n        });\r\n    } else {\r\n      const ref = firebase.storage().ref();\r\n      const name = new Date() + \"-\" + msgObj.file.name;\r\n      const metaData = {\r\n        contentType: msgObj.file.type,\r\n      };\r\n      const task = ref.child(name).put(msgObj.file, metaData);\r\n      task.then((snapshot) => {\r\n        snapshot.ref.getDownloadURL().then((url) => {\r\n          db.collection(\"conversations\")\r\n            .add({\r\n              user_uid_1: msgObj.user_uid_1,\r\n              user_uid_2: msgObj.user_uid_2,\r\n              file: url,\r\n              type: \"file\",\r\n              isView: false,\r\n              createdAt: new Date(),\r\n            })\r\n            .then((data) => {\r\n              dispatch({ type: `${userConstants.UPDATE_MESSAGE}_SUCCESS` });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${userConstants.UPDATE_MESSAGE}_REQUEST`,\r\n                payload: { error: error.message },\r\n              });\r\n            });\r\n        });\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const setSeenMessage = ({ uid_1, uid_2 }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.SET_SEEN_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"==\", uid_2)\r\n      .where(\"user_uid_2\", \"==\", uid_1)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          doc.ref.update({\r\n            isView: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getUserById = ({ uid }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_USER_PROFILE_BY_ID}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(\"users\");\r\n    const postRef = db.collection(\"posts\");\r\n    \r\n    postRef.where(\"uid\", \"==\", uid).onSnapshot(async (snapshot) => {\r\n      const posts = [];\r\n      snapshot.forEach((doc) => {\r\n        posts.push({ key: doc.id, ...doc.data() });\r\n      });\r\n      const userByKey = (await userRef.doc(uid).get()).data();\r\n      dispatch({\r\n        type: `${userConstants.GET_USER_PROFILE_BY_ID}_SUCCESS`,\r\n        payload: { userByKey: { ...userByKey, posts: posts } },\r\n      });\r\n    });\r\n  };\r\n};\r\nexport const updateUserAvatar = (uid, file) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.UPDATE_USER_AVATAR}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = firebase.storage().ref();\r\n    const name = new Date() + \"-\" + file.name;\r\n    const metaData = file.type;\r\n    const task = ref.child(name).put(file, metaData);\r\n    var userLocal = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    task.then((snapshot) => {\r\n      snapshot.ref\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          const user = firebase.auth().currentUser;\r\n          user.updateProfile({\r\n            photoURL: url,\r\n          });\r\n          db.collection(\"users\").doc(uid).update({\r\n            avatarUrl: url,\r\n          });\r\n\r\n          userLocal = {\r\n            ...userLocal.user,\r\n            avatarUrl: url,\r\n          };\r\n        })\r\n\r\n        .then(() => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_USER_AVATAR}_SUCCESS`,\r\n            payload: {\r\n              notify: \"Update successfully\",\r\n              avatarUrl: userLocal.avatarUrl,\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispatch({\r\n            type: `${userConstants.UPDATE_USER_AVATAR}_FALURE`,\r\n            payload: { error: err },\r\n          });\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getLoadMoreConversations = ({ uid_1, uid_2, lastestDoc }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1])\r\n      .startAfter(lastestDoc || 0)\r\n      .limit(10);\r\n    const data = await ref.get();\r\n    lastestDoc = data.docs[data.docs.length - 1];\r\n    const conversations = [];\r\n    data.docs.forEach((doc) => {\r\n      conversations.push(doc.data());\r\n    });\r\n    if (conversations !== []) {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`,\r\n        payload: { conversations: conversations.reverse(), lastestDoc },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`,\r\n        payload: { error: \"END\" },\r\n      });\r\n    }\r\n  };\r\n};\r\nexport const getRealTimeConversations = ({ uid_1, uid_2, type }) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_MESSAGE}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = db\r\n      .collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_2, uid_1]);\r\n    const data = await ref.get();\r\n    const lastestDoc = data.docs[data.docs.length - 1];\r\n    db.collection(\"conversations\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .where(\"user_uid_1\", \"in\", [uid_1, uid_2])\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 === uid_1 &&\r\n              doc.data().user_uid_2 === uid_2) ||\r\n            (doc.data().user_uid_1 === uid_2 && doc.data().user_uid_2 === uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`,\r\n          payload: { conversations: conversations.reverse(), lastestDoc },\r\n        });\r\n      });\r\n  };\r\n};\r\n","import { postConstants } from \"./constants\";\r\nimport firebase from \"../database/firebase\";\r\nexport const pushPost = (post) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.PUSH_POST}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const ref = firebase.storage().ref();\r\n    const name = new Date() + \"-\" + post.file.name;\r\n    const metaData = {\r\n      contentType: post.file.type,\r\n    };\r\n    const task = ref.child(name).put(post.file, metaData);\r\n    task.then((snapshot) => {\r\n      snapshot.ref.getDownloadURL().then((url) => {\r\n        db.collection(\"posts\")\r\n          .add({\r\n            file: url,\r\n            createdAt: new Date(),\r\n            status: post.status,\r\n            uid: post.uid,\r\n            likeCount: 0,\r\n            commentCount: 0,\r\n          })\r\n          .then(() => {\r\n            dispatch({ type: `${postConstants.PUSH_POST}_SUCCESS` });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: `${postConstants.PUSH_POST}_FAILURE`,\r\n              payload: { error: err },\r\n            });\r\n          });\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getPostByKey = (key, ownerId) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.GET_POST_BY_KEY}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const postRef = db.collection(`posts`);\r\n    const userRef = db.collection(\"users\");\r\n    const commentRef = db.collection(\"comments\");\r\n\r\n    postRef.get().then((snapshot) => {\r\n      let postItem = {};\r\n      commentRef\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .where(\"pid\", \"==\", key)\r\n        .onSnapshot(async (commentSnapShot) => {\r\n          const comments = [];\r\n          commentSnapShot.forEach((commentItem) => {\r\n            userRef\r\n              .where(\"uid\", \"==\", commentItem.data().uid)\r\n              .onSnapshot((snap) => {\r\n                snap.forEach((doc) => {\r\n                  comments.push({ sender: doc.data(), ...commentItem.data() });\r\n                });\r\n              });\r\n          });\r\n          const owner = await userRef.doc(ownerId).get();\r\n\r\n          snapshot.forEach((doc) => {\r\n            if (doc.id === key) {\r\n              postItem = { key: doc.id, ...doc.data(), owner: owner.data() };\r\n            }\r\n          });\r\n\r\n          if (postItem !== {}) {\r\n            dispatch({\r\n              type: `${postConstants.GET_POST_BY_KEY}_SUCCESS`,\r\n              payload: { postItem, comments },\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: `${postConstants.GET_POST_BY_KEY}_FAILURE`,\r\n              payload: { error: `Item with key ${key} does not exist` },\r\n            });\r\n          }\r\n        });\r\n    });\r\n  };\r\n};\r\nexport const getRealTimePosts = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.GET_REALTIME_POSTS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    db.collection(\"posts\")\r\n      .where(\"uid\", \"==\", uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const posts = [];\r\n        snapshot.forEach((doc) => {\r\n          db.collection(\"interactions\")\r\n            .where(\"pid\", \"==\", doc.id)\r\n            .onSnapshot((query) => {\r\n              query.forEach((dc) => {\r\n                // interactions.push(dc.data());\r\n              });\r\n              posts.push({\r\n                key: doc.id,\r\n                ...doc.data(),\r\n              });\r\n              dispatch({\r\n                type: `${postConstants.GET_REALTIME_POSTS}_SUCCESS`,\r\n                payload: { posts: posts },\r\n              });\r\n            });\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const getRealTimePostsNewFeed = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(\"users\");\r\n    const postRef = db.collection(\"posts\");\r\n    const commentRef = db.collection(\"comments\");\r\n    const interactionRef = db.collection(\"interactions\")\r\n    postRef.onSnapshot(async (snapshot) => {\r\n      const posts = [];\r\n      snapshot.forEach((post) => {\r\n        posts.push({ key: post.id, comments : [],interactions:[],...post.data() });\r\n      });\r\n      let count = 0;\r\n      for (let i = 0; i < posts.length; i++) {\r\n        const owner = userRef.doc(posts[i].uid).get();\r\n        \r\n        commentRef.where(\"pid\", \"==\", posts[i].key).onSnapshot((snap) => {\r\n\r\n          snap.forEach((cmt) => {\r\n            userRef.where(\"uid\", \"==\", cmt.data().uid).onSnapshot((uSnap) => {\r\n              uSnap.forEach((sender) => {\r\n                posts[i].comments.push({ ...cmt.data(), sender: sender.data() });\r\n              });\r\n            });\r\n          });\r\n        });\r\n        interactionRef.where(\"pid\",\"==\",posts[i].key).onSnapshot((snap)=>{\r\n          snap.forEach((inter)=>{\r\n            userRef.where(\"uid\", \"==\", inter.data().uid).onSnapshot((uSnap) => {\r\n              uSnap.forEach((sender) => {\r\n                posts[i].interactions.push({ ...inter.data(), sender: sender.data() });\r\n              });\r\n            });\r\n          })\r\n          \r\n        })\r\n        posts[i].owner = (await owner).data();\r\n        if (count === posts.length -1 ) {\r\n            dispatch({\r\n              type: `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_SUCCESS`,\r\n              payload: { posts: [...posts] },\r\n            });\r\n        }\r\n        count += 1;\r\n      }\r\n    });\r\n  };\r\n};\r\nexport const pushPostComment = (comment) => {\r\n  return async (dispatch) => {\r\n    debugger;\r\n    dispatch({ type: `${postConstants.PUSH_COMMENT}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const commentRef = db.collection(\"comments\");\r\n    const postRef = db.collection(\"posts\");\r\n    commentRef\r\n      .add({\r\n        ...comment,\r\n        createdAt: new Date(),\r\n        liked: 0,\r\n      })\r\n      .then(() => {\r\n        postRef.doc(comment.pid).update({\r\n          commentCount: firebase.firestore.FieldValue.increment(1),\r\n        });\r\n        dispatch({ type: `${postConstants.PUSH_COMMENT}_SUCCESS` });\r\n      })\r\n      .catch({ type: `${postConstants.PUSH_COMMENT}_FAILURE` });\r\n  };\r\n};\r\n","import firebase from \"../database/firebase\";\r\nimport { interactionConstants } from \"./constants\";\r\nfunction isEmpty(obj) {\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\nexport const updateLike = (interaction) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    const postRef = db.collection('posts')\r\n    db.collection(\"interactions\")\r\n      .where(\"uid\", \"==\", interaction.uid)\r\n      .where(\"pid\", \"==\", interaction.pid)\r\n      .limit(1)\r\n      .get()\r\n      .then((snapshot) => {\r\n        let newObj = {};\r\n        snapshot.forEach((doc) => {\r\n          newObj = {\r\n            key: doc.id,\r\n            ...doc.data(),\r\n          };\r\n        });\r\n\r\n        const empty = isEmpty(newObj);\r\n        if (empty) {\r\n          dispatch({ type: `${interactionConstants.UPDATE_LIKE}_REQUEST` });\r\n          db.collection(\"interactions\")\r\n            .add({\r\n              ...interaction,\r\n              createdAt: new Date(),\r\n            })\r\n            .then(() => {\r\n              postRef.doc(interaction.pid).update({\r\n                likeCount: firebase.firestore.FieldValue.increment(1)\r\n            });\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_SUCCESS`,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_FAILURE`,\r\n                payload: { error },\r\n              });\r\n            });\r\n        } else {\r\n          dispatch({ type: `${interactionConstants.UPDATE_LIKE}_REQUEST` });\r\n          db.collection(\"interactions\")\r\n            .doc(newObj.key)\r\n            .delete()\r\n            .then(() => {\r\n              postRef.doc(interaction.pid).update({\r\n                likeCount: firebase.firestore.FieldValue.increment(-1)\r\n            });\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_SUCCESS`,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              dispatch({\r\n                type: `${interactionConstants.UPDATE_LIKE}_FAILURE`,\r\n                payload: { error },\r\n              });\r\n            });\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const getRealtimeInteractions = (pid) => {\r\n  return async (dispatch) => {\r\n    if (pid != undefined) {\r\n      const db = firebase.firestore();\r\n      dispatch({\r\n        type: `${interactionConstants.GET_REALTIME_INTERACTIONS}_REQUEST`,\r\n      });\r\n      db.collection(\"interactions\")\r\n        .where(\"pid\", \"==\", pid)\r\n        .onSnapshot((snapshot) => {\r\n          const interactionArr = [];\r\n          snapshot.forEach((doc) => {\r\n            interactionArr.push(doc.data());\r\n          });\r\n          dispatch({\r\n            type: `${interactionConstants.GET_REALTIME_INTERACTIONS}_SUCCESS`,\r\n            payload: { interactions: interactionArr },\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Asset 2.5384deb3.png\";","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser, logout } from \"../../actions\";\r\nimport Logo from \"../../images/100ppi/Asset 2.png\";\r\nexport default function Header() {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout(auth.uid));\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navBar\">\r\n        <NavLink to='/realtime-chat-application' className=\"logoArea\">\r\n          <img src={Logo} alt=\"logo\" />\r\n        </NavLink>\r\n        <div className=\"navSide\">\r\n          {!auth.authenticated ? (\r\n            <ul className=\"navWrap\">\r\n              <li className=\"navItem\">\r\n              <NavLink to=\"/realtime-chat-application\" className=\"navLink\">\r\n                Message\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/newfeed\" className=\"navLink\">\r\n                New Feed\r\n              </NavLink>\r\n            </li>\r\n              <li className=\"navItem\">\r\n                <NavLink to=\"/login\" className=\"navLink\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navItem\">\r\n                <NavLink to=\"/signup\" className=\"navLink\">\r\n                  Sign Up\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul className=\"navWrap\">\r\n              <li className=\"navItem\">\r\n              <NavLink to=\"/realtime-chat-application\" className=\"navLink\">\r\n                Message\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navItem\">\r\n              <NavLink to=\"/newfeed\" className=\"navLink\">\r\n                New Feed\r\n              </NavLink>\r\n            </li>\r\n              <li className=\"navItem\">\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/profile/${auth.uid}`,\r\n                    state: { uid: auth.uid },\r\n                  }}\r\n                  className=\"navLink\"\r\n                >\r\n                  {auth.firstName} Profile\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navItem\">\r\n                <Link to=\"#\" onClick={handleLogout} className=\"navLink\">\r\n                  Log out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Header from '../../components/Header/index'\r\nexport default function Layout(props) {\r\n    return (\r\n        <div className='layout'>\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './style.scss'\r\nexport default function Input({value,type,label,onChange,placeholder}) {\r\n    const [inputGroup,setInputGroup] = useState('inputGroup')\r\n    const handleChange = (e)=>{\r\n        const {value}=e.target;\r\n        onChange(value);\r\n    }\r\n    const onFocus = (e)=>{\r\n        setInputGroup('inputGroup onFocus')\r\n    }\r\n    return (\r\n        <div className={inputGroup}>\r\n            <label>{label}</label>\r\n            <input type={type} onFocus={onFocus} onChange={handleChange} placeholder={placeholder} value={value} />\r\n            <div className='line'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Button(props) {\r\n    return (\r\n        <button type={props.type} onClick={props.onClick} className='buttonGold'>{props.children}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nexport default function Title(props) {\r\n    return (\r\n        <div className='title'>\r\n            <p >{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nimport {RiErrorWarningFill} from 'react-icons/ri'\r\nconst Error = (props)=>{\r\n    return(\r\n        <div className='error'>\r\n            <p>{props.children}</p>\r\n            <RiErrorWarningFill className='icon'/>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/Layout/UI/Input/index\";\r\nimport Card from \"../../components/Layout/UI/Card/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Error from '../../components/Layout/UI/Error/index'\r\nimport { signUp } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default function SignUp() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(signUp(form));\r\n  };\r\n  if (auth.authenticated === true) {\r\n    return <Redirect to=\"/realtime-chat-application\" />;\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <form onSubmit={handleSignUp} className=\"authForm\">\r\n            <Title>SIGN UP</Title>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"First name\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, firstName: value })}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Last name\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, lastName: value })}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, email: value })}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, password: value })}\r\n            />\r\n            {\r\n              auth.error ? <Error>{auth.error}</Error>: <></>\r\n            }\r\n            <Button type=\"submit\">SIGN UP</Button>\r\n          </form>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/Layout/UI/Input/index\";\r\nimport Card from \"../../components/Layout/UI/Card/index\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Error from \"../../components/Layout/UI/Error/index\";\r\nimport \"./style.scss\";\r\nimport { signIn } from \"../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signIn(form));\r\n  };\r\n  if (auth.authenticated === true) {\r\n    return <Redirect to=\"/realtime-chat-application\" />;\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <Card>\r\n          <form onSubmit={handleLogin} className=\"authForm\">\r\n            <Title>Login</Title>\r\n            <Input\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, email: value })}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"\"\r\n              onChange={(value) => setForm({ ...form, password: value })}\r\n            />\r\n            {auth.error ? <Error>{auth.error}</Error> : <></>}\r\n            <Button type=\"submit\">LOG IN</Button>\r\n          </form>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/mint.98ef681e.jpg\";","export default __webpack_public_path__ + \"static/media/noavtar.a69237c0.png\";","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport \"./style.scss\";\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineFileGif,\r\n  AiOutlinePicture,\r\n  AiOutlineHeart,\r\n  AiOutlinePhone,\r\n  AiOutlineInfoCircle,\r\n  AiOutlineSend,\r\n  AiOutlineCheckCircle,\r\n  AiFillCheckCircle,\r\n  AiOutlineUser,\r\n  AiOutlineDelete,\r\n  AiOutlineBell,\r\n  AiOutlineLock,\r\n} from \"react-icons/ai\";\r\nimport { BiLoaderCircle } from \"react-icons/bi\";\r\nimport { RiSendPlaneFill } from \"react-icons/ri\";\r\nimport { BsCameraVideo } from \"react-icons/bs\";\r\nimport { MdTagFaces } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getLoadMoreConversations,\r\n  getRealTimeConversations,\r\n  getRealTimeUser,\r\n  setSeenMessage,\r\n  updateMessage,\r\n} from \"../../actions\";\r\nimport noavt from \"../../images/noavtar.png\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Home = () => {\r\n  const [isSelected, setIsSelected] = useState(\"\");\r\n  const [userSelected, setUserSelected] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageImg, setMessageImg] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [menuSelected, setMenuSelected] = useState(-1);\r\n  const {\r\n    users,\r\n    conversations,\r\n    loadingUser,\r\n    loadingChat,\r\n    lastestDoc,\r\n  } = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const viewUser = () => {\r\n    dispatch(getRealTimeUser(auth.uid));\r\n  };\r\n  useEffect(() => {\r\n    viewUser();\r\n  }, []);\r\n  const selectItem = (index) => {\r\n    if (isSelected !== \"\") {\r\n      const prevItem = document.querySelectorAll(\".friend\")[isSelected];\r\n      prevItem.classList.remove(\"isSelected\");\r\n      const curItem = document.querySelectorAll(\".friend\")[index];\r\n      curItem.classList.add(\"isSelected\");\r\n      setIsSelected(index);\r\n    } else {\r\n      const curItem = document.querySelectorAll(\".friend\")[index];\r\n      curItem.classList.add(\"isSelected\");\r\n      setIsSelected(index);\r\n    }\r\n  };\r\n  const initChat = (user) => {\r\n    const users = { uid_1: auth.uid, uid_2: user.uid };\r\n    setUserSelected(user);\r\n    dispatch(getRealTimeConversations(users));\r\n  };\r\n  useEffect(() => {\r\n    if (userSelected != \"\") {\r\n      dispatch(\r\n        getRealTimeConversations({\r\n          uid_1: auth.uid,\r\n          uid_2: userSelected.uid,\r\n          type: \"afterSend\",\r\n        })\r\n      );\r\n    }\r\n  }, [userSelected]);\r\n  useEffect(() => {\r\n    if (userSelected != \"\" && !loadingChat) {\r\n      let chatArea = document.getElementById(\"chatArea\");\r\n      chatArea.scrollTop = chatArea.scrollHeight;\r\n    }\r\n  }, [conversations]);\r\n  useEffect(() => {\r\n    if (messageImg != \"\") {\r\n      img.addEventListener(\"change\", viewFile);\r\n    }\r\n  }, [messageImg]);\r\n\r\n  const img = document.getElementById(\"fileInput\");\r\n  const messImgElement = document.getElementById(\"messageImg\");\r\n  const openFile = (e) => {\r\n    img.click();\r\n    setMessageImg(\"advanced\");\r\n  };\r\n  const viewFile = (e) => {\r\n    const fileSend = document.querySelector(\".fileSend\");\r\n    fileSend.classList.add(\"hasFile\");\r\n    messImgElement.src = URL.createObjectURL(img.files[0]);\r\n  };\r\n\r\n  const submitMessageFile = (e) => {\r\n    e.preventDefault();\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userSelected.uid,\r\n      file: img.files[0],\r\n    };\r\n\r\n    dispatch(updateMessage({ msgObj: msgObj, type: \"file\" }));\r\n    const fileSend = document.querySelector(\".fileSend\");\r\n    fileSend.classList.remove(\"hasFile\");\r\n    messImgElement.src = \"\";\r\n    dispatch(\r\n      getRealTimeConversations({\r\n        uid_1: auth.uid,\r\n        uid_2: userSelected.uid,\r\n        type: \"afterSend\",\r\n      })\r\n    );\r\n  };\r\n  const submitMessage = (e) => {\r\n    e.preventDefault();\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userSelected.uid,\r\n      message,\r\n    };\r\n    if (message !== \"\") {\r\n      dispatch(updateMessage({ msgObj: msgObj }));\r\n      dispatch(\r\n        getRealTimeConversations({\r\n          uid_1: auth.uid,\r\n          uid_2: userSelected.uid,\r\n          type: \"afterSend\",\r\n        })\r\n      );\r\n\r\n      // let chatArea = document.getElementById(\"chatArea\");\r\n      // chatArea.scrollTop = chatArea.scrollHeight;\r\n\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  const handleScroll = () => {\r\n    let body = document.body;\r\n    let chatArea = document.querySelector(\".chatArea\");\r\n    chatArea = chatArea.clientHeight ? chatArea : body;\r\n\r\n    if (chatArea.scrollTop == 0) {\r\n      // const users = { uid_1: auth.uid, uid_2: userSelected.uid,lastestDoc };\r\n      // dispatch(getLoadMoreConversations(users))\r\n      // console.log(users)\r\n    }\r\n  };\r\n  const handleSeen = (e) => {\r\n    dispatch(setSeenMessage({ uid_1: auth.uid, uid_2: userSelected.uid }));\r\n  };\r\n  const handleCloseFriendBox = (e) => {\r\n    e.stopPropagation();\r\n    if (menuSelected >= 0) {\r\n      const myTarget = document.querySelectorAll(\".userMenu\")[menuSelected];\r\n      const clicked = e.target.className;\r\n      if (clicked !== myTarget) {\r\n        myTarget.classList.remove(\"open\");\r\n        setMenuSelected(-1);\r\n      }\r\n    }\r\n  };\r\n  const handleOpenFriendBox = (e, index) => {\r\n    e.stopPropagation();\r\n    document.querySelectorAll(\".userMenu\")[index].classList.add(\"open\");\r\n    setMenuSelected(index);\r\n    if (menuSelected >= 0) {\r\n      document\r\n        .querySelectorAll(\".userMenu\")\r\n        [menuSelected].classList.remove(\"open\");\r\n    }\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"homePage\">\r\n        <div className=\"friendListWrap\">\r\n          {!loadingUser ? (\r\n            <div className=\"friendList\">\r\n              {users.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => {\r\n                    initChat(item);\r\n                    selectItem(index);\r\n                  }}\r\n                  className=\"friend\"\r\n                >\r\n                  <div className=\"avatar\">\r\n                    <img\r\n                      src={item.avatarUrl != null ? item.avatarUrl : noavt}\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <span\r\n                      className={item.isOnline ? \"isOnline\" : \"isOffline\"}\r\n                    ></span>\r\n                  </div>\r\n                  <div className=\"friendState\">\r\n                    <p className=\"friendName\">\r\n                      {item.firstName + \" \" + item.lastName}\r\n                    </p>\r\n                    <div className=\"friendLastText\">\r\n                      <p className=\"lastText\">See you again </p>\r\n                      <span></span>\r\n                      <p>4 hours ago</p>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"friendButton\"\r\n                    onClick={(e) => {\r\n                      index !== menuSelected\r\n                        ? handleOpenFriendBox(e, index)\r\n                        : handleCloseFriendBox(e, index);\r\n                    }}\r\n                  >\r\n                    <button>\r\n                      <div className=\"circle\"></div>\r\n                      <div className=\"circle\"></div>\r\n                      <div className=\"circle\"></div>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"userMenu\">\r\n                    <div className=\"menuGroup\">\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineUser className=\"icon\" />\r\n                        <NavLink to={`/profile/${item.key}`}>\r\n                          Go to profile page\r\n                        </NavLink>\r\n                      </div>\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineBell className=\"icon\" />\r\n                        <span>Turn off notification</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"menuGroup\">\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineDelete className=\"icon\" />\r\n                        <span>Delete conversation</span>\r\n                      </div>\r\n                      <div className=\"menuItem\">\r\n                        <AiOutlineLock className=\"icon\" />\r\n                        <span>Block</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\" loading\">\r\n              <BiLoaderCircle className=\"icon\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {userSelected !== \"\" ? (\r\n          <div className=\"chatBox\">\r\n            <div className=\"headBox\">\r\n              <div className=\"headUser\">\r\n                <img\r\n                  alt=\"avatar\"\r\n                  src={\r\n                    userSelected.avatarUrl != null\r\n                      ? userSelected.avatarUrl\r\n                      : noavt\r\n                  }\r\n                />\r\n                <NavLink to={`/profile/${userSelected.key}`}>\r\n                  <p>{userSelected.firstName}</p>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"headCall\">\r\n                <AiOutlinePhone className=\"icon\" />\r\n                <BsCameraVideo className=\"icon\" />\r\n\r\n                <AiOutlineInfoCircle className=\"icon\" />\r\n              </div>\r\n            </div>\r\n            {!loadingChat ? (\r\n              <div onScroll={handleScroll} id=\"chatArea\" className=\"chatArea\">\r\n                <div className=\"chatAreaWrap\">\r\n                  {conversations.map((item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={\r\n                        auth.uid === item.user_uid_1\r\n                          ? \"chatWrapper right\"\r\n                          : \"chatWrapper left\"\r\n                      }\r\n                    >\r\n                      {auth.uid !== item.user_uid_1 ? (\r\n                        <img\r\n                          alt={index}\r\n                          className=\"avatar\"\r\n                          src={\r\n                            userSelected.avatarUrl !== null\r\n                              ? userSelected.avatarUrl\r\n                              : noavt\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {item.type !== \"file\" ? (\r\n                        <div className=\"messageWrap\">\r\n                          <p key={index}>{item.message}</p>\r\n                        </div>\r\n                      ) : (\r\n                        <img\r\n                          className=\"messageFile\"\r\n                          alt={index}\r\n                          src={item.file}\r\n                          key={index}\r\n                        />\r\n                      )}\r\n                      <AiOutlineCheckCircle\r\n                        className={\r\n                          auth.uid === item.user_uid_1 && !item.isView\r\n                            ? \"icon\"\r\n                            : \"icon gone\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"chatArea loading\">\r\n                <BiLoaderCircle className=\"icon\" />\r\n              </div>\r\n            )}\r\n            <div className=\"typeArea\">\r\n              <div className=\"action\">\r\n                <div className=\"fileSend\">\r\n                  <img alt=\"messageImg\" id=\"messageImg\" />\r\n\r\n                  <div className=\"before\"></div>\r\n                  <AiOutlineSend onClick={submitMessageFile} className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" className=\"fileInput\" />\r\n                  <AiOutlinePlusCircle className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" id=\"fileInput\" className=\"fileInput\" />\r\n                  <AiOutlinePicture onClick={openFile} className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" className=\"fileInput\" />\r\n                  <MdTagFaces className=\"icon\" />\r\n                </div>\r\n                <div className=\"actionWrap\">\r\n                  <input type=\"file\" className=\"fileInput\" />\r\n                  <AiOutlineFileGif className=\"icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"input\">\r\n                <form onSubmit={submitMessage}>\r\n                  <input\r\n                    value={message}\r\n                    onClick={() => handleSeen()}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Aa\"\r\n                  />\r\n                </form>\r\n                <MdTagFaces className=\"icon\" />\r\n              </div>\r\n              <div className=\"likeButton\">\r\n                {message === \"\" ? (\r\n                  <AiOutlineHeart className=\"icon\" />\r\n                ) : (\r\n                  <AiOutlineSend onClick={submitMessage} className=\"icon\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"chatBox unSelected\">\r\n            <RiSendPlaneFill className=\"bigIcon\" />\r\n            <Title>Your Message</Title>\r\n            <p>Send private photos and messages to a friend or group.</p>\r\n            <Button>Send a message</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react'\r\nimport { BiLoaderCircle } from \"react-icons/bi\";\r\nimport './styles.scss'\r\nexport default function Loading() {\r\n    return (\r\n        <BiLoaderCircle className='loadingIcon'/>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport {\r\n  AiOutlineSend,\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n  AiOutlineClose,\r\n} from \"react-icons/ai\";\r\nimport { VscBookmark } from \"react-icons/vsc\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport Button from \"../Layout/UI/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../Layout/UI/Loading\";\r\nimport { pushPostComment } from \"../../actions/post\";\r\nimport { getRealtimeInteractions, updateLike } from \"../../actions\";\r\nconst PostDetail = ({auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [replySelected, setReplySelected] = React.useState([]);\r\n  const [commentValue, setCommentValue] = React.useState(\"\");\r\n  const { post, interaction } = useSelector((state) => state);\r\n  const auth_uid = React.useMemo(()=>{\r\n    return auth\r\n  },[auth])\r\n  const interactionArr = React.useMemo(() => {\r\n    return interaction.interactions;\r\n  }, [interaction.interactions]);\r\n  const { item, loading, comments } = React.useMemo(() => {\r\n    return {\r\n      item: post.postByKey.item,\r\n      loading: post.postByKey.loading,\r\n      comments: post.postByKey.comments,\r\n    };\r\n  }, [post.postByKey.item, post.postByKey.comments]);\r\n  React.useEffect(() => {\r\n    dispatch(getRealtimeInteractions(item.key));\r\n  }, [item.key,dispatch]);\r\n  const closePostDetail = () => {\r\n    const postDetail = document.querySelector(\".postDetail\");\r\n    postDetail.classList.remove(\"open\");\r\n    const replies = document.querySelector(\".replies\");\r\n    if (replies != null) {\r\n      replies.classList.remove(\"view\");\r\n      const newArr = [];\r\n      setReplySelected(newArr);\r\n    }\r\n  };\r\n  const hanldePostComment = (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      content: commentValue,\r\n      pid: item.key,\r\n      uid: auth_uid,\r\n    };\r\n    dispatch(pushPostComment(comment));\r\n    setCommentValue(\"\");\r\n  };\r\n  const openReplyComment = (index) => {\r\n    const newArr = [...replySelected];\r\n\r\n    document.querySelectorAll(\".replies\")[index].classList.add(\"view\");\r\n    newArr[index] = true;\r\n    setReplySelected(newArr);\r\n  };\r\n\r\n  const closeReplyComment = (index) => {\r\n    const newArr = [...replySelected];\r\n    document.querySelectorAll(\".replies\")[index].classList.remove(\"view\");\r\n    newArr[index] = false;\r\n    setReplySelected(newArr);\r\n  };\r\n  const handleLikePost = () => {\r\n    const obj = {\r\n      pid: item.key,\r\n      uid: auth_uid,\r\n    };\r\n    dispatch(updateLike(obj));\r\n  };\r\n  const isInArray = (arr)=> {\r\n    console.log(interactionArr)\r\n      if(arr.length>0)\r\n      {\r\n        for (let i =0;i<arr.length;i++) {\r\n          console.log(arr[i].uid)\r\n          if(arr[i].uid===auth_uid)\r\n          {\r\n            return true;\r\n          }\r\n        }\r\n        return false\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    \r\n  }\r\n  return (\r\n    <div className=\"postDetail\">\r\n      <AiOutlineClose className=\"exit\" onClick={closePostDetail} />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"postWrapper\">\r\n          <div className=\"postImage\">\r\n            <img src={item.file} alt={item.key} />\r\n          </div>\r\n          <div className=\"postStatus\">\r\n            <div className=\"postOwner\">\r\n              <div className=\"ownerAvatar\">\r\n                <div>\r\n                  <img src={item.owner.avatarUrl} alt={item.key} />\r\n                </div>\r\n                <p>{item.owner.firstName + \" \" + item.owner.lastName}</p>\r\n              </div>\r\n              <div className=\"more\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"postDescription\">\r\n              <div className=\"ownerAvatar\">\r\n                <div>\r\n                  <img src={item.owner.avatarUrl} alt={item.key} />\r\n                </div>\r\n                <p className=\"name\">\r\n                  {item.owner.firstName + \" \" + item.owner.lastName}\r\n                </p>\r\n                <p className=\"status\">{item.status}</p>\r\n              </div>\r\n              <div className=\"postedDate\">\r\n                <p>6d</p>\r\n              </div>\r\n              <div className=\"commentBox\">\r\n                {comments.map((item, index) => (\r\n                  <div key={index} className=\"comment\">\r\n                    <div className=\"ownerImage\">\r\n                      <div className='wrap'>\r\n                      <img\r\n                        src={item.sender.avatarUrl}\r\n                        alt={item.sender.firstName}\r\n                      />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ownerDetail\">\r\n                      <div className=\"ownerName\">\r\n                        <div className=\"content\">\r\n                          {\" \"}\r\n                          <p>{item.sender.firstName}</p>\r\n                          <p>{item.content}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"reply\">\r\n                        <span>4d</span>\r\n                        <p>Reply</p>\r\n                        <div className=\"heartIcon\">\r\n                          <AiOutlineHeart className=\"icon\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"viewReplies\">\r\n                        <div className=\"line\"></div>\r\n                        {replySelected[index] ? (\r\n                          <p onClick={() => closeReplyComment(index)}>\r\n                            Hide replies(2)\r\n                          </p>\r\n                        ) : (\r\n                          <p onClick={() => openReplyComment(index)}>\r\n                            View replies(2)\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"replies\">\r\n                        <div className=\"replyItem\">\r\n                          <div className=\"ownerImage\">\r\n                            <img src={Mint} alt={Mint} />\r\n                          </div>\r\n                          <div className=\"ownerDetail\">\r\n                            <div className=\"ownerName\">\r\n                              <div className=\"content\">\r\n                                {\" \"}\r\n                                <p>mint_stillwalks</p>\r\n                                <p>{item.content}</p>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"reply\">\r\n                              <span>4d</span>\r\n                              <p>Reply</p>\r\n                              <div className=\"heartIcon\">\r\n                                <AiOutlineHeart className=\"icon\" />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"postLiked\">\r\n                <div className=\"iconBox\">\r\n                  <div className=\"likeIcon\">\r\n                    {isInArray(interactionArr) ? (\r\n                      <AiFillHeart onClick={handleLikePost} className=\"icon\" />\r\n                    ) : (\r\n                      <AiOutlineHeart\r\n                        onClick={handleLikePost}\r\n                        className=\"icon\"\r\n                      />\r\n                    )}\r\n\r\n                    <BsChat className=\"icon\" />\r\n                    <AiOutlineSend className=\"icon\" />\r\n                  </div>\r\n                  <div className=\"saveIcon\">\r\n                    <VscBookmark className=\"icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"likedBy\">\r\n                  <p>Liked by {interactionArr.length} peoples</p>\r\n                  <p>{item.createdAt.toDate().toDateString()}</p>\r\n                </div>\r\n              </div>\r\n              <form className=\"commentInput\">\r\n                <div className=\"input\">\r\n                  <input\r\n                    onChange={(e) => setCommentValue(e.target.value)}\r\n                    value={commentValue}\r\n                    id=\"postComment\"\r\n                    placeholder=\"Add comment here\"\r\n                  />\r\n                </div>\r\n                <div className=\"button\">\r\n                  <Button type=\"submit\" onClick={hanldePostComment}>\r\n                    Post\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PostDetail;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { AiOutlineClose, AiOutlinePicture } from \"react-icons/ai\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport { BiLock, BiMap } from \"react-icons/bi\";\r\nimport Title from \"../../components/Layout/UI/Title/index\";\r\nimport Button from \"../Layout/UI/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { pushPost } from \"../../actions/post\";\r\nconst ModalPost = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const [postImage, setPostImage] = React.useState(\"\");\r\n\r\n  const closeModalPost = () => {\r\n    document.querySelector(\".modalPost\").classList.remove(\"open\");\r\n  };\r\n  const filePost = document.getElementById(\"filePost\");\r\n  const postImageElement = document.getElementById(\"postImageElement\");\r\n  const openFileInput = () => {\r\n    filePost.click();\r\n    setPostImage(\"advanced\");\r\n  };\r\n  const imageBox = document.querySelector(\".imageBox\");\r\n  const viewFile = (e) => {\r\n \r\n    imageBox.classList.add(\"hasFile\");\r\n\r\n    // console.log(filePost.files.length);\r\n    if (filePost.files.length > 0) {\r\n      postImageElement.src = URL.createObjectURL(filePost.files[0]);\r\n    }\r\n    setPostImage(\"\");\r\n  };\r\n  React.useEffect(() => {\r\n    if (postImage != \"\") {\r\n      filePost.addEventListener(\"change\", viewFile);\r\n    }\r\n  }, [postImage]);\r\n  const handlePost = () => {\r\n    var postText = document.getElementById(\"postText\").value;\r\n    if (filePost.files.length > 0) {\r\n      const post = {\r\n        file: filePost.files[0],\r\n        status: postText,\r\n        uid:auth.uid\r\n      };\r\n      dispatch(pushPost(post));\r\n      imageBox.classList.remove(\"hasFile\");\r\n      postImageElement.src = \"\";\r\n      postText = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"modalPost\">\r\n      <div className=\"modalWrapper\">\r\n        <div className=\"head\">\r\n          <div className=\"title\">\r\n            <Title>Make a post</Title>\r\n          </div>\r\n          <AiOutlineClose onClick={closeModalPost} className=\"icon\" />\r\n        </div>\r\n        <div className=\"poster\">\r\n          <div className=\"posterImage\">\r\n            <img src={Mint} />\r\n          </div>\r\n          <div className=\"posterName\">\r\n            <p>Mint</p>\r\n            <div className=\"securityMode\">\r\n              <BiLock className=\"icon\" />\r\n              <span>Private</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"statusBox\">\r\n          <textarea\r\n            id=\"postText\"\r\n            placeholder=\"What are you thinking ?\"\r\n          ></textarea>\r\n          <div className=\"imageBox\">\r\n            <img id=\"postImageElement\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"postButton\">\r\n          <Button onClick={handlePost}>Post</Button>\r\n          <div className=\"postIcon\">\r\n            <input type=\"file\" id=\"filePost\" />\r\n            <AiOutlinePicture onClick={openFileInput} className=\"icon\" />\r\n            <BiMap className=\"icon\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ModalPost;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport Button from \"../Layout/UI/Button\";\r\nimport Mint from \"../../images/mint.jpg\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserAvatar } from \"../../actions/user\";\r\nconst ModalUpdateAvatar = () => {\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n  const [temp, setTemp] = useState(\"\");\r\n\r\n  const closeModalPost = () => {\r\n    modal.classList.remove('open')\r\n  };\r\n  let fileInput = useRef(null);\r\n  let imgSrc = useRef(null);\r\n  let modal = useRef(null)\r\n  const openFileInput = () => {\r\n    fileInput.click();\r\n    setTemp(\"advanced\");\r\n  };\r\n  const viewPhoto = () => {\r\n    if (fileInput.files.length > 0) {\r\n      imgSrc.src = URL.createObjectURL(fileInput.files[0]);\r\n    }\r\n  };\r\n  const handleUpdateAvatar = ()=>{\r\n      dispatch(updateUserAvatar(auth.uid,fileInput.files[0]))\r\n  }\r\n  useEffect(() => {\r\n    if (temp == \"advanced\") {\r\n      fileInput.addEventListener(\"change\", viewPhoto);\r\n    }\r\n  }, [temp]);\r\n  return (\r\n    <div ref={el=>modal=el} className=\"modalUpdateAvatar\">\r\n      <div className=\"modalWrapper\">\r\n        <AiOutlineClose onClick={closeModalPost} className=\"icon\" />\r\n        <div className=\"modalTitle\">\r\n          <p>Update Avatar</p>\r\n        </div>\r\n        <div className=\"openFile\">\r\n          <button onClick={openFileInput}>Choose a file</button>\r\n          <input\r\n            type=\"file\"\r\n            className=\"input\"\r\n            ref={(el) => {\r\n              fileInput = el;\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"avatarBox\">\r\n          <div className=\"avatarWrap\">\r\n            <img\r\n              id=\"image\"\r\n              ref={(el) => {\r\n                imgSrc = el;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"updateBtn\">\r\n          <Button onClick={handleUpdateAvatar}>Save</Button>\r\n          <Button onClick={closeModalPost}>Cancel</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ModalUpdateAvatar;\r\n","import React from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Button from \"../../components/Layout/UI/Button/index\";\r\nimport {\r\n  AiOutlineSetting,\r\n  AiOutlinePlusCircle,\r\n  AiOutlineHeart,\r\n} from \"react-icons/ai\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport \"./style.scss\";\r\nimport PostDetail from \"../../components/PostDetail/index\";\r\nimport ModalPost from \"../../components/ModalPost/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPostByKey, getUserById } from \"../../actions\";\r\nimport Loading from \"../../components/Layout/UI/Loading/index\";\r\nimport noavt from \"../../images/noavtar.png\";\r\n\r\nimport ModalUpdateAvatar from \"../../components/ModalUpdateAvatar\";\r\n\r\nconst ProfilePage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { user, auth } = useSelector((state) => state);\r\n\r\n  //use Memo\r\n\r\n  const userByKey = React.useMemo(() => {\r\n    return user.userByKey;\r\n  }, [user.userByKey]);\r\n  const auth_uid = React.useMemo(() => {\r\n    return auth.uid;\r\n  }, [auth.uid]);\r\n  const uidParam = React.useMemo(() => {\r\n    return props.match.params;\r\n  }, [props.match.params]);\r\n\r\n  //end use Memo\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getUserById(uidParam));\r\n  }, [uidParam]);\r\n\r\n  const openPostDetail = (key) => {\r\n    \r\n    const postDetail = document.querySelector(\".postDetail\");\r\n    postDetail.classList.add(\"open\");\r\n    dispatch(getPostByKey(key,userByKey.uid));\r\n  };\r\n\r\n  const openModalPost = () => {\r\n    document.querySelector(\".modalPost\").classList.add(\"open\");\r\n  };\r\n\r\n  const openModalUpdateAvatar = () => {\r\n    document.querySelector(\".modalUpdateAvatar\").classList.add(\"open\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ModalPost />\r\n      <ModalUpdateAvatar />\r\n      <PostDetail auth = {auth_uid} />\r\n      {!user.loadingUserByKey ? (\r\n        <div className=\"profile\">\r\n          <div className=\"profileHead\">\r\n            <div className=\"avatar\">\r\n              <div className=\"avatarWrap\">\r\n                {\r\n                  <img\r\n                    src={\r\n                      userByKey.avatarUrl != null ? userByKey.avatarUrl : noavt\r\n                    }\r\n                    alt=\"avatar\"\r\n                  />\r\n                }\r\n              </div>\r\n              <AiOutlinePlusCircle\r\n                onClick={openModalUpdateAvatar}\r\n                className=\"icon\"\r\n              />\r\n            </div>\r\n            <div className=\"details\">\r\n              <div className=\"userName\">\r\n                <p>{userByKey.firstName + \" \" + userByKey.lastName}</p>\r\n                <Button>\r\n                  {auth_uid === userByKey.uid ? \"Edit Profile\" : \"Follow\"}\r\n                </Button>\r\n                <AiOutlineSetting className=\"icon\" />\r\n              </div>\r\n              <div className=\"userFollow\">\r\n                <p>\r\n                  282 <span>followers</span>\r\n                </p>\r\n                <p>\r\n                  1003 <span>following</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"madeUpName\">\r\n                <p>小さなホタル</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {auth_uid === userByKey.uid ? (\r\n            <div className=\"postButton\">\r\n              <Button onClick={openModalPost}>Post something</Button>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"allPosts\">\r\n            {userByKey.posts.length > 0 ? (\r\n              userByKey.posts.map((item) => (\r\n                <div\r\n                  key={item.key}\r\n                  onClick={() => openPostDetail(item.key)}\r\n                  className=\"post\"\r\n                >\r\n                  <div className=\"postImage\">\r\n                    <img alt={item.createdAt} src={item.file} />\r\n                  </div>\r\n                  <div className=\"postHover\">\r\n                    <p>\r\n                      <AiOutlineHeart className=\"icon\" /> {item.likeCount}\r\n                    </p>\r\n                    <p>\r\n                      <BsChat className=\"icon\" /> {item.commentCount}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"post\">\r\n                <p>Havent posted anything</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loadingWrap\">\r\n          <Loading />\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\nexport default ProfilePage;\r\n","import * as React from \"react\";\r\nimport Button from \"../Button\";\r\nimport \"./style.scss\";\r\nexport default function FormChat(props) {\r\n  const onChangeValue = (e)=>{\r\n    props.onChange(e.target.value)\r\n  }\r\n  return (\r\n    <form onSubmit={(e)=>props.handleFunction(e)} style={props.style} className=\"commentInput\">\r\n      <div className=\"input\">\r\n        <input onChange={(e)=>onChangeValue(e)} value={props.value} id=\"postComment\" placeholder=\"Add comment here\" />\r\n      </div>\r\n      <div className=\"button\">\r\n        <Button onClick={(e)=>props.handleFunction(e)} type={props.type}>Post</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport \"./style.scss\";\r\nimport testImg from \"../../images/mint.jpg\";\r\nimport { AiOutlineSend, AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\r\nimport noavt from \"../../images/noavtar.png\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport { VscBookmark } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRealTimePostsNewFeed,\r\n  pushPostComment,\r\n  updateLike,\r\n} from \"../../actions\";\r\nimport moment from \"moment\";\r\nimport Button from \"../../components/Layout/UI/Button\";\r\nimport FormChat from \"../../components/Layout/UI/FormChat\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst NewFeedPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState(\"\");\r\n  const { post, auth } = useSelector((state) => state);\r\n  const posts = React.useMemo(() => {\r\n    return post.posts;\r\n  }, [post.posts]);\r\n  React.useEffect(() => {\r\n    dispatch(getRealTimePostsNewFeed());\r\n  }, []);\r\n  const handleUpdateLike = (pid) => {\r\n    const interaction = {\r\n      pid,\r\n      uid: auth.uid,\r\n    };\r\n    dispatch(updateLike(interaction));\r\n  };\r\n  const isInArray = (arr) => {\r\n    if (arr.length > 0) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].uid === auth.uid) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const handlePushComment = (e,pid) => {\r\n    e.preventDefault();\r\n  \r\n     if(comment!=='')\r\n     {\r\n      dispatch(pushPostComment({ pid, uid: auth.uid, content: comment }))\r\n      setComment('')\r\n     }\r\n    \r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"newFeed\">\r\n        <div className=\"newFeedWrap\">\r\n          <div className=\"swipeSide\">\r\n            <div className=\"storyLine\">\r\n              <div className=\"storyBox\">\r\n                <div className=\"avatarWrap\">\r\n                  <img src={testImg} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"nameWrap\">\r\n                  <p>minttran</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"storyBox\">\r\n                <div className=\"avatarWrap\">\r\n                  <img src={testImg} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"nameWrap\">\r\n                  <p>miran</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"storyBox\">\r\n                <div className=\"avatarWrap\">\r\n                  <img src={testImg} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"nameWrap\">\r\n                  <p>minttran</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"postWrapper\">\r\n              {posts.map((item, index) => (\r\n                <div key={index} className=\"post\">\r\n                  <NavLink to={`profile/${item.uid}`} className=\"postOwner\">\r\n                    <div className=\"ownerImage\">\r\n                      <img\r\n                        src={\r\n                          item.owner.avatarUrl !== null\r\n                            ? item.owner.avatarUrl\r\n                            : noavt\r\n                        }\r\n                        alt=\"owner\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"ownerName\">\r\n                      <p>{item.owner.firstName + \" \" + item.owner.lastName}</p>\r\n                    </div>\r\n                  </NavLink>\r\n                  <div className=\"postImage\">\r\n                    <img src={item.file} alt={item.status} />\r\n                  </div>\r\n                  <div className=\"interactionBox\">\r\n                    <div className=\"button\">\r\n                      {!isInArray(item.interactions) ? (\r\n                        <AiOutlineHeart\r\n                          onClick={() => handleUpdateLike(item.key)}\r\n                          className=\"icon\"\r\n                        />\r\n                      ) : (\r\n                        <AiFillHeart\r\n                          onClick={() => handleUpdateLike(item.key)}\r\n                          className=\"icon\"\r\n                        />\r\n                      )}\r\n                      <BsChat className=\"icon\" />\r\n                      <AiOutlineSend className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"save\">\r\n                      <VscBookmark className=\"icon\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"likedBy\">\r\n                    <p>Liked by {item.interactions.length} peoples</p>\r\n                  </div>\r\n                  <div className=\"postContent\">\r\n                    <div className=\"ownerName\">\r\n                      <span className=\"name\">\r\n                        {item.owner.firstName + \" \" + item.owner.lastName}\r\n                      </span>\r\n                      <span className=\"content\">{item.status}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"viewAllComment\">\r\n                    {item.comments.length > 2 ? (\r\n                      <p>View All {item.comments.length} Comments</p>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"commentBox\">\r\n                    {item.comments.slice(0,2).map((comment, commentIndex) => (\r\n                      <div key={commentIndex} className=\"comment\">\r\n                        <span className=\"name\">\r\n                          {comment.sender.firstName +\r\n                            \" \" +\r\n                            comment.sender.lastName}\r\n                        </span>\r\n                        <span className=\"conent\">{comment.content}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"createdAt\">\r\n                    <p>{moment(item.createdAt.toDate()).fromNow(true)} ago</p>\r\n                  </div>\r\n                  <FormChat\r\n                    onChange={(value) => setComment(value)}\r\n                    style={{ paddingLeft:10,paddingRight:10}}\r\n                    type=\"submit\"\r\n                    value={comment}\r\n                    handleFunction={(e) => handlePushComment(e,item.key)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default NewFeedPage;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        const user = localStorage.getItem(\"user\")\r\n          ? JSON.parse(localStorage.getItem(\"user\"))\r\n          : null;\r\n        if (user) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport SignUp from \"./containers/SignUpPage/index\";\nimport Login from \"./containers/LoginPage/index\";\nimport Home from \"./containers/HomePage/index\";\nimport Profile from \"./containers/ProfilePage/index\";\nimport NewFeed from './containers/NewFeedPage/index'\nimport PrivateRoute from \"./components/Private/index.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLoggedInUser } from \"./actions\";\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  React.useEffect(() => {\n    if (!auth.authenticated) {\n      dispatch(isLoggedInUser());\n    }\n  }, []);\n  const routes = [\n    { path: \"/realtime-chat-application\", name: \"Home\", component: Home },\n    { path: \"/login\", name: \"Login\", component: Login },\n    { path: \"/signup\", name: \"Sign Up\", component: SignUp },\n    { path: \"/newfeed\", name: \"New Feed\", component: NewFeed },\n    { path: \"/profile/:uid\", name: \"Profile\", component: Profile },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {routes.map((route) => {\n          return (\n            <div key={route.name}>\n              {route.name === \"Login\" || route.name === \"Sign Up\" ? (\n                <Route path={route.path} component={route.component} exact />\n              ) : (\n                <PrivateRoute path={route.path} component={route.component} />\n              )}\n            </div>\n          );\n        })}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  uid: \"\",\r\n  email: \"\",\r\n  avatarUrl: \"\",\r\n  authenticating: false,\r\n  authenticated: false,\r\n  error: null,\r\n  notify: \"\",\r\n  updating : false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${authConstants.USER_LOGIN}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      return state;\r\n    case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        firstName: action.payload.user.firstName,\r\n        lastName: action.payload.user.lastName,\r\n        uid: action.payload.user.uid,\r\n        email: action.payload.user.email,\r\n        avatarUrl: action.payload.user.avatarUrl,\r\n        authenticated: true,\r\n        authenticating: false,\r\n        error: null,\r\n      };\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGIN}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        authenticated: false,\r\n        authenticating: false,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      return state;\r\n\r\n    case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { userConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  conversations: [],\r\n  loadingUser: true,\r\n  loadingChat: true,\r\n  lastestDoc: {},\r\n  loadingUserByKey: false,\r\n  userByKey: {\r\n    posts : []\r\n  },\r\n  error: \"\",\r\n  notify : \"\",\r\n  updating :false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUser: false,\r\n        users: action.payload.users,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_REALTIME_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: action.payload.conversations,\r\n        lastestDoc: action.payload.lastDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingChat: false,\r\n        conversations: [\r\n          ...action.payload.conversations,\r\n          ...state.conversations,\r\n        ],\r\n        lastestDoc: action.payload.lastestDoc,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_LOADMORE_MESSAGE}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_USER_PROFILE_BY_ID}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingUserByKey: true,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_USER_PROFILE_BY_ID}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingUserByKey: false,\r\n        userByKey: action.payload.userByKey,\r\n      };\r\n      return state;\r\n    case `${userConstants.GET_USER_PROFILE_BY_ID}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n      case `${userConstants.UPDATE_USER_AVATAR}_REQUEST`:\r\n        state={\r\n          ...state,\r\n          updating:true\r\n        }\r\n        return state;\r\n      case `${userConstants.UPDATE_USER_AVATAR}_SUCCESS`:\r\n        state = {\r\n          ...state,\r\n          updating : false,\r\n          notify: action.payload.notify,\r\n          userByKey : {\r\n            ...state.userByKey,\r\n            avatarUrl: action.payload.avatarUrl,\r\n          }\r\n        };\r\n        return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { postConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  posting: true,\r\n  loadingPosts: true,\r\n  error: null,\r\n  posted: false,\r\n  postByKey: {\r\n    item: {},\r\n    comments: [],\r\n    loading: true,\r\n    error: null,\r\n  },\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `${postConstants.PUSH_POST}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${postConstants.PUSH_POST}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        posting: false,\r\n        posted: true,\r\n      };\r\n      return state;\r\n    case `${postConstants.PUSH_POST}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        posted: false,\r\n        posting: false,\r\n        error: action.payload.error,\r\n      };\r\n    case `${postConstants.GET_REALTIME_POSTS}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts: false,\r\n        posts: action.payload.posts,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts: false,\r\n        error: action.payload.error,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_POST_BY_KEY}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_POST_BY_KEY}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        postByKey: {\r\n          ...state.postByKey,\r\n          item: action.payload.postItem,\r\n          comments: action.payload.comments,\r\n          loading: false,\r\n          error: null,\r\n        },\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_POST_BY_KEY}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        postByKey: {\r\n          ...state.postByKey,\r\n          loading: true,\r\n          error: action.payload.error,\r\n        },\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts: true,\r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_SUCCESS`:\r\n      debugger\r\n      state = {\r\n        ...state,\r\n        loadingPosts: false,\r\n        posts:action.payload.posts,\r\n        error:'',\r\n        \r\n      };\r\n      return state;\r\n    case `${postConstants.GET_REALTIME_POSTS_NEW_FEED}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        loadingPosts : false,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { interactionConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    interactions : [],\r\n    isLoading : false,\r\n    error : null,\r\n    notify : null,\r\n}\r\nexport default (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case `${interactionConstants.UPDATE_LIKE}_REQUEST`:\r\n            // state = {\r\n            //     ...state,\r\n            //     interactions : action.payload.interactions,\r\n            //     isLoading:true,\r\n            // }\r\n            return state;\r\n        case `${interactionConstants.GET_REALTIME_INTERACTIONS}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                isLoading:true,\r\n            };\r\n            return state;\r\n        case `${interactionConstants.GET_REALTIME_INTERACTIONS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                isLoading:false,\r\n                interactions : action.payload.interactions\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer'\r\nimport userReducer from './userReducer'\r\nimport postReducer from './postReducer'\r\nimport interactionReducer from './interactionReducer'\r\nconst myReducers = combineReducers({\r\n    auth : authReducer,\r\n    user : userReducer,\r\n    post : postReducer,\r\n    interaction : interactionReducer,\r\n})\r\n\r\nexport default myReducers","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducers from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(\r\n  rootReducers,\r\n  applyMiddleware(thunk),\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}